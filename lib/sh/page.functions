# --------------------------------------------------------------------------- #
  function svglayers2pdfpages() {

     CROP=10.63 # 3mm in px
     SVGLAYER="$1" ; PDFPAGES="$2"
     SUPERTMP=${TMPID}.`echo $SVGL | md5sum | cut -c 1-4`.tmp
     CANVASWIDTH=`sed ':a;N;$!ba;s/\n//g' $SVGLAYER | # SVG WITHOUT LINEBREAKS
                  sed 's/width=/\n&/g'              | # EXTRACT WIDTH
                  grep "^width="                    | # EXTRACT WIDTH
                  cut -d "\"" -f 2                  | # EXTRACT WIDTH VALUE
                  head -n 1`                          # FIRST WIDTH ONLY
      LAYERNAMES=`sed ':a;N;$!ba;s/\n//g' $SVGLAYER | # SVG WITHOUT LINEBREAKS
                  sed 's/>/&\n/g'                   | # ALL '>' ON NEWLINE
                  sed '/<g/s/scape:label/\nlabel/'  | # PUT NAME LABEL ON NL
                  grep -n ^label | cut -d " " -f 1  | # SELECT/EXTRACT LABELS
                  sort -t= -k 2 -u | sort           | # SORT/UNIQ + SORT NUM
                  grep -v "=\"XX_"                  | # IGNORE XX LAYERS
                  cut -d '"' -f 2`                    # EXTRACT NAMES

      BFOO=NL`echo ${RANDOM} | cut -c 1`F00
      SFOO=SP`echo ${RANDOM} | cut -c 1`F0O
     LOPEN=LA`echo ${RANDOM} | cut -c 2`F0P
   # ----------------------------------------------------------------------- #
   # MOVE LAYERS ON SEPARATE LINES (TEMPORARILY; EASIFY PARSING LATER ON)
   # ----------------------------------------------------------------------- #
     sed ":a;N;\$!ba;s/\n/$BFOO/g" $SVGLAYER | # RM ALL LINEBREAKS (BUT SAVE)
     sed "s/ /$SFOO/g"                       | # RM ALL SPACE (BUT SAVE)
     sed 's/<g/\n<g/g'                       | # REDO GROUP OPEN + NEWLINE
     sed "/mode=\"layer\"/s/<g/$LOPEN/g"     | # PLACEHOLDER FOR LAYERGROUP OPEN
     sed ':a;N;$!ba;s/\n//g'                 | # RM ALL LINEBREAKS (AGAIN)
     sed "s/$LOPEN/\n<g/g"                   | # REDO LAYERGROUP OPEN + NEWLINE
     sed '/^[ ]*$/d'                         | # RM EMPTY LINES
     sed 's/<\/svg>/\n&/g'                   | # PUT SVG CLOSE ON NEW LINE
     sed 's/display:none/display:inline/g'   | # MAKE VISIBLE EVEN WHEN HIDDEN
     tee > ${SUPERTMP}                         # WRITE TO TEMPORARY FILE 

   # ----------------------------------------------------------------------- #
   # WRITE LAYERS TO SEPARATE FILES AND TRANSFORM TO PDF 
   # ----------------------------------------------------------------------- #
     COUNT=1 
     for LAYERNAME in $LAYERNAMES
      do for PAGE in 1 2
         do  if [ $PAGE -eq 1 ]; then
                  XSHIFT=-$CROP
             else XSHIFT=-`python -c "print $CANVASWIDTH - $CROP"`
             fi
             TRANSFORM="transform=\"translate($XSHIFT,0)\""
             NUM=`echo 0000$COUNT | rev | cut -c 1-4 | rev`
             LNAME=`echo $LAYERNAME | md5sum | cut -c 1-6`
                head -n 1 ${SUPERTMP}  | # THE HEADER
                sed "s/$BFOO/\n/g"     | # RESTORE ORIGINAL LINEBREAKS
                sed "s/$SFOO/ /g"      | # RESTORE ORIGINAL SPACES
                tee                    >   ${TMPID}_${NUM}_${LNAME}.svg
                echo "<g $TRANSFORM>"  >>  ${TMPID}_${NUM}_${LNAME}.svg
                grep "inkscape:label=\"$LAYERNAME\"" ${SUPERTMP} | #
                sed "s/$BFOO/\n/g"     | # RESTORE ORIGINAL LINEBREAKS
                sed "s/$SFOO/ /g"      | # RESTORE ORIGINAL SPACES
                tee                    >>  ${TMPID}_${NUM}_${LNAME}.svg
                echo "</g>"            >>  ${TMPID}_${NUM}_${LNAME}.svg
                echo "</svg>"          >>  ${TMPID}_${NUM}_${LNAME}.svg 
                inkscape --export-pdf=${TMPID}_${NUM}_${LNAME}.pdf \
                         --export-text-to-path ${TMPID}_${NUM}_${LNAME}.svg
                conformColor ${TMPID}_${NUM}_${LNAME}.pdf
                rm ${TMPID}_${NUM}_${LNAME}.svg
             echo $NUM:$LAYERNAME >> `echo $PDFPAGES | #
                                      sed 's/\.[a-z]*$//'`.pageinfo
             COUNT=`expr $COUNT + 1`
         done
     done
   # ----------------------------------------------------------------------- #
   # MAKE MULTIPAGE PDF
   # ----------------------------------------------------------------------- #
     pdftk ${TMPID}_*.pdf cat output $PDFPAGES
   # ----------------------------------------------------------------------- #
   # CLEAN UP(OBSOLETE?)
   # ----------------------------------------------------------------------- #
     rm ${TMPID}_*.pdf $SVGLAYER

  }
# --------------------------------------------------------------------------- #

 function mkpages() {

   FIRSTPAGEIS="" # RESET
 
   PDFSRC=`echo $* | sed 's/ /\n/g'    | # SPACES TO NEWLINES
           egrep "\.svg$|\.pdf$"       | # SELECT ENDING WITH .svg/.pdf
           head -n 1`                    # SELECT FIRST
    PAGES=`echo $* | sed 's/ /\n/g'    | # SPACES TO NEWLINES
           sed "/[^0-9\\-]/d"          | # NO LINES WITH MORE THAN NUMS AND -
           egrep -v "^-|-$"            | # IGNORE ISOLATED - 
           grep -v "^[ ]*$" | tail -n 1` # 
      EXT=`echo $PDFSRC | rev | cut -d "." -f 1 | rev`
 
   if [ `echo $PAGES | wc -c` -le 1 ]; then
         PAGES=-
   elif [ `echo $PAGES | grep "^[0-9]" | wc -l` -ge 1 ]; then
         P1=`echo $PAGES | cut -d "-" -f 1`
         if [ `python -c "print $P1 / 2.0" | #
               cut -d "." -f 2` -lt 5 ]; then
               FIRSTPAGEIS="even"
         else
               FIRSTPAGEIS="odd"
         fi
   else
         PAGES=- ; PAGECOMMAND=""
   fi
 
   PDFGET=${TMPID}`echo $PDFSRC | md5sum | cut -c 1-6`.pdf
   SVGTMP=${TMPID}`echo $PDFSRC | md5sum | cut -c 4-9`.svg
 
   if [ -f $PDFGET ]; then
        echo "$PDFGET exists"
   else 
        if [ "X$EXT" == "Xsvg" ]; then
    
              getFile $PDFSRC $SVGTMP
    
        if [ "X$SUCCESS" == "XYES" ]; then
              SVGTMP=`realpath $SVGTMP`
              svglayers2pdfpages $SVGTMP $PDFGET
        fi
    
        elif [ "X$EXT" == "Xpdf" ]; then
    
               getFile $PDFSRC $PDFGET   
               conformColor $PDFGET
        fi
   fi

 }
# --------------------------------------------------------------------------- #





