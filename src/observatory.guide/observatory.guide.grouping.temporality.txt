%    __NOPUBLISH__
%!HEADER: Temporality
%!SUBH: Constellations of time and locality

>[T]he railroad, which worked a revolutionary change in civilization.
> It increased the tempo of business activities [...]
> The foundation on which our business is built is the saving of time
> for all people and all industries throughout the world, to give more
> time in which to do given tasks, and to make available more time for
> still further advancement and progress. The railroads and [IBM] [...]
> have a common mission—both function to increase the profi ts and
> accelerate the progress of business by conserving the most precious of
> all commodities — T I M E."
> [@[pg.102]harwood:2011:interface]

% QUOTESTYLE: intro

>The concept of time sharing was developed in the late 1950s,
> mainly motivated by the aim to make efficient use of expensive
> mainframe computers by avoiding idle times. Time sharing refers to
> the (seemingly) simultaneous access of multiple users that are
> connected via terminals to a central computer, technically based on
> the flexible allocation of CPU time to concurrent user processes.
> The first experimental implementation, the Compatible Time Sharing
> System (CTSS), was deployed at the MIT in 1961 on an IBM 709 computer,
> [@[pg.25]kaldrack:2015:there]

% QUOTESTYLE: intro

>[M]achines have their natural cycle: the vibrating pulses of its internal
> clock drives the cycles according to which the processor works. The time
> of the computer is linked to this clock cycle, as it consists in counting
> cyclical ticks. This produces a cyclical time rhythm in the  hardware,
> on which time experience in the software is based. However, time in a
> computer is no unique or unified experience. Several hardware components
> and a diverse collection of software  organised in layers and processes
> create a whole ecology of interdependent time experiences.
> [@lammerant:2017:tgsotime]

% QUOTESTYLE: intro

> _Real time_ is defined as time measured from some fixed point, either from
> a standard point in the past (see the description of the  Epoch and calendar
> time below), or from some point (e.g., the start) in the life of a process
> (elapsed time). _Process time_ is defined as the amount of CPU time used by
> a process. This is sometimes divided into user and system  components.
> _User CPU time_ is the time spent executing code in user mode. _System CPU time_ 
> is the time spent by the kernel executing in system mode on behalf of  the process
> (e.g., executing system calls). The [`time`](https://linux.die.net/man/1/time)
> command can be used to determine the amount of CPU time consumed during the execution
> of a program. A program can determine the amount of CPU time it has consumed
> using [`times`](https://linux.die.net/man/2/times),
> [`getrusage`](https://linux.die.net/man/2/getrusage),
> or [`clock`](https://linux.die.net/man/3/clock).
> [@linuxmanual:2018:time]

% QUOTESTYLE: intro

