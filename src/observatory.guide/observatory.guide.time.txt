% METHOD: The ends of time

% REMEMBER:

% WHAT: Command line scripts to investigate computer clocks, system cycles and software temporalities.

% HOW:
% WHEN:
% WHO:
% URGENCY:
% NOTE:

% WARNING:

% EXAMPLE: The Year 2038 problem

https://en.wikipedia.org/wiki/Year_2038_problem
Exact moment of the epoch:
03:14:07 UTC on 19 January 2038

local UNIX time of this machine
% SRCCODE: bash date +%s

UNIX time + 1
% SRCCODE: bash echo $((`date +%s` +1 ))

% EXAMPLE: Goodbye unix time

% -------
    while :
    do
      sleep 1
      figlet $((2147483647 - `date +%s`))
    done
% SRCCODE: bash

% EXAMPLE:  Sundial Time Protocol Group tweaks

% -------
    printf 'Current Time in Millennium Unix Time: '
    printf $((2147483647 - `date +%s`))
    echo
    sleep 2
    echo $((`cat ends-of-times/idletime` + 2)) \
         > ends-of-times/idletime
    idletime=`cat ends-of-times/idletime`
    echo
    figlet "Thank you for having donated 2 seconds to \
           our ${idletime} seconds of collective SSH  pause "
    echo 
    echo
% SRCCODE: bash


% http://observatory.constantvzw.org/images/Screenshot_from_2017-06-10_172547.png
% SHOW: tgsoimages.svg timeimg

% RELATESTO: http://pad.constantvzw.org/p/observatory.guide.experiencingtime
% RELATESTO: http://pad.constantvzw.org/p/observatory.guide.scrollresistance
% SOURCE: Method extracted from notes on [the ends of time.](http://observatory.constantvzw.org/etherdump/ends-of-time.html) On the following pages a reflection by Hans Lammerant, _How humans and machines negotiate the experience of time_.


