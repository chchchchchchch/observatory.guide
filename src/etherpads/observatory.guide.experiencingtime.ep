{"pad:observatory.guide.experiencingtime:chat:0":{"text":"oh boy","userId":"a.cfH87GlVK65PsVJR","time":1522607773583},"pad:observatory.guide.experiencingtime:chat:1":{"text":"i wonder if we put this on the final things pad or just authorize me to clean up the language?","userId":"a.cfH87GlVK65PsVJR","time":1522607815976},"pad:observatory.guide.experiencingtime:chat:2":{"text":"and you and i can move through the rest of them?","userId":"a.cfH87GlVK65PsVJR","time":1522607824767},"pad:observatory.guide.experiencingtime:chat:3":{"text":"I think we can ask hans to answer your questions/edits","userId":"a.Yuc89brzNTYjBp89","time":1522607830411},"pad:observatory.guide.experiencingtime:chat:4":{"text":"ah good call","userId":"a.cfH87GlVK65PsVJR","time":1522607836688},"pad:observatory.guide.experiencingtime:chat:5":{"text":"i think we should besides groupmail, do individual ones","userId":"a.Yuc89brzNTYjBp89","time":1522607846628},"pad:observatory.guide.experiencingtime:chat:6":{"text":"ok lets do that","userId":"a.Yuc89brzNTYjBp89","time":1522607856236},"pad:observatory.guide.experiencingtime:chat:7":{"text":"yes. i agree","userId":"a.cfH87GlVK65PsVJR","time":1522607865519},"pad:observatory.guide.experiencingtime:chat:8":{"text":"ok so this one is done for now","userId":"a.cfH87GlVK65PsVJR","time":1522607874368},"pad:observatory.guide.experiencingtime:chat:9":{"text":"next","userId":"a.cfH87GlVK65PsVJR","time":1522607884045},"pad:observatory.guide.experiencingtime:revs:0":{"changeset":"Z:1>fc|8+df+1x$__NOPUBLISH__\n\nWelcome to Constant Etherpad!\n\nThese pads are public. To prevent them from appearing in the archive and the RSS feed on Constant, put the word __NOPUBLISH__ (including surrounding double underscores) anywhere in your pad.\nPads are archived every night around 04:00 CET at http://etherdump.constantvzw.org\n\nTo stay informed about Constant infrastructures, please subscribe to this mailinglist: https://tumulte.domainepublic.net/cgi-bin/mailman/listinfo/infrastructures\nMore about the way pads work: https://pad.constantvzw.org/p/etherpads","meta":{"author":"","timestamp":1517420188785,"atext":{"text":"__NOPUBLISH__\n\nWelcome to Constant Etherpad!\n\nThese pads are public. To prevent them from appearing in the archive and the RSS feed on Constant, put the word __NOPUBLISH__ (including surrounding double underscores) anywhere in your pad.\nPads are archived every night around 04:00 CET at http://etherdump.constantvzw.org\n\nTo stay informed about Constant infrastructures, please subscribe to this mailinglist: https://tumulte.domainepublic.net/cgi-bin/mailman/listinfo/infrastructures\nMore about the way pads work: https://pad.constantvzw.org/p/etherpads\n","attribs":"|9+fd"}}},"pad:observatory.guide.experiencingtime:revs:1":{"changeset":"Z:fd<dg|1=e|7-d1-1x*0|1+10*0+i$                                   \nexperience of time","meta":{"author":"a.I4FbrrCTDQNN8GIf","timestamp":1517420192598}},"pad:observatory.guide.experiencingtime:revs:10":{"changeset":"Z:f1f>2|g=4bk=1*0+2$# ","meta":{"author":"a.I4FbrrCTDQNN8GIf","timestamp":1517420642994}},"pad:observatory.guide.experiencingtime:revs:100":{"changeset":"Z:f2v>1|1b=b7f=9*5+1$ ","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1518026025075,"atext":{"text":"%__NOPUBLISH__\n\n# How humans and machines negotiate the experience of time\n\nThe experience of time is an essential element of any form of experience or cognition. Emotions depend to a large extent on expectations, or the potential coming of a future event. Any observing or experience of difference, of presence related to an earlier or later absence, is linked with an experience of time.\nHowever, how the actual experience of time is shaped is strongly influenced by all sort of design decisions and implementations, both for humans and machines. Also, the experience of time is a conglomerate of different experiences: time as a common moment, the duration of a certain time, time as cyclic events, historical time, ... Researching how humans and machines experience time and negotiate their time experiences is therefore an interesting avenue to explore.\n\nHumans have developed a time experience which was linked to natural life cycles, but it has been influenced by both technology and social conditions.\nA first time cycle is the day-night time cycle. Humans do their stuff during the day, but need to sleep. The night is generally the preferred time for sleep, but the availability of artificial light and the need for longer-distance coordination has influenced how humans dealt with the day cycle and the place for sleep in it.\nTime measurement also developed: early time measurement was linked to observation of natural circumstances like sunrise and sunset. Measurement of such sun cycle (which is in fact an earth cycle) through sundials allowed for a more precise time referencing, but it is very place and season dependent. More light during summer than winter implied that hours were longer in summer than in winter. Similarly such changes were larger at higher latitudes, while near the equator such changes are limited. In other words, time measured by sundials provided a local common reference of time, but not one over longer distances.\nThis seasonal time experience when the human world was flat reflects the unknown spherical geometry of the earth cycle projected on the flat earth. When humans became aware of earth as a sphere, they responded by flattening and linearising time. Mechanical clocks allowed to unify time lengths and thereby also standardise time. Physical observation and all sorts of economic processes needed such standardised time measurement. Early versions of such time measurement, like hourglasses, existed but remained disconnected from day time measurement. Mechanical clocks allowed to unify different time cycles and scales. It also allowed standardisation of time over longer distances, departing from the local sundial time to time zones, which were less strictly linked to the seasonal rhythm of the sun but more to geographical zones. Long distance trade, industrialisation and later long-distance communication by electro-magnetic signals (comparable to the speed of light) demanded more geographical coordination. In the 19th century coordination developed through clock networks, with a master clock driving the slave clocks. Nowadays we work with atom clocks and a global Coordinated Universal Time or UTC as a reference to which geographical time zones are connected. Humans organised their activities accordingly, if necessary by de-linking from the solar rhythm. The borders of time zones diverge very often from the longitudinal lines for economic and political reasons.\nA similar socialisation and globalisation of time occurred for computers. Where in the early computer age time was set and counted locally by each machine, it is now common to continuously synchronise time over the internet through time servers and the Network Time Protocol. Humans get woken, cron jobs get triggered, precision bombs get guided and trains count their delays in measure with the drill signal of the Master Clock of the US Naval Observatory, only differing by tiny variations in latency times. \n\nHumans also developed ways to relate to time on a longer scale, which were originally linked to natural rhythms: years, life cycles. Calendar systems were used to determine seasonal agricultural needs (when to plant, when to harvest), while they also allowed to keep track of life cycles and historical time. Again, such calendar systems have been very diverse and local, but got slowly fused to a couple of dominant models. \nGenerational or birth, life and death rhythms, originating from the human experience, have been projected on all sorts of phenomena. Religions tried to explain the origin of everything, while also often predicting the end in apocalyptic visions. The demise of religion at the hand of science did not let such generational visions disappear. They got new expressions in scientific theories of the beginning (big bang, evolution) and end (the heath death of the universe, the end of the earth at the final burnout phase of the sun) of everything. Similar apocalyptic visions are now embedded through technological design decisions (Y2K, the end of Unix-time in 2038). In all versions the end is often linked to the specific design of time (e.g. the end of the Maya calendar, millenarian movements). But just like religious visions can extend their apocalypse in a new versions (e.g. the always near but always delayed apocalypse of the Saints of the last days), machinic accounts of time can always be extended by enlarging the bit size of the time range (cfr the extension of Unix time till AD 292277026596, or safely after the end of the observable universe according to contemporary physics).\n\n## The time(s) of the machine\n\nAlso machines have their natural cycle: the vibrating pulses of its internal crystal clock drives the cycles according to which the processor works. All PCs have such a Real Time Clock (RTC), independent of the processor. The time of the computer is linked to this clock cycle, as it consists in counting cyclical ticks. This produces a single cyclical, and completely linear, time rhythm in the hardware. In contrast to the earthly or natural cycles it is without any seasonal difference or interference between several cycles. This makes a computer into a monadic time capsule, disconnected from the outside rhythms.\nThe time experience in the software is in principle based on this local time cycle. However, once computers and software gets linked and networked, they have to negotiate and synchronize their times.\nTo start, time in a computer is no unique or unified experience. Several hardware components and a diverse collection of software organised in layers and processes create a whole ecology of interdependent time experiences. The operating system experiences other software components, and users through them, as a bunch of processes screaming for attention. One of the most pushy interrupts is the timer forcing the processor to count another click and update the system time. An internal kernel process performs the negotiation of time through which the clock count is linked with a system time. \nThis starts already during the booting process, when the operating system is determining the clock signal frequency. PCs have another time-measuring device, the Programmable Interval Timer\n(PIT), which can be set by the processor at a defined frequency. During a short time indicated by this PIT the clock cycles of the RTC get counted and the frequency of the RTC gets calculated. Several other timing devices are present in the hardware, synchronized by kernel processes into a range of times available for the operating system and the processes. As said, one of these times is available as system time and gets communicated to all other processes when demanded. \nWith the advent of the internet computers are no monads anymore, but are socialised in the common rhythm broadcasted with the Network Time Protocol. The local system time serves as back up, but gets continuously adapted to the network time. On a Ubuntu/Debian machine these times can be checked with timedatectl status. The timedatectl command enables to change these synchronisation processes. The actual synchronisation is done by the timesyncd process and the time servers to be used can be set in the /etc/systemd/timesyncd.conf file. Other Linux flavours work with the older ntp process which can be configured in /etc/ntp.conf. \n\nThe actual process time is completely different from this system time. Most of the time processes are put on hold and when the scheduler gives them time they can proceed till the next on hold is forced to make time for another process. The scheduler is the big organiser of time in the internal ecology of processes.\nSystem time is externally counted and therefore an external global variable to these processes. They can all send a demand to the kernel to get the system time. This gets communicated through the software stack with a range of system calls of the kernel and through the specific time modules of the programming language the software is programmed in.\nThe difference between the actual process time and system time does not appear in how time is perceived by the process. The process only perceives time as the difference between two demands of system time and is oblivious of its time being put on hold. The processor on the other hand spent most of its processing time as idle time: a processor is doing time waiting for slow system components like memory and even slower hard drives and network connections to respond and switches between checking for responses of these laggards. L’enfer du temps perdu, ce sont les autres.\n\nConnecting computers into a network demands new negotiations of time. We already mentioned the networked and globalised UTC timekeeping. But temporal negotiations happen on all levels of the system. Network protocols have timed choreographies to make connections and proceed with communications, with time out failsafes to break off when something goes wrong. The timing of an action is an essential component making the difference between a meaningful signal and noise.\nUsing a browser over http to connect to a website, or better the server providing the website on your request, is built on a discontinuous time practice. In a REST architecture the server just deals with a queue of requests and does not see continuity over time between certain requests from a single user.  New temporal practices have been designed and technically implemented. Through cookies the server is able to recognise users and their state in time. \nThe border between your computer and servers on the internet becomes fuzzy when external software is dropped on your computer and runs  in your webbrowser. Javascript modules get dropped on your computer and can start performing tasks on demand of an external server, be it rendering a graph or mining digital money. Similarly, the browser becomes a border where time gets negotiated through synchronisation processes.\nWhat time exactly is depends on the task at hand. Each tool contains its specific temporal practices, dependent on the speed and subject matter of the synchronisation process needed.\nFor example, for collaborative document editing tools like Google Docs or Etherpad it is a sequence of versions of the document. A range of strategies have been developed to allow to synchronize the changes made by different users with the least amount of conflict. \nThe Easysync-protocol used by Etherpad constructs a document from changesets. A changeset details the edits made by a user or the difference with the former local version of the text. In other words, the flow of time is represented through a series of changesets which can be summed to the present state. The server keeps a sequence of acknowledged changesets. These acknowledged changesets represent the current common state and get communicated to all clients. \nLocally each client builds its present state by summing up the acknowledged changesets received from the server, and with the local changesets which are not yet acknowledged. Each client communicates its local changesets, every 500 ms after the latest acknowledgment.  As this changeset can be relative to an earlier version the server first recalculates a changeset relative to the current version. Then it sends an acknowledgment to the sender and the changeset to the other clients. \nDifferent collaborative document editing tools use different methods to deal with conflicts, which also are dependent on the purpose or content of the document. Conflicts between numeric edits in a collaborative spreadsheet are dealt with differently than conflicts between text edits. But common is that the present gets continuously constructed on the server and on the clients and negotiated through the specific protocol. The user can always access its local copy of the text and create its local present, but it gets negotiated with the server to create a common present. \nAnd every tool rings also its own disasters and apocalyptic experiences through the collapse of the negotiation process and thereby of the common state.\n\nThis negotiation of time is in the first place a negotiation of the present. But also what is past and future gets constructed in this present. The ordered sequence connected to the system time(s) already imply such a past and future. But the construction of a past consists also of a negotiation of what remains and what gets forgotten. Data gets stored in memory or written to storage devices, while the operating systems assigns time stamps to these traces of the present becoming past and writes other traces to a range of log files. \nAs writers trying to capture their stream of consciousness already experienced, it is impossible to completely store the present for future use as past. There will always be a remainder that escapes and can not be written down. Also an operating systems can not keep a log of all its operations without getting stuck in an infinite regress in which it tries to log its logging operations. What will be the past for a future present needs to be constructed and selected. Everything else gets forgotten.\nLinux stores its logs in /var/log, while all sorts of programs can create their own logs. All these logs are specific histories, for example of what programs got installed. To get an idea of your past on a Linux system in the file system, you can collect the timestamps of all files with:\n\n% -----------------\nos.system(\"ls -R -l --time-style=long-iso \\\n           > modlistsystem-long-iso.txt\")\nos.system(\"ls -R -lu --time-style=long-iso \\\n          > accesslistsystem-long-iso.txt\")\n\n% SRCCODE:\n\n## Renegotiating time with your computer: sundial network time.\n\nTechnology has been a tool through which humans created distance with natural cycles and designed its own time experiences. This means we can critically intervene in the functioning of the technology and develop alternative time practices and experiences. As an example we put forward as a not-yet-existing-proof of concept the possibility to let the computer work according to sundial time.\nIs it possible to reconfigure the time of the computer and rewire the connections with human and natural rhythms? Would we be able to let the computer function in an older human time experience, e.g. the time of the sundial? How can such sundial experience be built into the system and what would be the impact on the user?\nSundial time is a geographically and seasonally localised time. It also includes a distinction between day and night. The night is ‘out of time’. This distinction has been extradited from linear time practices, where the amount of light is just a variable external to steady beat of time. Linear time allows to turn the night into economically productive time. Running your computer on sundial time re-introduces the night in your system.\n\nAn intervention to introduce sundial time in your computer is possible in the whole range of places we discussed where time gets negotiated. The most fundamental but also most difficult route would be to exchange the clock with something reflecting a more natural rhythm. However, as we have seen that this clock has become only a back up tool and that the actual system time is always renegotiated with other systems connected through the network, another renegotiation process can be introduced. Therefore, the most easy way to introduce sundial time would be to reconfigure the timesyncdor ntp processes and make them listen to an alternative sundial time server. Such sundial time server can be built in different ways. A hardware version can be made of a sundial combined with light sensors, measuring the location of the shadow through the difference in light and deriving the sundial time from this location. This would link the time server to the actual earthly day and night cycle. A simulated version could be a local piece of software which looks up the timing of sunrise and sunset at the specific location and day. Based on this information it recalculates the local sundial time, which it provides through the NTP protocol. The local computer receives this sundial time from the nearest sundial time server and continuously adapts its system time, as it does now already based on UTC. Further, it can be programmed to go into sleep modus during the night and to wake up only when a sunrise signal is received from the time server.\n\nLetting a computer run on sundial time is a conscious effort to disconnect it from human-made linear time and to reconnect it with the old earth-driven cycles and the ancient time experience by humans. The unified time of UTC and the time zones gets broken up into extremely localised time servers, while also the difference between day and night gets introduced into the functioning of the computer. \nThis re-enactment of such cycles through the computer will remind human users that the experience of time is a socially negotiated and technically implemented experience. Further, a computer running on sundial time would be a great piece of nannyware nudging the user to live in harmony with his natural environment and a synchronisation tool to re-establish the link between the users bio-rhythm and the earthly day and night cycle. It would also be a great reminder why humans tried in the first place to escape from these earthly rhythms through technology and started hacking time.\n\nHans Lammerant, January 2018\n\n\nPS. This text was written in and in resistance/conflict to WTC time, which is exemplary for the bureaucratic office time experience. The WTC building boots up at 9AM and is turned off in several steps (at 5PM the air conditioning is turned off, later entrances close) into a wake state. The concierge can let you in and out through the night side entry, but main life support systems remain turned off outside office hours. This wake state continues during the weekend, turning the building into a glass house with limited air in storage. On Monday morning this bureaucratic time capsule revives from its slumber. A suffocating experience, but actually the building is a great piece of nannyware nudging towards a healthy office rhythm without too much extra hours outside the herd work ethic.\n\nSuch office time can also be implemented and negotiated on your local computer. A small Proof of Concept was the adapted bashrc on the etherbox simulating a system getting bored and stealing time. This can be further developed by including a differentiated response during versus outside office hours, aging (slower when timestamp of original install is more remote in time), etc.\n\n","attribs":"*5+1|1+e*0|9+1hy*0+se*0*1+2*0|d+3mh*0+8c*0*2+i*0+6*0*2+b*0+2u*0*2+9*0+3q*0*2+3*0|i+4hp*0+80*5|1+1*0|1+1*5|1+k*0+16*5|1+2*5+b*0|1+v*0+17*5|1+2*5+a*0|1+y*5|2+c*0|7+xy*0+g5*0*2+9*0+3*0*2+3*0|b+2fe|1+1"}}},"pad:observatory.guide.experiencingtime:revs:1000":{"changeset":"Z:fy1>4|e=2zj=7p*d+4$he u","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147191337,"atext":{"text":"__% NOPUBLISH__\n% SHOW: tgsoimages.svg hans H\n\n\n% HEADER: How humans and machines negotiate the experience of time\n\nThe experience of time is an essential element of any form of experience or cognition. Emotions depend to a large extent on expectations, or the potential coming of a future event. Any observing or experience of difference, of presence related to an earlier or later absence, is linked with an experience of time. However, how the actual experience of time is shaped is strongly influenced by all sort of design decisions and implementations, both for humans and machines. Also, the experience of time is a conglomerate of different experiences: time as a common moment, the duration of a certain time, time as cyclic events, historical time, and so on. Researching how humans and machines experience time and negotiate their time experiences is therefore an interesting avenue to explore\n\nHumans have developed a time experience which was linked to natural life cycles, but it has been influenced by both technology and social conditions. The first time cycle is the day-night time cycle. Humans do their stuff during the day, but need to sleep. The night is generally the preferred time for sleep, but the availability of artificial light and the need for long-distance coordination has influenced how humans deal with the day cycle and the place for sleep in it. Part of this experience is measuring time. Early time measurement was linked to observation of natural conditions like sunrise and sunset. Measurement of such sun cycles (which is in fact an earth cycle) through sundials allowed for more precise time referencing, but it is very place and season dependent. More light during summer than winter implied that hours were longer in summer than in winter. Similarly such changes were greater at higher latitudes, while near the equator such changes are limited. In other words, time measured by sundials provided a local common reference of time, but not one common time over longer distances.\n\n\nThis season is the time of day when the world is flatter the earth's spherical geometry. When humans became aware of earth, they responded by flattening and linearising time. Mechanical clocks allowed to unify time lengths and thereby aussi standardize time. Physical observation and all spells of economic processes needed Such standardized time measurement. Early versions of such time measurement, such as hourglasses, exist but disconnected from day time measurement. Mechanical clocks allowed to unify different time cycles and scales. It also allowed standardzation of time over longer distances, departing from the local time to time zones, which were less strictly related to the seasonal rhythm of the sun. Long distance trade, industrialization and later long-distance communication by electro-magnetic signals (similar to the speed of light) Demanded more geographical coordination. In the nineteenth century, coordination developed through clock networks, with a master clock driving the slave clocks. Nowadays we work with atomic clocks and has overall Coordinated Universal Time or UTC have a reference to qui geographical time zones are connected. Humans organize their activities accordingly, if necessary by de-linking from the solar rhythm. The borders of time zones diverge very often from the longitudinal lines for economic and political reasons.\nA similar socialization and globalization of time occurred for computers. Where in the early computer age Time Was set and counted locally by each machine, it is now common to continuously synchronize time over the Internet through time servers and the Network Time Protocol. Humans get woken, cron jobs get triggered, precision bombs get guided, and trains count their delays in the master clock of the US Naval Observatory, only differing by tiny variations in latency times. \n\nThis seasonal time experience when the human world was flat reflects the unknown spherical geometry of the earth cycle projected on the flat earth. When humans became aware of earth as a sphere, they responded by flattening and linearising time. Mechanical clocks allowed for the u to unify time lengths and thereby also standardize time. Physical observation and all sorts of economic processes needed such standardized time measurement. Early versions of such time measurement, like hourglasses, existed but remained disconnected from day time measurement. Mechanical clocks allowed to unify different time cycles and scales. It also allowed standardization of time over longer distances, departing from the local sundial time to time zones, which were less strictly linked to the seasonal rhythm of the sun but more to geographical zones. Long distance trade, industrialization and later longdistance communication by electro-magnetic signals (comparable to the speed of light) demanded more geographical coordination. In the nineteenth century, coordination developed through clock networks, with a master clock driving the slave clocks. Nowadays we work with atomic clocks and a global Coordinated Universal Time or UTC as a reference to which geographical time zones are connected. Humans organize their activities accordingly, if necessary by de-linking from the solar rhythm. The borders of time zones diverge very often from the longitudinal lines for economic and political reasons. A similar socialisation and globalisation of time occurred for computers. Where in the early computer age time was set and counted locally by each machine, it is now common to continuously synchronize time over the Internet through time servers and the Network Time Protocol. Humans get woken, cron jobs get triggered, precision bombs get guided, and trains count their delays in measure with the drill signal of the Master Clock of the US Naval Observatory, only differing by tiny variations in latency times.\n\nHumans have also developed ways to relate to time on longer scales, which were originally linked to natural rhythms: years, life cycles. Calendar systems are used to determine seasonal agricultural needs (when to plant, when to harvest), while they also made it possible to keep track of life cycles and historical time. Again, such calendar systems have been very diverse and local, but have been slowly fused to a couple of dominant models. \nGenerational or birth, life , and death rhythms, originating from the human experience, have been projected on all spells of phenomena. Religions try to explain the origin of everything, while also often predicting the end in apocalyptic visions. The demise of religion at the hand of science did not let such generational visions disappear. They got new expressions in the scientific theories of the beginning (big bang, evolution) and end (the death heath of the universe, the end of the earth at the final burnout phase of the sun) of everything. Similar apocalyptic visions are now embedded in design decisions (Y2K, the end of Unix-time in 2038). In all versions the end is often linked to the specific design of time (eg the end of the Maya calendar, millenarian movements). But just like religious visions can extend their apocalypse in a new versions (eg the always near but always delayed apocalypse of the Saints of the last days),\n\n## The time(s) of the machine\n\nMachines also have their natural cycle: the vibrating pulses of the internal crystal clock drives the cycles according to which the processor works. All PCs have such a Real Time Clock (RTC), independent of the processor. The time of the computer is linked to this clock cycle, as it consists of counting cyclical ticks. This produces a single cyclical, and completely linear time rhythm in the hardware. In contrast to the earthly or natural cycles, there is no difference between two or more cycles. This makes a computer into a monadic time capsule, disconnected from the outside rhythms.\nThe time experience in the software is based on this local time cycle. However, they have to negotiate and synchronize their times.\nTo start, time in a computer is no unique or unified experience. Several hardware components and a diverse collection of software organized in layers and processes of interdependent time experiences. The operating system experiences other software components, and the users through them, as a bunch of processes screaming for attention. One of the most pushy interrupts is the timer forcing the processor to count another click and update the system time. An internal kernel process performs the negotiation of time with which the clock is linked to a system time. \nThis starts when the operating system is determining the clock signal frequency. PCs have another time-measuring device, the Programmable Interval Timer\n(PIT), which can be set by the processor at a defined frequency. During a short time indicated by this PIT, the clock cycles of the RTC get counted and the frequency of the RTC gets calculated. Several other timing devices are present in the hardware, synchronized by kernel processes in a range of times for the operating system and the processes. As said, one of these times \nWith the advent of the Internet computers are not monads anymore, are intended socialized in the common rhythm broadcast with the Network Time Protocol. The local system time serves as back up. We have Ubuntu / Debian machine that can be checked with timedatectl status . The timedatectl command enables these synchronization processes. The actual synchronization is done by the timesyncd process and the time servers can be set in the /etc/systemd/timesyncd.conf file. Other Linux flavors work with the older ntp process that can be configured in /etc/ntp.conf. \n\nThe actual process time is completely different from this system time. Most of the time is in the process of making the time to do it. The scheduler is the big organizer of time in the ecology of internal processes.\nSystem time is externally counted and therefore an external global variable to these processes. These processes can get to the kernel to get the system time. This software is delivered by the software with a range of systems and the programming time of the program. \nThe difference between the actual process time and system time does not appear in how time is perceived by the process. The process only perceives time as the difference between two demands of system time and is oblivious of its time being put on hold. The processor on the other hand spent most of its processing time as idle time: a processor is doing time waiting for slow system components like memory and even slower hard drives and network connections to respond and switches between checking for responses of these laggards. L’enfer du temps perdu, ce sont les autres.\n\nConnecting computers into a network demands new negotiations of time. We already mentioned the networked and globalized UTC timekeeping. Temporal goal negotiations happen on all levels of the system. Network protocols have timed choreographies to make connections and proceed with communications, with time out fails to break off when something goes wrong. The timing of an action is an essential component making the difference between a meaningful signal and noise.\nUsing a browser over http to connect to a website, or more accurately the server providing the website on your request, is built on a discontinuous time practice. In a REST architecture the server just deals with a queue of requests and does not see continuity over time between certain requests from a single user.  New temporal practices have been designed and technically implemented. Through cookies the server is able to recognise users and their state in time. \nThe border between your computer and servers on the internet becomes fuzzy when external software is dropped on your computer and runs in your webbrowser. Javascript modules get dropped on your computer and can start performing tasks on an external server. Similarly, the browser becomes a border where time gets negotiated through synchronization processes.\nWhat time exactly is on the task at hand. Each tool contains its specific temporal practices, dependent on the speed and subject matter of the synchronization process needed.\nFor example, for collaborative document editing tools like Google Docs or Etherpad it is a sequence of versions of the document. A range of strategies have been developed to reduce the costs of conflict. \nThe Easysync-protocol used by Etherpad constructs a document from changesets. A changeset details the edits made by a user or the difference with the train local version of the text. In other words, the flow of time is represented through a series of changes that can be summed up to the present state. The server keeps a sequence of admits changesets. These changes changes represent the current common state and get to all customers. \nLocally each client builds its present state by summing up the rate of change, and is not yet acknowledged. Each client communicates its local changesets, every 500ms after the latest acknowledgment. As this changeset may be related to an earlier version of the first recalculates a changeset relative to the current version. Then it sends an acknowledgment to the sender and the changeset to the other customers. \nDifferent collaborative document editing tools use different methods to deal with conflicts, which also are dependent on the purpose or content of the document. Conflicts between numeric edits in a collaborative spreadsheet are dealt with differently than conflicts between text edits. But what is common to both is that the present gets continuously constructed both on the server and on the clients and negotiated through the specific protocol. The user can always access its local copy of the text and create its local present, but this local present then gets negotiated with the server to create a common present. (% CARLINSAYS:These last two sentences are key and could be clearer. I have tried an edit that maybe does so?)\nAnd every tool rings also its own disasters and apocalyptic experiences through the collapse of the negotiation process and thereby of the common state.\n\nThis negotiation of time is in the first place a negotiation of the present. But also what is past and future gets constructed in this present. The ordered sequence connected to the system time(s) already imply such a past and future. But the construction of a past consists also of a negotiation of what remains and what gets forgotten. Data gets stored in memory or written to storage devices, while the operating systems assigns time stamps to these traces of the present becoming past and writes other traces to a range of log files. \nAs writers trying to capture their stream of consciousness already experienced, it is impossible to completely store the present for future use as past. There will always be a remainder that escapes and can not be written down. Similarly an operating systems can not keep a log of all its operations without getting stuck in an infinite regress in which it tries to log its logging operations. What will be the past for a future present needs to be constructed and selected. Everything else gets forgotten.\nLinux stores its logs in /var/log, while all sorts of programs can create their own logs. All these logs are specific histories, for example of what programs got installed. To get an idea of your past on a Linux system in the file system, you can collect the timestamps of all files with:\n\n% -----------------\n\nos.system(\"ls -R -l --time-style=long-iso \\\n           > modlistsystem-long-iso.txt\")\nos.system(\"ls -R -lu --time-style=long-iso \\\n           > accesslistsystem-long-iso.txt\")\n\n% SRCCODE:\n\n## Renegotiating time with your computer: sundial network time.\n\nTechnology has been a tool through which humans create distance from natural cycles and design their own time experiences. This means we can critically intervene in the functioning of the technology and develop alternative time practices and experiences. As an example we put forward as a not-yet-existing-proof of concept the possibility to let the computer work according to sundial time.\nIs it possible to reconfigure the time of the computer and rewire the connections with human and natural rhythms? Would we be able to let the computer function in an older human time experience, e.g. the time of the sundial? How can such sundial experience be built into the system and what would be the impact on the user?\nSundial time is a geographically and seasonally localised time. It also includes a distinction between day and night. The night is ‘out of time’. This distinction has been extradited from linear time practices, where the amount of light is just a variable external to steady beat of time. Linear time turns the night into economically productive time. Running your computer on sundial time re-introduces the night in your system.\n\nAn intervention to introduce sundial time in your computer is possible in the whole range of places we discussed where time gets negotiated. The most fundamental but also most difficult route would be to exchange the clock with something reflecting a more natural rhythm. However, as we have seen that this clock has become only a back up tool and that the actual system time is always renegotiated with other systems connected through the network, another renegotiation process can be introduced. Therefore, the most easy way to introduce sundial time would be to reconfigure the timesyncdor ntp processes and make them listen to an alternative sundial time server. Such a sundial time server can be built in different ways. A hardware version can be made of a sundial combined with light sensors, measuring the location of the shadow through the difference in light and deriving the sundial time from this location. This would link the time server to the actual earthly day and night cycle. A simulated version could be a local piece of software which looks up the timing of sunrise and sunset at the specific location and day. Based on this information it recalculates the local sundial time, which it provides through the NTP protocol. The local computer receives this sundial time from the nearest sundial time server and continuously adapts its system time, as it does now already based on UTC. Further, it can be programmed to go into sleep modus during the night and to wake up only when a sunrise signal is received from the time server.\n\nLetting a computer run on sundial time is a conscious effort to disconnect it from human-made linear time and to reconnect it with the old earth-driven cycles and the ancient time experience by humans. The unified time of UTC and the time zones gets broken up into extremely localized time servers, and the difference between day and night gets introduced into the functioning of the computer. \nThis re-enactment of such cycles through the computer will remind human users that the experience of time is a socially negotiated and technically implemented experience. Further, a computer running on sundial time would be a great piece of nannyware nudging the user to live in harmony with his natural environment and a synchronization tool to re-establish the link between the users bio-rhythm and the earthly day and night cycle. It would also be a great reminder why humans tried in the first place to escape from these earthly rhythms through technology and started hacking time.\n\nHans Lammerant, June 2017 - January 2018\n\n% NOTE: -\n This text was written in and in resistance/conflict to WTC time, which is exemplary for the bureaucratic office time experience. The WTC building boots up at 9AM and is turned off in several steps (at 5PM the air conditioning is turned off, later entrances close) into a wake state. The concierge can let you in and out through the night side entry, but main life support systems remain turned off outside office hours. This wake state continues during the weekend, turning the building into a glass house with limited air in storage. On Monday morning this bureaucratic time capsule revives from its slumber. A suffocating experience, but actually the building is a great piece of nannyware nudging towards a healthy office rhythm without too much extra hours outside the herd work ethic.\n\nSuch office time can also be implemented and negotiated on your local computer. A small Proof of Concept was the adapted bashrc on the etherbox simulating a system getting bored and stealing time. This can be further developed by including a differentiated response during versus outside office hours, aging (slower when timestamp of original install is more remote in time), etc.\n\n\n\n\n\n\n","attribs":"*d+4+b*a|1+1*a+r*5+2*b|1+1*5|1+1*0|1+1*5+9*0|2+1n*d+lw*0|1+1*d|3+v1*0|1+1*0+b*d|1+11p*d+aw*0|1+2f*d|2+1jp*0|1+1*0+6*9+5*0+1i*9+1*0+2g*c+3*9+1*0+2o*9+g*0+3a*9+4*0+1*9+5*0|1+1a*0+r*d+pe*0|4+x*9+d*0+1f*9+3*0+6a*d+5k*0|1+2r*0+13*d|4+x2*d+6z*d*2+i*d+7*d*2+b*d+2k*d*2+9*d+3e*d*2+3*d+d*0|2+13*0+2g*d|1+3k*d+7e*0|3+g2*0+38*d|6+1jg*d+bf*0|1+4*0+81*9+8*0+7*9+8*0+1f*c+5*0+4n*9+i*0+1*9+5*0+1o*9+2*a+1*9+2z*0|4+ja*0+6c*9+a*0|1+7h*0+80*5|1+1*0|1+1*5|2+l+17*5|1+1+15*0|1+1+18*5|1+1+18*0|1+1*5|2+c*0|3+1u*0+1s*9+4*0+r*9+5*0|2+h3*0+8h*9+1*0|2+3h*0+g5*0*2+9*0+3*0*2+3*0+23*9+3*0|2+oa*0+7t*9+1*0+h*9+3*0|1+2l*0+97*9+1*0|2+73*0+g*c+c*0|2+e*6+2*6*7*8+4*6|1+4*0|2+m0*0+ak*a|5+5*0|1+1|1+1"}}},"pad:observatory.guide.experiencingtime:revs:1001":{"changeset":"Z:fy5>1|e=2zj=7t*d+1$n","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147191840}},"pad:observatory.guide.experiencingtime:revs:1002":{"changeset":"Z:fy6>3|e=2zj=7u-1*d+4$ific","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147192341}},"pad:observatory.guide.experiencingtime:revs:1003":{"changeset":"Z:fy9>7|e=2zj=7y-1bi*d|1+1bp$ation to unify time lengths and thereby also standardize time. Physical observation and all sorts of economic processes needed such standardized time measurement. Early versions of such time measurement, like hourglasses, existed but remained disconnected from day time measurement. Mechanical clocks allowed to unify different time cycles and scales. It also allowed standardization of time over longer distances, departing from the local sundial time to time zones, which were less strictly linked to the seasonal rhythm of the sun but more to geographical zones. Long distance trade, industrialization and later longdistance communication by electro-magnetic signals (comparable to the speed of light) demanded more geographical coordination. In the nineteenth century, coordination developed through clock networks, with a master clock driving the slave clocks. Nowadays we work with atomic clocks and a global Coordinated Universal Time or UTC as a reference to which geographical time zones are connected. Humans organize their activities accordingly, if necessary by de-linking from the solar rhythm. The borders of time zones diverge very often from the longitudinal lines for economic and political reasons. A similar socialisation and globalisation of time occurred for computers. Where in the early computer age time was set and counted locally by each machine, it is now common to continuously synchronize time over the Internet through time servers and the Network Time Protocol. Humans get woken, cron jobs get triggered, precision bombs get guided, and trains count their delays in measure with the drill signal of the Master Clock of the US Naval Observatory, only differing by tiny variations in lat\n","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147192845}},"pad:observatory.guide.experiencingtime:revs:1004":{"changeset":"Z:fyg>3|e=2zj=84*d+3$of ","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147193347}},"pad:observatory.guide.experiencingtime:revs:1005":{"changeset":"Z:fyj<1|e=2zj=88-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147194188}},"pad:observatory.guide.experiencingtime:revs:1006":{"changeset":"Z:fyi<2|e=2zj=86-2$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147194690}},"pad:observatory.guide.experiencingtime:revs:1007":{"changeset":"Z:fyg<5|e=2zj=87-5$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147198829}},"pad:observatory.guide.experiencingtime:revs:1008":{"changeset":"Z:fyb<1|e=2zj=86-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147199323}},"pad:observatory.guide.experiencingtime:revs:1009":{"changeset":"Z:fya>1|e=2zj=9c*d+1$d","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147202228}},"pad:observatory.guide.experiencingtime:revs:101":{"changeset":"Z:f2w>2|1b=b7f=a*5+2$  ","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1518026025575}},"pad:observatory.guide.experiencingtime:revs:1010":{"changeset":"Z:fyb<77|b=1k7-77$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147211323}},"pad:observatory.guide.experiencingtime:revs:1011":{"changeset":"Z:fr4>77|b=1k7*d+77$This season is the time of day when the world is flatter the earth's spherical geometry. When humans became aware of earth, they responded by flattening and linearising time. Mechanical clocks allowed to unify time lengths and thereby aussi standardize time. ","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147233220}},"pad:observatory.guide.experiencingtime:revs:1012":{"changeset":"Z:fyb>1|e=2zj=g6*d+1$A","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147264011}},"pad:observatory.guide.experiencingtime:revs:1013":{"changeset":"Z:fyc<1|e=2zj=g6-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147264624}},"pad:observatory.guide.experiencingtime:revs:1014":{"changeset":"Z:fyb>1|e=2zj=g6*d+1$a","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147266090}},"pad:observatory.guide.experiencingtime:revs:1015":{"changeset":"Z:fyc>4|e=2zj=g7*d+4$lso ","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147266590}},"pad:observatory.guide.experiencingtime:revs:1016":{"changeset":"Z:fyg<7|e=2zj=gj-8*d+1$f","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147269822}},"pad:observatory.guide.experiencingtime:revs:1017":{"changeset":"Z:fy9>3|e=2zj=gk*d+3$or ","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147270316}},"pad:observatory.guide.experiencingtime:revs:1018":{"changeset":"Z:fyc>5|e=2zj=gn*d+5$the u","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147270816}},"pad:observatory.guide.experiencingtime:revs:1019":{"changeset":"Z:fyh>3|e=2zj=gs*d+3$nif","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147271316}},"pad:observatory.guide.experiencingtime:revs:102":{"changeset":"Z:f2y<4|1b=b7f=8-4$","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1518026026084}},"pad:observatory.guide.experiencingtime:revs:1020":{"changeset":"Z:fyk>6|e=2zj=gv-12k*d|1+12q$icati different time cycles and scales. It also allowed standardization of time over longer distances, departing from the local sundial time to time zones, which were less strictly linked to the seasonal rhythm of the sun but more to geographical zones. Long distance trade, industrialization and later longdistance communication by electro-magnetic signals (comparable to the speed of light) demanded more geographical coordination. In the nineteenth century, coordination developed through clock networks, with a master clock driving the slave clocks. Nowadays we work with atomic clocks and a global Coordinated Universal Time or UTC as a reference to which geographical time zones are connected. Humans organize their activities accordingly, if necessary by de-linking from the solar rhythm. The borders of time zones diverge very often from the longitudinal lines for economic and political reasons. A similar socialisation and globalisation of time occurred for computers. Where in the early computer age time was set and counted locally by each machine, it is now common to continuously synchronize time over the Internet through time servers and the Network Time Protocol. Humans get woken, cron jobs get triggered, precision bombs get guided, and trains count their delays in measure with the drill signal of the Master Clock of the US Naval Observatory, only differing by tiny variat\n","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147271814}},"pad:observatory.guide.experiencingtime:revs:1021":{"changeset":"Z:fyq>5|e=2zj=h0*d+5$on of","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147272321}},"pad:observatory.guide.experiencingtime:revs:1022":{"changeset":"Z:fyv<f|e=2zj=i2-h*d+2$ a","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147289103}},"pad:observatory.guide.experiencingtime:revs:1023":{"changeset":"Z:fyg>3|e=2zj=i4*d+3$nd ","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147289599}},"pad:observatory.guide.experiencingtime:revs:1024":{"changeset":"Z:fyj>3|e=2zj=i7*d+3$for","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147290106}},"pad:observatory.guide.experiencingtime:revs:1025":{"changeset":"Z:fym>4|e=2zj=ia*d+4$ the","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147290606}},"pad:observatory.guide.experiencingtime:revs:1026":{"changeset":"Z:fyq<2|e=2zj=n1-3*d+1$a","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147301429}},"pad:observatory.guide.experiencingtime:revs:1027":{"changeset":"Z:fyo>2|e=2zj=n2*d+2$nd","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147302124}},"pad:observatory.guide.experiencingtime:revs:1028":{"changeset":"Z:fyq>1|e=2zj=pe*d+1$ ","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147316141}},"pad:observatory.guide.experiencingtime:revs:1029":{"changeset":"Z:fyr<1|e=2zj=16i-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147358574}},"pad:observatory.guide.experiencingtime:revs:103":{"changeset":"Z:f2u>1|1b=b7f=8*5+1$ ","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1518026026580}},"pad:observatory.guide.experiencingtime:revs:1030":{"changeset":"Z:fyq>1|e=2zj=16i*d+1$z","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147359071}},"pad:observatory.guide.experiencingtime:revs:1031":{"changeset":"Z:fyr<1|e=2zj=170-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147360673}},"pad:observatory.guide.experiencingtime:revs:1032":{"changeset":"Z:fyq>1|e=2zj=170*d+1$z","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147361171}},"pad:observatory.guide.experiencingtime:revs:1033":{"changeset":"Z:fyr<1|e=2zj=1jl|1-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147393184}},"pad:observatory.guide.experiencingtime:revs:1034":{"changeset":"Z:fyq<1|e=2zj=1jw|1-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147395265}},"pad:observatory.guide.experiencingtime:revs:1035":{"changeset":"Z:fyp<1fa|b=1k7|1-120-da$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147400519}},"pad:observatory.guide.experiencingtime:revs:1036":{"changeset":"Z:ejf<1|a=1k6|1-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147401022}},"pad:observatory.guide.experiencingtime:revs:1037":{"changeset":"Z:eje<1|9=1k5|1-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147401529}},"pad:observatory.guide.experiencingtime:revs:1038":{"changeset":"Z:ejd<1|9=1k5|1-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147402700}},"pad:observatory.guide.experiencingtime:revs:1039":{"changeset":"Z:ejc>1|e=46x*d|1+1$\n","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147477028}},"pad:observatory.guide.experiencingtime:revs:104":{"changeset":"Z:f2v>1|1b=b7f=9*5+1$ ","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1518026027078}},"pad:observatory.guide.experiencingtime:revs:1040":{"changeset":"Z:ejd>198|f=46y*d+198$Humans have also developed ways to relate to time on longer scales, which were originally linked to natural rhythms: years, life cycles. Calendar systems were used to determine seasonal agricultural needs (when to plant, when to harvest), while they also made it possible to keep track of life cycles and historical time. Again, such calendar systems have been very diverse and local, but have been slowly fused to a couple of dominant models. Generational or birth, life, and death rhythms, originating from the human experience, have been projected on all sorts of phenomena. Religions tried to explain the origin of everything, while also often predicting the end in apocalyptic visions. The demise of religion at the hand of science did not let such generational visions disappear. They got new expressions in scientific theories of the beginning (big bang, evolution) and end (the heath death of the universe, the end of the earth at the final burnout phase of the sun) of everything. Similar apocalyptic visions are now embedded through technological design decisions (Y2K, the end of Unix-time in 2038). In all versions the end is often linked to the specific design of time (e.g. the end of the Maya calendar, millenarian movements). But just like religious visions can extend their apocalypse in a new versions (e.g. the always near but always delayed apocalypse of the Saints of the last days), machinic accounts of time can always be extended by enlarging the bit size of the time range (cfr the extension of Unix time till AD 292277026596, or safely after the end of the observable universe according to contemporary","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147477897}},"pad:observatory.guide.experiencingtime:revs:1041":{"changeset":"Z:fsl>1|f=46y=198*d+1$ ","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147480146}},"pad:observatory.guide.experiencingtime:revs:1042":{"changeset":"Z:fsm>1|f=46y=199*d+1$p","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147480638}},"pad:observatory.guide.experiencingtime:revs:1043":{"changeset":"Z:fsn>5|f=46y=19a*d+5$hysic","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147481215}},"pad:observatory.guide.experiencingtime:revs:1044":{"changeset":"Z:fss>1|f=46y=19f*d+1$s","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147481718}},"pad:observatory.guide.experiencingtime:revs:1045":{"changeset":"Z:fst>1|f=46y=19g*d+1$)","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147482237}},"pad:observatory.guide.experiencingtime:revs:1046":{"changeset":"Z:fsu>1|f=46y=19h*d+1$.","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147482815}},"pad:observatory.guide.experiencingtime:revs:1047":{"changeset":"Z:fsv>1|f=46y=19i*d|1+1$\n","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147483319}},"pad:observatory.guide.experiencingtime:revs:1048":{"changeset":"Z:fsw<3|f=46y=4a-4*d+1$a","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147502149}},"pad:observatory.guide.experiencingtime:revs:1049":{"changeset":"Z:fst>2|f=46y=4b*d+2$re","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147502647}},"pad:observatory.guide.experiencingtime:revs:105":{"changeset":"Z:f2w>1|1b=b7f=a*5+1$ ","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1518026027578}},"pad:observatory.guide.experiencingtime:revs:1050":{"changeset":"Z:fsv<1|f=46y=74-2*d+1$k","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147525726}},"pad:observatory.guide.experiencingtime:revs:1051":{"changeset":"Z:fsu>1|f=46y=75*d+1$e","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147526227}},"pad:observatory.guide.experiencingtime:revs:1052":{"changeset":"Z:fsv<12h|c=34f|1-cc-q5$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147595841}},"pad:observatory.guide.experiencingtime:revs:1053":{"changeset":"Z:eqe<1|d=34g|1-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147598140}},"pad:observatory.guide.experiencingtime:revs:1054":{"changeset":"Z:eqd<1|c=34f|1-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147598640}},"pad:observatory.guide.experiencingtime:revs:1055":{"changeset":"Z:eqc>1|m=692*d|1+1$\n","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147625950}},"pad:observatory.guide.experiencingtime:revs:1056":{"changeset":"Z:eqd>255|n=693*d|1+1jl*d+lk$Machines also have their natural cycle: the vibrating pulses of the internal crystal clock drives the cycles according to which the processor works. All PCs have such a Real Time Clock (RTC), independent of the processor. The time of the computer is linked to this clock cycle, as it consists in counting cyclical ticks. This 91 produces a single cyclical, and completely linear, time rhythm in the hardware. In contrast to the earthly or natural cycles it is without any seasonal difference or interference between several cycles. This makes a computer into a monadic time capsule, disconnected from the outside rhythms. The time experience in the software is in principle based on this local time cycle. However, once computers and software gets linked and networked, they have to negotiate and synchronize their times. To start, time in a computer is no unique or unified experience. Several hardware components and a diverse collection of software organised in layers and processes create a whole ecology of interdependent time experiences. The operating system experiences other software components, and users through them, as a bunch of processes screaming for attention. One of the most pushy interrupts is the timer forcing the processor to count another click and update the system time. An internal kernel process performs the negotiation of time through which the clock count is linked with a system time. This starts already during the booting process, when the operating system is determining the clock signal frequency. PCs have another time-measuring device, the Programmable Interval Timer (PIT), which can be set by the processor at a defined frequency. During a short time indicated by this PIT, the clock cycles of the RTC get counted and the frequency of the RTC gets calculated. Several other timing devices are present in the hardware, synchronized by kernel processes into a range of times available for the operating system and the processes. As said, one of these times is av\nailable as system time and gets communicated to all other processes when demanded. With the advent of the Internet computers are not monads anymore, but are socialized in the common rhythm broadcasted with the Network Time Protocol. The local system time serves as back up, but gets continuously adapted to the network time. On a Ubuntu/Debian machine these times can be checked with timedatectl status. The timedatectl command 92 enables to change these synchronisation processes. The actual synchronisation is done by the timesyncd process and the time servers to be used can be set in the /etc/systemd/timesyncd.conf file. Other Linux flavours work with the older ntp process which can be configured in /etc/ntp.conf. The actual process time is completely different from th","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147627160}},"pad:observatory.guide.experiencingtime:revs:1057":{"changeset":"Z:gvi>1|o=7so=lk*d|1+1$\n","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147628679}},"pad:observatory.guide.experiencingtime:revs:1058":{"changeset":"Z:gvj<1i|o=7so=k2-1i$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147632730}},"pad:observatory.guide.experiencingtime:revs:1059":{"changeset":"Z:gu1<1|o=7so=k1-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147633228}},"pad:observatory.guide.experiencingtime:revs:106":{"changeset":"Z:f2x>1|17=b38=j*5|1+1$\n","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1518026036621}},"pad:observatory.guide.experiencingtime:revs:1060":{"changeset":"Z:gu0>1|n=693=87*d+1$\\","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147662242}},"pad:observatory.guide.experiencingtime:revs:1061":{"changeset":"Z:gu1<1|n=693=87-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147662736}},"pad:observatory.guide.experiencingtime:revs:1062":{"changeset":"Z:gu0<1|n=693=86-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147663236}},"pad:observatory.guide.experiencingtime:revs:1063":{"changeset":"Z:gtz<1|n=693=85-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147663741}},"pad:observatory.guide.experiencingtime:revs:1064":{"changeset":"Z:gty>0|n=693=85-1*d+1$o","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147664244}},"pad:observatory.guide.experiencingtime:revs:1065":{"changeset":"Z:gty>1|n=693=86*d+1$f","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147664746}},"pad:observatory.guide.experiencingtime:revs:1066":{"changeset":"Z:gtz>1|n=693=87*d+1$ ","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147665740}},"pad:observatory.guide.experiencingtime:revs:1067":{"changeset":"Z:gu0<1|n=693=93-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147672901}},"pad:observatory.guide.experiencingtime:revs:1068":{"changeset":"Z:gtz<1|n=693=92-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147673401}},"pad:observatory.guide.experiencingtime:revs:1069":{"changeset":"Z:gty<1|n=693=91-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147673900}},"pad:observatory.guide.experiencingtime:revs:107":{"changeset":"Z:f2y>0|19=b3t*3=17|1=1*3=15|1=1*3=18|1=1*3=18$","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1518026040572}},"pad:observatory.guide.experiencingtime:revs:1070":{"changeset":"Z:gtx<lv|g=4et|2-k4-1r$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147752376}},"pad:observatory.guide.experiencingtime:revs:1071":{"changeset":"Z:g82<1|g=4et=1-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147754806}},"pad:observatory.guide.experiencingtime:revs:1072":{"changeset":"Z:g81<1|g=4et-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147755311}},"pad:observatory.guide.experiencingtime:revs:1073":{"changeset":"Z:g80<1|l=5n6=1jh|1-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147831671}},"pad:observatory.guide.experiencingtime:revs:1074":{"changeset":"Z:g7z>2|l=5n6=1jk-33*d|1+1*d+34$\nable as system time and gets communicated to all other processes when demanded. With the advent of the Internet,","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147850245}},"pad:observatory.guide.experiencingtime:revs:1075":{"changeset":"Z:g81<1|m=76r=bv-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147859688}},"pad:observatory.guide.experiencingtime:revs:1076":{"changeset":"Z:g80<1|m=76r=bu-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147860180}},"pad:observatory.guide.experiencingtime:revs:1077":{"changeset":"Z:g7z<1|m=76r=bt-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147860680}},"pad:observatory.guide.experiencingtime:revs:1078":{"changeset":"Z:g7y>1|m=76r=am*d+1$_","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147875457}},"pad:observatory.guide.experiencingtime:revs:1079":{"changeset":"Z:g7z>1|m=76r=b5*d+1$_","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147878408}},"pad:observatory.guide.experiencingtime:revs:108":{"changeset":"Z:f2y>4|1t=e68|1-1-3*6+2*6*7*8+4*6+2$% NOTE: ","meta":{"author":"a.CLJqMQchPGX2f376","timestamp":1518197356229}},"pad:observatory.guide.experiencingtime:revs:1080":{"changeset":"Z:g80>1|m=76r=bc*d+1$_","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147889815}},"pad:observatory.guide.experiencingtime:revs:1081":{"changeset":"Z:g81>1|m=76r=bo*d+1$_","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147892148}},"pad:observatory.guide.experiencingtime:revs:1082":{"changeset":"Z:g82>1|m=76r=ej*d+1$_","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147898499}},"pad:observatory.guide.experiencingtime:revs:1083":{"changeset":"Z:g83>1|m=76r=et*d+1$_","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147900850}},"pad:observatory.guide.experiencingtime:revs:1084":{"changeset":"Z:g84<18b|g=4et|3-so-fn$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147914899}},"pad:observatory.guide.experiencingtime:revs:1085":{"changeset":"Z:ezt<1|h=4eu|1-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147916439}},"pad:observatory.guide.experiencingtime:revs:1086":{"changeset":"Z:ezs<1|g=4et|1-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147916940}},"pad:observatory.guide.experiencingtime:revs:1087":{"changeset":"Z:ezr>1|l=6vx=fz*d|1+1$\n","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147942351}},"pad:observatory.guide.experiencingtime:revs:1088":{"changeset":"Z:ezs>1|m=7bx*d|1+1$\n","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147942973}},"pad:observatory.guide.experiencingtime:revs:1089":{"changeset":"Z:ezt>yi|n=7by*d+yi$The actual process time is completely different from this system time. Most of the time processes are put on hold and when the scheduler gives them time they can proceed till the next on hold is forced to make time for another process. The scheduler is the big organizer of time in the internal ecology of processes. System time is externally counted and therefore an external global variable to these processes. They can all send a demand to the kernel to get the system time. This gets communicated through the software stack with a range of system calls of the kernel and through the specific time modules of the programming language the software is programmed in. The difference between the actual process time and system time does not appear in how time is perceived by the process. The process only perceives time as the difference between two demands of system time and is oblivious of its time being put on hold. The processor on the other hand spent most of its processing time as idle time: a processor is doing time waiting for slow system components like memory and even slower hard drives and network connections to respond and switches between checking for responses of these laggards. L’enfer du temps perdu, ce sont les autres","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147943970}},"pad:observatory.guide.experiencingtime:revs:109":{"changeset":"Z:f32>2|1t=e68=8*6+2$ 0","meta":{"author":"a.CLJqMQchPGX2f376","timestamp":1518197360767}},"pad:observatory.guide.experiencingtime:revs:1090":{"changeset":"Z:fyb>1|n=7by=1z*d+1$M","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148000370}},"pad:observatory.guide.experiencingtime:revs:1091":{"changeset":"Z:fyc>1|n=7by=20*d+1$o","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148000873}},"pad:observatory.guide.experiencingtime:revs:1092":{"changeset":"Z:fyd>4|n=7by=21*d+4$sg o","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148001373}},"pad:observatory.guide.experiencingtime:revs:1093":{"changeset":"Z:fyh<2|n=7by=23-2$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148001872}},"pad:observatory.guide.experiencingtime:revs:1094":{"changeset":"Z:fyf<1|n=7by=22-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148002379}},"pad:observatory.guide.experiencingtime:revs:1095":{"changeset":"Z:fye>1|n=7by=22*d+1$t","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148002886}},"pad:observatory.guide.experiencingtime:revs:1096":{"changeset":"Z:fyf>3|n=7by=23*d+3$ of","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148003388}},"pad:observatory.guide.experiencingtime:revs:1097":{"changeset":"Z:fyi>2|n=7by=26*d+2$ t","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148003887}},"pad:observatory.guide.experiencingtime:revs:1098":{"changeset":"Z:fyk>5|n=7by=28*d+5$he ti","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148004386}},"pad:observatory.guide.experiencingtime:revs:1099":{"changeset":"Z:fyp>2|n=7by=2d*d+2$me","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148005248}},"pad:observatory.guide.experiencingtime:revs:11":{"changeset":"Z:f1h>1|1a=b8h*0+1$#","meta":{"author":"a.I4FbrrCTDQNN8GIf","timestamp":1517420650159}},"pad:observatory.guide.experiencingtime:revs:110":{"changeset":"Z:f34<1|1t=e68=8-2*6+1$-","meta":{"author":"a.CLJqMQchPGX2f376","timestamp":1518197361267}},"pad:observatory.guide.experiencingtime:revs:1100":{"changeset":"Z:fyr>2|n=7by=2f*d+2$ i","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148005754,"atext":{"text":"__% NOPUBLISH__\n% SHOW: tgsoimages.svg hans H\n\n\n% HEADER: How humans and machines negotiate the experience of time\n\nThe experience of time is an essential element of any form of experience or cognition. Emotions depend to a large extent on expectations, or the potential coming of a future event. Any observing or experience of difference, of presence related to an earlier or later absence, is linked with an experience of time. However, how the actual experience of time is shaped is strongly influenced by all sort of design decisions and implementations, both for humans and machines. Also, the experience of time is a conglomerate of different experiences: time as a common moment, the duration of a certain time, time as cyclic events, historical time, and so on. Researching how humans and machines experience time and negotiate their time experiences is therefore an interesting avenue to explore\n\nHumans have developed a time experience which was linked to natural life cycles, but it has been influenced by both technology and social conditions. The first time cycle is the day-night time cycle. Humans do their stuff during the day, but need to sleep. The night is generally the preferred time for sleep, but the availability of artificial light and the need for long-distance coordination has influenced how humans deal with the day cycle and the place for sleep in it. Part of this experience is measuring time. Early time measurement was linked to observation of natural conditions like sunrise and sunset. Measurement of such sun cycles (which is in fact an earth cycle) through sundials allowed for more precise time referencing, but it is very place and season dependent. More light during summer than winter implied that hours were longer in summer than in winter. Similarly such changes were greater at higher latitudes, while near the equator such changes are limited. In other words, time measured by sundials provided a local common reference of time, but not one common time over longer distances.\n\nThis seasonal time experience when the human world was flat reflects the unknown spherical geometry of the earth cycle projected on the flat earth. When humans became aware of earth as a sphere, they responded by flattening and linearising time. Mechanical clocks allowed for the unification of time lengths and thereby also standardized time. Physical observation and all sorts of economic processes needed such standardized time measurement. Early versions of such time measurement, like hourglasses, existed but remained disconnected from day time measurement. Mechanical clocks also allowed for the unification of different time cycles and scales and for the standardization of time over longer distances, departing from the local sundial time to time zones, which were less strictly linked to the seasonal rhythm of the sun and more to geographical zones. Long distance trade, industrialization and later long distance communication by electro-magnetic signals (comparable to the speed of light) demanded more geographical coordination. In the nineteenth century, coordination developed through clock networks, with a master clock driving the slave clocks. Nowadays we work with atomic clocks and a global Coordinated Universal Time or UTC as a reference to which geographical time zones are connected. Humans organize their activities accordingly, if necessary by de-linking from the solar rhythm. The borders of time zones diverge very often from the longitudinal lines for economic and political reasons. A similar socialization and globalization of time occurred for computers. Where in the early computer age time was set and counted locally by each machine, it is now common to continuously synchronize time over the Internet through time servers and the Network Time Protocol. Humans get woken, cron jobs get triggered, precision bombs get guided, and trains count their delays in measure with the drill signal of the Master Clock of the US Naval Observatory, only differing by tiny variations in latency times.\n\nHumans have also developed ways to relate to time on longer scales, which were originally linked to natural rhythms: years, life cycles. Calendar systems are used to determine seasonal agricultural needs (when to plant, when to harvest), while they also make it possible to keep track of life cycles and historical time. Again, such calendar systems have been very diverse and local, but have been slowly fused to a couple of dominant models. Generational or birth, life, and death rhythms, originating from the human experience, have been projected on all sorts of phenomena. Religions tried to explain the origin of everything, while also often predicting the end in apocalyptic visions. The demise of religion at the hand of science did not let such generational visions disappear. They got new expressions in scientific theories of the beginning (big bang, evolution) and end (the heath death of the universe, the end of the earth at the final burnout phase of the sun) of everything. Similar apocalyptic visions are now embedded through technological design decisions (Y2K, the end of Unix-time in 2038). In all versions the end is often linked to the specific design of time (e.g. the end of the Maya calendar, millenarian movements). But just like religious visions can extend their apocalypse in a new versions (e.g. the always near but always delayed apocalypse of the Saints of the last days), machinic accounts of time can always be extended by enlarging the bit size of the time range (cfr the extension of Unix time till AD 292277026596, or safely after the end of the observable universe according to contemporary physics).\n\n## The time(s) of the machine\n\nMachines also have their natural cycle: the vibrating pulses of the internal crystal clock drives the cycles according to which the processor works. All PCs have such a Real Time Clock (RTC), independent of the processor. The time of the computer is linked to this clock cycle, as it consists of counting cyclical ticks. This produces a single cyclical, and completely linear, time rhythm in the hardware. In contrast to the earthly or natural cycles it is without any seasonal difference or interference between several cycles. This makes a computer into a monadic time capsule, disconnected from the outside rhythms. The time experience in the software is in principle based on this local time cycle. However, once computers and software gets linked and networked, they have to negotiate and synchronize their times. To start, time in a computer is no unique or unified experience. Several hardware components and a diverse collection of software organised in layers and processes create a whole ecology of interdependent time experiences. The operating system experiences other software components, and users through them, as a bunch of processes screaming for attention. One of the most pushy interrupts is the timer forcing the processor to count another click and update the system time. An internal kernel process performs the negotiation of time through which the clock count is linked with a system time. This starts already during the booting process, when the operating system is determining the clock signal frequency. PCs have another time-measuring device, the Programmable Interval Timer (PIT), which can be set by the processor at a defined frequency. During a short time indicated by this PIT, the clock cycles of the RTC get counted and the frequency of the RTC gets calculated. Several other timing devices are present in the hardware, synchronized by kernel processes into a range of times available for the operating system and the processes. As said, one of these times is avail\nable as system time and gets communicated to all other processes when demanded. With the advent of the Internet, computers are not monads anymore, but are socialized in the common rhythm broadcasted with the Network Time Protocol. The local system time serves as back up, but gets continuously adapted to the network time. On a Ubuntu/Debian machine these times can be checked with _timedatectl status_. The _timedatectl_ command enables to change these synchronisation processes. The actual synchronisation is done by the _timesyncd_ process and the time servers to be used can be set in the /etc/systemd/timesyncd.conf file. Other Linux flavours work with the older ntp process which can be configured in /etc/ntp.conf. \n\nThe actual process time is completely different from this system time. Most of the time is in the process of making the time to do it. The scheduler is the big organizer of time in the ecology of internal processes.\nSystem time is externally counted and therefore an external global variable to these processes. These processes can get to the kernel to get the system time. This software is delivered by the software with a range of systems and the programming time of the program. \nThe difference between the actual process time and system time does not appear in how time is perceived by the process. The process only perceives time as the difference between two demands of system time and is oblivious of its time being put on hold. The processor on the other hand spent most of its processing time as idle time: a processor is doing time waiting for slow system components like memory and even slower hard drives and network connections to respond and switches between checking for responses of these laggards. L’enfer du temps perdu, ce sont les autres.\n\nThe actual process time is completely different from this system time. Most of the time iMost of the time processes are put on hold and when the scheduler gives them time they can proceed till the next on hold is forced to make time for another process. The scheduler is the big organizer of time in the internal ecology of processes. System time is externally counted and therefore an external global variable to these processes. They can all send a demand to the kernel to get the system time. This gets communicated through the software stack with a range of system calls of the kernel and through the specific time modules of the programming language the software is programmed in. The difference between the actual process time and system time does not appear in how time is perceived by the process. The process only perceives time as the difference between two demands of system time and is oblivious of its time being put on hold. The processor on the other hand spent most of its processing time as idle time: a processor is doing time waiting for slow system components like memory and even slower hard drives and network connections to respond and switches between checking for responses of these laggards. L’enfer du temps perdu, ce sont les autres\n\nConnecting computers into a network demands new negotiations of time. We already mentioned the networked and globalized UTC timekeeping. Temporal goal negotiations happen on all levels of the system. Network protocols have timed choreographies to make connections and proceed with communications, with time out fails to break off when something goes wrong. The timing of an action is an essential component making the difference between a meaningful signal and noise.\nUsing a browser over http to connect to a website, or more accurately the server providing the website on your request, is built on a discontinuous time practice. In a REST architecture the server just deals with a queue of requests and does not see continuity over time between certain requests from a single user.  New temporal practices have been designed and technically implemented. Through cookies the server is able to recognise users and their state in time. \nThe border between your computer and servers on the internet becomes fuzzy when external software is dropped on your computer and runs in your webbrowser. Javascript modules get dropped on your computer and can start performing tasks on an external server. Similarly, the browser becomes a border where time gets negotiated through synchronization processes.\nWhat time exactly is on the task at hand. Each tool contains its specific temporal practices, dependent on the speed and subject matter of the synchronization process needed.\nFor example, for collaborative document editing tools like Google Docs or Etherpad it is a sequence of versions of the document. A range of strategies have been developed to reduce the costs of conflict. \nThe Easysync-protocol used by Etherpad constructs a document from changesets. A changeset details the edits made by a user or the difference with the train local version of the text. In other words, the flow of time is represented through a series of changes that can be summed up to the present state. The server keeps a sequence of admits changesets. These changes changes represent the current common state and get to all customers. \nLocally each client builds its present state by summing up the rate of change, and is not yet acknowledged. Each client communicates its local changesets, every 500ms after the latest acknowledgment. As this changeset may be related to an earlier version of the first recalculates a changeset relative to the current version. Then it sends an acknowledgment to the sender and the changeset to the other customers. \nDifferent collaborative document editing tools use different methods to deal with conflicts, which also are dependent on the purpose or content of the document. Conflicts between numeric edits in a collaborative spreadsheet are dealt with differently than conflicts between text edits. But what is common to both is that the present gets continuously constructed both on the server and on the clients and negotiated through the specific protocol. The user can always access its local copy of the text and create its local present, but this local present then gets negotiated with the server to create a common present. (% CARLINSAYS:These last two sentences are key and could be clearer. I have tried an edit that maybe does so?)\nAnd every tool rings also its own disasters and apocalyptic experiences through the collapse of the negotiation process and thereby of the common state.\n\nThis negotiation of time is in the first place a negotiation of the present. But also what is past and future gets constructed in this present. The ordered sequence connected to the system time(s) already imply such a past and future. But the construction of a past consists also of a negotiation of what remains and what gets forgotten. Data gets stored in memory or written to storage devices, while the operating systems assigns time stamps to these traces of the present becoming past and writes other traces to a range of log files. \nAs writers trying to capture their stream of consciousness already experienced, it is impossible to completely store the present for future use as past. There will always be a remainder that escapes and can not be written down. Similarly an operating systems can not keep a log of all its operations without getting stuck in an infinite regress in which it tries to log its logging operations. What will be the past for a future present needs to be constructed and selected. Everything else gets forgotten.\nLinux stores its logs in /var/log, while all sorts of programs can create their own logs. All these logs are specific histories, for example of what programs got installed. To get an idea of your past on a Linux system in the file system, you can collect the timestamps of all files with:\n\n% -----------------\n\nos.system(\"ls -R -l --time-style=long-iso \\\n           > modlistsystem-long-iso.txt\")\nos.system(\"ls -R -lu --time-style=long-iso \\\n           > accesslistsystem-long-iso.txt\")\n\n% SRCCODE:\n\n## Renegotiating time with your computer: sundial network time.\n\nTechnology has been a tool through which humans create distance from natural cycles and design their own time experiences. This means we can critically intervene in the functioning of the technology and develop alternative time practices and experiences. As an example we put forward as a not-yet-existing-proof of concept the possibility to let the computer work according to sundial time.\nIs it possible to reconfigure the time of the computer and rewire the connections with human and natural rhythms? Would we be able to let the computer function in an older human time experience, e.g. the time of the sundial? How can such sundial experience be built into the system and what would be the impact on the user?\nSundial time is a geographically and seasonally localised time. It also includes a distinction between day and night. The night is ‘out of time’. This distinction has been extradited from linear time practices, where the amount of light is just a variable external to steady beat of time. Linear time turns the night into economically productive time. Running your computer on sundial time re-introduces the night in your system.\n\nAn intervention to introduce sundial time in your computer is possible in the whole range of places we discussed where time gets negotiated. The most fundamental but also most difficult route would be to exchange the clock with something reflecting a more natural rhythm. However, as we have seen that this clock has become only a back up tool and that the actual system time is always renegotiated with other systems connected through the network, another renegotiation process can be introduced. Therefore, the most easy way to introduce sundial time would be to reconfigure the timesyncdor ntp processes and make them listen to an alternative sundial time server. Such a sundial time server can be built in different ways. A hardware version can be made of a sundial combined with light sensors, measuring the location of the shadow through the difference in light and deriving the sundial time from this location. This would link the time server to the actual earthly day and night cycle. A simulated version could be a local piece of software which looks up the timing of sunrise and sunset at the specific location and day. Based on this information it recalculates the local sundial time, which it provides through the NTP protocol. The local computer receives this sundial time from the nearest sundial time server and continuously adapts its system time, as it does now already based on UTC. Further, it can be programmed to go into sleep modus during the night and to wake up only when a sunrise signal is received from the time server.\n\nLetting a computer run on sundial time is a conscious effort to disconnect it from human-made linear time and to reconnect it with the old earth-driven cycles and the ancient time experience by humans. The unified time of UTC and the time zones gets broken up into extremely localized time servers, and the difference between day and night gets introduced into the functioning of the computer. \nThis re-enactment of such cycles through the computer will remind human users that the experience of time is a socially negotiated and technically implemented experience. Further, a computer running on sundial time would be a great piece of nannyware nudging the user to live in harmony with his natural environment and a synchronization tool to re-establish the link between the users bio-rhythm and the earthly day and night cycle. It would also be a great reminder why humans tried in the first place to escape from these earthly rhythms through technology and started hacking time.\n\nHans Lammerant, June 2017 - January 2018\n\n% NOTE: -\n This text was written in and in resistance/conflict to WTC time, which is exemplary for the bureaucratic office time experience. The WTC building boots up at 9AM and is turned off in several steps (at 5PM the air conditioning is turned off, later entrances close) into a wake state. The concierge can let you in and out through the night side entry, but main life support systems remain turned off outside office hours. This wake state continues during the weekend, turning the building into a glass house with limited air in storage. On Monday morning this bureaucratic time capsule revives from its slumber. A suffocating experience, but actually the building is a great piece of nannyware nudging towards a healthy office rhythm without too much extra hours outside the herd work ethic.\n\nSuch office time can also be implemented and negotiated on your local computer. A small Proof of Concept was the adapted bashrc on the etherbox simulating a system getting bored and stealing time. This can be further developed by including a differentiated response during versus outside office hours, aging (slower when timestamp of original install is more remote in time), etc.\n\n\n\n\n\n\n","attribs":"*d+4+b*a|1+1*a+r*5+2*b|1+1*5|1+1*0|1+1*5+9*0|2+1n*d+lw*0|1+1*d|4+2f9*0|1+1*d|1+19i*0|3+w*d|2+23o*0|1+1*0+2g*d|1+3k*d+7e*0|1+1*0+fz*d|2+2*d+z0*0|2+2*0+38*d|6+1jg*d+bf*0|1+4*0+81*9+8*0+7*9+8*0+1f*c+5*0+4n*9+i*0+1*9+5*0+1o*9+2*a+1*9+2z*0|4+ja*0+6c*9+a*0|1+7h*0+80*5|1+1*0|1+1*5|2+l+17*5|1+1+15*0|1+1+18*5|1+1+18*0|1+1*5|2+c*0|3+1u*0+1s*9+4*0+r*9+5*0|2+h3*0+8h*9+1*0|2+3h*0+g5*0*2+9*0+3*0*2+3*0+23*9+3*0|2+oa*0+7t*9+1*0+h*9+3*0|1+2l*0+97*9+1*0|2+73*0+g*c+c*0|2+e*6+2*6*7*8+4*6|1+4*0|2+m0*0+ak*a|5+5*0|1+1|1+1"}}},"pad:observatory.guide.experiencingtime:revs:1101":{"changeset":"Z:fyt>7|n=7by=2h*d+7$s in th","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148006254}},"pad:observatory.guide.experiencingtime:revs:1102":{"changeset":"Z:fz0>5|n=7by=2o*d+5$e pro","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148006754}},"pad:observatory.guide.experiencingtime:revs:1103":{"changeset":"Z:fz5>2|n=7by=2t*d+2$ce","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148007259}},"pad:observatory.guide.experiencingtime:revs:1104":{"changeset":"Z:fz7>3|n=7by=2v*d+3$ss ","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148007759}},"pad:observatory.guide.experiencingtime:revs:1105":{"changeset":"Z:fza>3|n=7by=2y*d+3$o f","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148008261}},"pad:observatory.guide.experiencingtime:revs:1106":{"changeset":"Z:fzd>0|n=7by=2z-2*d+2$f ","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148008762}},"pad:observatory.guide.experiencingtime:revs:1107":{"changeset":"Z:fzd>3|n=7by=31*d+3$mak","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148009263}},"pad:observatory.guide.experiencingtime:revs:1108":{"changeset":"Z:fzg>5|n=7by=34*d+5$ing t","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148009763}},"pad:observatory.guide.experiencingtime:revs:1109":{"changeset":"Z:fzl>5|n=7by=39*d+5$me to","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148010264}},"pad:observatory.guide.experiencingtime:revs:111":{"changeset":"Z:f33>1|1t=e68=9*6|1+1$\n","meta":{"author":"a.CLJqMQchPGX2f376","timestamp":1518197361768}},"pad:observatory.guide.experiencingtime:revs:1110":{"changeset":"Z:fzq>6|n=7by=3e*d+6$ do it","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148010770}},"pad:observatory.guide.experiencingtime:revs:1111":{"changeset":"Z:fzw>2|n=7by=3k*d+2$. ","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148011268}},"pad:observatory.guide.experiencingtime:revs:1112":{"changeset":"Z:fzy>1|n=7by=39*d+1$i","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148028343}},"pad:observatory.guide.experiencingtime:revs:1113":{"changeset":"Z:fzz>2|n=7by=3n*d+2$TH","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148038493}},"pad:observatory.guide.experiencingtime:revs:1114":{"changeset":"Z:g01>2|n=7by=3p*d+2$e ","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148038989}},"pad:observatory.guide.experiencingtime:revs:1115":{"changeset":"Z:g03>1|n=7by=3r*d+1$s","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148039494}},"pad:observatory.guide.experiencingtime:revs:1116":{"changeset":"Z:g04<3|n=7by=3p-3$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148039996}},"pad:observatory.guide.experiencingtime:revs:1117":{"changeset":"Z:g01<1|n=7by=3o-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148040499}},"pad:observatory.guide.experiencingtime:revs:1118":{"changeset":"Z:g00>4|n=7by=3o*d+4$he s","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148041001}},"pad:observatory.guide.experiencingtime:revs:1119":{"changeset":"Z:g04>3|n=7by=3s*d+3$che","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148041501}},"pad:observatory.guide.experiencingtime:revs:112":{"changeset":"Z:f34>0|2=g-1*5+1$%","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1518641699717}},"pad:observatory.guide.experiencingtime:revs:1120":{"changeset":"Z:g07>2|n=7by=3v*d+2$du","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148042002}},"pad:observatory.guide.experiencingtime:revs:1121":{"changeset":"Z:g09>3|n=7by=3x*d+3$ler","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148042503}},"pad:observatory.guide.experiencingtime:revs:1122":{"changeset":"Z:g0c>2|n=7by=40*d+2$is","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148043004}},"pad:observatory.guide.experiencingtime:revs:1123":{"changeset":"Z:g0e>1|n=7by=42*d+1$ ","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148043602}},"pad:observatory.guide.experiencingtime:revs:1124":{"changeset":"Z:g0f<1|n=7by=41-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148044102}},"pad:observatory.guide.experiencingtime:revs:1125":{"changeset":"Z:g0e<2|n=7by=3z-2$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148044604}},"pad:observatory.guide.experiencingtime:revs:1126":{"changeset":"Z:g0c>0|n=7by=3z-1*d+1$r","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148045292}},"pad:observatory.guide.experiencingtime:revs:1127":{"changeset":"Z:g0c>1|n=7by=40*d+1$i","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148045794}},"pad:observatory.guide.experiencingtime:revs:1128":{"changeset":"Z:g0d>2|n=7by=41*d+2$s ","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148046292}},"pad:observatory.guide.experiencingtime:revs:1129":{"changeset":"Z:g0f<1|n=7by=41-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148046823}},"pad:observatory.guide.experiencingtime:revs:113":{"changeset":"Z:f34>1|2=g=1*5+1$ ","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1518641700250}},"pad:observatory.guide.experiencingtime:revs:1130":{"changeset":"Z:g0e<2|n=7by=3z-2$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148047327}},"pad:observatory.guide.experiencingtime:revs:1131":{"changeset":"Z:g0c>0|n=7by=3z-1*d+1$i","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148048018}},"pad:observatory.guide.experiencingtime:revs:1132":{"changeset":"Z:g0c>1|n=7by=40*d+1$s","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148048522}},"pad:observatory.guide.experiencingtime:revs:1133":{"changeset":"Z:g0d>1|n=7by=3z*d+1$ ","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148050806}},"pad:observatory.guide.experiencingtime:revs:1134":{"changeset":"Z:g0e>1|n=7by=42*d+1$ ","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148051756}},"pad:observatory.guide.experiencingtime:revs:1135":{"changeset":"Z:g0f>0|n=7by=42-1*d+1$t","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148052263}},"pad:observatory.guide.experiencingtime:revs:1136":{"changeset":"Z:g0f<1|n=7by=42-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148053090}},"pad:observatory.guide.experiencingtime:revs:1137":{"changeset":"Z:g0e>1|n=7by=42*d+1$ ","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148053810}},"pad:observatory.guide.experiencingtime:revs:1138":{"changeset":"Z:g0f>3|n=7by=42-1*d+4$theb","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148054312}},"pad:observatory.guide.experiencingtime:revs:1139":{"changeset":"Z:g0i>3|n=7by=46*d+3$ig ","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148054809}},"pad:observatory.guide.experiencingtime:revs:114":{"changeset":"Z:f35>3|2=g=2*5+3$HEA","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1518641700754}},"pad:observatory.guide.experiencingtime:revs:1140":{"changeset":"Z:g0l<2|n=7by=47-2$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148055309}},"pad:observatory.guide.experiencingtime:revs:1141":{"changeset":"Z:g0j<4|n=7by=43-4$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148055812}},"pad:observatory.guide.experiencingtime:revs:1142":{"changeset":"Z:g0f<1|n=7by=42-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148056323}},"pad:observatory.guide.experiencingtime:revs:1143":{"changeset":"Z:g0e>1|n=7by=42*d+1$ ","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148056814}},"pad:observatory.guide.experiencingtime:revs:1144":{"changeset":"Z:g0f>0|n=7by=42-1*d+1$t","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148057314}},"pad:observatory.guide.experiencingtime:revs:1145":{"changeset":"Z:g0f>1|n=7by=43*d+1$h","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148057821}},"pad:observatory.guide.experiencingtime:revs:1146":{"changeset":"Z:g0g>2|n=7by=44*d+2$eb","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148058315}},"pad:observatory.guide.experiencingtime:revs:1147":{"changeset":"Z:g0i>5|n=7by=46*d+5$ig or","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148058814}},"pad:observatory.guide.experiencingtime:revs:1148":{"changeset":"Z:g0n>4|n=7by=4b*d+4$gani","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148059315}},"pad:observatory.guide.experiencingtime:revs:1149":{"changeset":"Z:g0r>1|n=7by=4f*d+1$z","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148059816}},"pad:observatory.guide.experiencingtime:revs:115":{"changeset":"Z:f38>2|2=g=5*5+2$DE","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1518641701292}},"pad:observatory.guide.experiencingtime:revs:1150":{"changeset":"Z:g0s>2|n=7by=4g*d+2$er","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148060350}},"pad:observatory.guide.experiencingtime:revs:1151":{"changeset":"Z:g0u>2|n=7by=4i*d+2$ o","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148060848}},"pad:observatory.guide.experiencingtime:revs:1152":{"changeset":"Z:g0w>2|n=7by=4k*d+2$f ","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148061350}},"pad:observatory.guide.experiencingtime:revs:1153":{"changeset":"Z:g0y>1|n=7by=4m*d+1$t","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148064409}},"pad:observatory.guide.experiencingtime:revs:1154":{"changeset":"Z:g0z>3|n=7by=4n*d+3$ime","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148064910}},"pad:observatory.guide.experiencingtime:revs:1155":{"changeset":"Z:g12>6|n=7by=4q*d+6$ in th","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148065410}},"pad:observatory.guide.experiencingtime:revs:1156":{"changeset":"Z:g18>3|n=7by=4w*d+3$e e","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148065910}},"pad:observatory.guide.experiencingtime:revs:1157":{"changeset":"Z:g1b>4|n=7by=4z*d+4$colo","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148066415}},"pad:observatory.guide.experiencingtime:revs:1158":{"changeset":"Z:g1f>2|n=7by=53*d+2$y ","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148066916}},"pad:observatory.guide.experiencingtime:revs:1159":{"changeset":"Z:g1h<1|n=7by=53-2*d+1$g","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148067416}},"pad:observatory.guide.experiencingtime:revs:116":{"changeset":"Z:f3a>1|2=g=7*5+1$R","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1518641701793}},"pad:observatory.guide.experiencingtime:revs:1160":{"changeset":"Z:g1g>7|n=7by=54*d+7$y of in","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148067928}},"pad:observatory.guide.experiencingtime:revs:1161":{"changeset":"Z:g1n>4|n=7by=5b*d+4$tern","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148068429}},"pad:observatory.guide.experiencingtime:revs:1162":{"changeset":"Z:g1r>6|n=7by=5f*d+6$al pro","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148068928}},"pad:observatory.guide.experiencingtime:revs:1163":{"changeset":"Z:g1x>2|n=7by=5l*d+2$ce","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148069434}},"pad:observatory.guide.experiencingtime:revs:1164":{"changeset":"Z:g1z>3|n=7by=5n*d+3$sse","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148069935}},"pad:observatory.guide.experiencingtime:revs:1165":{"changeset":"Z:g22>3|n=7by=5q*d+3$s. ","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148070435}},"pad:observatory.guide.experiencingtime:revs:1166":{"changeset":"Z:g25>1|n=7by=42*d+1$ ","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148072907}},"pad:observatory.guide.experiencingtime:revs:1167":{"changeset":"Z:g26>1|n=7by=46*d+1$ ","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148073971}},"pad:observatory.guide.experiencingtime:revs:1168":{"changeset":"Z:g27<28|n=7by=3n-28$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148081083}},"pad:observatory.guide.experiencingtime:revs:1169":{"changeset":"Z:fzz<1|n=7by=3m-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148081577}},"pad:observatory.guide.experiencingtime:revs:117":{"changeset":"Z:f3b>1|2=g=8*5+1$:","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1518641702296}},"pad:observatory.guide.experiencingtime:revs:1170":{"changeset":"Z:fzy>1|n=7by=3m*d+1$ ","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148082244}},"pad:observatory.guide.experiencingtime:revs:1171":{"changeset":"Z:fzz>1|n=7by=106*d+1$.","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148128735}},"pad:observatory.guide.experiencingtime:revs:1172":{"changeset":"Z:g00<tf|j=6ii|3-tf$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148166349}},"pad:observatory.guide.experiencingtime:revs:1173":{"changeset":"Z:f6l<1|i=6ih|1-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148166849}},"pad:observatory.guide.experiencingtime:revs:1174":{"changeset":"Z:f6k>1|m=7vr=cz*d|1+1$\n","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148222428}},"pad:observatory.guide.experiencingtime:revs:1175":{"changeset":"Z:f6l>1|n=88r*d|1+1$\n","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148222923}},"pad:observatory.guide.experiencingtime:revs:1176":{"changeset":"Z:f6m>ds|n=88r*d+ds$Connecting computers into a network demands new negotiations of time. We already mentioned the networked and globalised UTC timekeeping. But temporal negotiations happen on all levels of the system. Network protocols have timed choreographies to make connections and proceed with communications, with time out failsafes to break off when something goes wrong. The timing of an action is an essential component making the difference between a meaningful signal and noise. Using a browser over http","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148224397}},"pad:observatory.guide.experiencingtime:revs:1177":{"changeset":"Z:fke>1|m=7vr=cz*d|1+1$\n","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148229238}},"pad:observatory.guide.experiencingtime:revs:1178":{"changeset":"Z:fkf>1ne|o=88s=ds*d|1+15t*d+hl$to connect to a website, or better the server providing the website on your request, is built on a discontinuous time practice. In a REST architecture the server just deals with a queue of requests and does not see continuity over time between certain requests from a single user. New temporal practices have been designed and technically implemented. Through cookies the server is able to recognise users and their state in time. The border between your computer and servers on the internet becomes fuzzy when external software is dropped on your computer and runs in your webbrowser. Javascript modules get dropped on your computer and can start performing tasks on demand of an external server, be it rendering a graph or mining digital money. Similarly, the browser becomes a border where time gets negotiated through synchronisation processes. What time exactly is depends on the task at hand. Each tool contains its specific temporal practices, dependent on the speed and subject matter of the synchronization process needed. For example, for collaborative document editing tools like Google Docs or Etherpad it is a sequence of versions of the document. A range of strategies have been developed to allow to synchronize the changes made by different users with the least amount of conflict. The Easysync-protocol used by Etherpad constructs a document from changesets. A changeset details the edits made by a user or the difference with the former local version of the text. In other words, the fl\now of time is represented through a series of changesets which can be summed to the present state. The server keeps a sequence of acknowledged changesets. These acknowledged changesets represent the current common state and get communicated to all clients. Locally each client builds its present state by summing up the acknowledged changesets received from the server, and with the local changesets which are not yet acknowledged. Each client communicates its local changesets, every 500 ms after the latest acknowledgment. As this changeset can be relative to an earlier version the server first recalculates a changeset relative 9","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148249499}},"pad:observatory.guide.experiencingtime:revs:1179":{"changeset":"Z:h7t>1|o=88s=ds*d+1$ ","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148251160}},"pad:observatory.guide.experiencingtime:revs:118":{"changeset":"Z:f3c<1|5=b2=97-1$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423762328}},"pad:observatory.guide.experiencingtime:revs:1180":{"changeset":"Z:h7u<1jl|o=88s-1jl$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148255819}},"pad:observatory.guide.experiencingtime:revs:1181":{"changeset":"Z:fo9>1jl|o=88s*d+1jl$Connecting computers into a network demands new negotiations of time. We already mentioned the networked and globalised UTC timekeeping. But temporal negotiations happen on all levels of the system. Network protocols have timed choreographies to make connections and proceed with communications, with time out failsafes to break off when something goes wrong. The timing of an action is an essential component making the difference between a meaningful signal and noise. Using a browser over http to connect to a website, or better the server providing the website on your request, is built on a discontinuous time practice. In a REST architecture the server just deals with a queue of requests and does not see continuity over time between certain requests from a single user. New temporal practices have been designed and technically implemented. Through cookies the server is able to recognise users and their state in time. The border between your computer and servers on the internet becomes fuzzy when external software is dropped on your computer and runs in your webbrowser. Javascript modules get dropped on your computer and can start performing tasks on demand of an external server, be it rendering a graph or mining digital money. Similarly, the browser becomes a border where time gets negotiated through synchronisation processes. What time exactly is depends on the task at hand. Each tool contains its specific temporal practices, dependent on the speed and subject matter of the synchronization process needed. For example, for collaborative document editing tools like Google Docs or Etherpad it is a sequence of versions of the document. A range of strategies have been developed to allow to synchronize the changes made by different users with the least amount of conflict. The Easysync-protocol used by Etherpad constructs a document from changesets. A changeset details the edits made by a user or the difference with the former local version of the text. In other words, the fl","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148263290}},"pad:observatory.guide.experiencingtime:revs:1182":{"changeset":"Z:h7u<1|o=88s=1jl|1-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148267999}},"pad:observatory.guide.experiencingtime:revs:1183":{"changeset":"Z:h7t>2|o=88s=21-1hi*d|1+1hk$halready mentioned the networked and globalised UTC timekeeping. But temporal negotiations happen on all levels of the system. Network protocols have timed choreographies to make connections and proceed with communications, with time out failsafes to break off when something goes wrong. The timing of an action is an essential component making the difference between a meaningful signal and noise. Using a browser over http to connect to a website, or better the server providing the website on your request, is built on a discontinuous time practice. In a REST architecture the server just deals with a queue of requests and does not see continuity over time between certain requests from a single user. New temporal practices have been designed and technically implemented. Through cookies the server is able to recognise users and their state in time. The border between your computer and servers on the internet becomes fuzzy when external software is dropped on your computer and runs in your webbrowser. Javascript modules get dropped on your computer and can start performing tasks on demand of an external server, be it rendering a graph or mining digital money. Similarly, the browser becomes a border where time gets negotiated through synchronisation processes. What time exactly is depends on the task at hand. Each tool contains its specific temporal practices, dependent on the speed and subject matter of the synchronization process needed. For example, for collaborative document editing tools like Google Docs or Etherpad it is a sequence of versions of the document. A range of strategies have been developed to allow to synchronize the changes made by different users with the least amount of conflict. The Easysync-protocol used by Etherpad constructs a document from changesets. A changeset details the edits made by a user or the difference with the former local version of the text. In other words, the \n","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148715755}},"pad:observatory.guide.experiencingtime:revs:1184":{"changeset":"Z:h7v>3|o=88s=22*d+3$ave","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148716247}},"pad:observatory.guide.experiencingtime:revs:1185":{"changeset":"Z:h7y>1|o=88s=25*d+1$ ","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148716747}},"pad:observatory.guide.experiencingtime:revs:1186":{"changeset":"Z:h7z>1|o=88s=8v*d+1$-","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148749827}},"pad:observatory.guide.experiencingtime:revs:1187":{"changeset":"Z:h80<cz|l=7ir-cz$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148758665}},"pad:observatory.guide.experiencingtime:revs:1188":{"changeset":"Z:gv1<5|o=7vt=er-6*d+1$m","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148770873}},"pad:observatory.guide.experiencingtime:revs:1189":{"changeset":"Z:guw>2|o=7vt=es*d+2$or","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148771369}},"pad:observatory.guide.experiencingtime:revs:119":{"changeset":"Z:f3b<2|5=b2=95-2$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423762824}},"pad:observatory.guide.experiencingtime:revs:1190":{"changeset":"Z:guy>2|o=7vt=eu*d+2$e ","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148771873}},"pad:observatory.guide.experiencingtime:revs:1191":{"changeset":"Z:gv0>1|o=7vt=ew*d+1$a","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148772374}},"pad:observatory.guide.experiencingtime:revs:1192":{"changeset":"Z:gv1>4|o=7vt=ex*d+4$ccur","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148772873}},"pad:observatory.guide.experiencingtime:revs:1193":{"changeset":"Z:gv5>5|o=7vt=f1-14g*d|1+14l$atel the server providing the website on your request, is built on a discontinuous time practice. In a REST architecture the server just deals with a queue of requests and does not see continuity over time between certain requests from a single user. New temporal practices have been designed and technically implemented. Through cookies the server is able to recognise users and their state in time. The border between your computer and servers on the internet becomes fuzzy when external software is dropped on your computer and runs in your webbrowser. Javascript modules get dropped on your computer and can start performing tasks on demand of an external server, be it rendering a graph or mining digital money. Similarly, the browser becomes a border where time gets negotiated through synchronisation processes. What time exactly is depends on the task at hand. Each tool contains its specific temporal practices, dependent on the speed and subject matter of the synchronization process needed. For example, for collaborative document editing tools like Google Docs or Etherpad it is a sequence of versions of the document. A range of strategies have been developed to allow to synchronize the changes made by different users with the least amount of conflict. The Easysync-protocol used by Etherpad constructs a document from changesets. A changeset details the edits made by a user or the difference with the former local version of the text. In other\n","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148773373}},"pad:observatory.guide.experiencingtime:revs:1194":{"changeset":"Z:gva>0|o=7vt=f5-1*d+1$y","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148773874}},"pad:observatory.guide.experiencingtime:revs:1195":{"changeset":"Z:gva>1|o=7vt=f6*d+1$ ","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148775050}},"pad:observatory.guide.experiencingtime:revs:1196":{"changeset":"Z:gvb>1|o=7vt=gn*d+1$ ","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148792706}},"pad:observatory.guide.experiencingtime:revs:1197":{"changeset":"Z:gvc>2|o=7vt=go*d+2$a ","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148793198}},"pad:observatory.guide.experiencingtime:revs:1198":{"changeset":"Z:gve>4|o=7vt=gq*d+4$proc","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148793702}},"pad:observatory.guide.experiencingtime:revs:1199":{"changeset":"Z:gvi>3|o=7vt=gu-12o*d|1+12r$es built on a discontinuous time practice. In a REST architecture the server just deals with a queue of requests and does not see continuity over time between certain requests from a single user. New temporal practices have been designed and technically implemented. Through cookies the server is able to recognise users and their state in time. The border between your computer and servers on the internet becomes fuzzy when external software is dropped on your computer and runs in your webbrowser. Javascript modules get dropped on your computer and can start performing tasks on demand of an external server, be it rendering a graph or mining digital money. Similarly, the browser becomes a border where time gets negotiated through synchronisation processes. What time exactly is depends on the task at hand. Each tool contains its specific temporal practices, dependent on the speed and subject matter of the synchronization process needed. For example, for collaborative document editing tools like Google Docs or Etherpad it is a sequence of versions of the document. A range of strategies have been developed to allow to synchronize the changes made by different users with the least amount of conflict. The Easysync-protocol used by Etherpad constructs a document from changesets. A changeset details the edits made by a user or the difference with the former local version of the tex\n","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148794206}},"pad:observatory.guide.experiencingtime:revs:12":{"changeset":"Z:f1i>2|1a=b8h=1*0+2$# ","meta":{"author":"a.I4FbrrCTDQNN8GIf","timestamp":1517420650657}},"pad:observatory.guide.experiencingtime:revs:120":{"changeset":"Z:f39<1|5=b2=94-1$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423763326}},"pad:observatory.guide.experiencingtime:revs:1200":{"changeset":"Z:gvl>1|o=7vt=gw*d+1$s","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148794704,"atext":{"text":"__% NOPUBLISH__\n% SHOW: tgsoimages.svg hans H\n\n\n% HEADER: How humans and machines negotiate the experience of time\n\nThe experience of time is an essential element of any form of experience or cognition. Emotions depend to a large extent on expectations, or the potential coming of a future event. Any observing or experience of difference, of presence related to an earlier or later absence, is linked with an experience of time. However, how the actual experience of time is shaped is strongly influenced by all sort of design decisions and implementations, both for humans and machines. Also, the experience of time is a conglomerate of different experiences: time as a common moment, the duration of a certain time, time as cyclic events, historical time, and so on. Researching how humans and machines experience time and negotiate their time experiences is therefore an interesting avenue to explore\n\nHumans have developed a time experience which was linked to natural life cycles, but it has been influenced by both technology and social conditions. The first time cycle is the day-night time cycle. Humans do their stuff during the day, but need to sleep. The night is generally the preferred time for sleep, but the availability of artificial light and the need for long-distance coordination has influenced how humans deal with the day cycle and the place for sleep in it. Part of this experience is measuring time. Early time measurement was linked to observation of natural conditions like sunrise and sunset. Measurement of such sun cycles (which is in fact an earth cycle) through sundials allowed for more precise time referencing, but it is very place and season dependent. More light during summer than winter implied that hours were longer in summer than in winter. Similarly such changes were greater at higher latitudes, while near the equator such changes are limited. In other words, time measured by sundials provided a local common reference of time, but not one common time over longer distances.\n\nThis seasonal time experience when the human world was flat reflects the unknown spherical geometry of the earth cycle projected on the flat earth. When humans became aware of earth as a sphere, they responded by flattening and linearising time. Mechanical clocks allowed for the unification of time lengths and thereby also standardized time. Physical observation and all sorts of economic processes needed such standardized time measurement. Early versions of such time measurement, like hourglasses, existed but remained disconnected from day time measurement. Mechanical clocks also allowed for the unification of different time cycles and scales and for the standardization of time over longer distances, departing from the local sundial time to time zones, which were less strictly linked to the seasonal rhythm of the sun and more to geographical zones. Long distance trade, industrialization and later long distance communication by electro-magnetic signals (comparable to the speed of light) demanded more geographical coordination. In the nineteenth century, coordination developed through clock networks, with a master clock driving the slave clocks. Nowadays we work with atomic clocks and a global Coordinated Universal Time or UTC as a reference to which geographical time zones are connected. Humans organize their activities accordingly, if necessary by de-linking from the solar rhythm. The borders of time zones diverge very often from the longitudinal lines for economic and political reasons. A similar socialization and globalization of time occurred for computers. Where in the early computer age time was set and counted locally by each machine, it is now common to continuously synchronize time over the Internet through time servers and the Network Time Protocol. Humans get woken, cron jobs get triggered, precision bombs get guided, and trains count their delays in measure with the drill signal of the Master Clock of the US Naval Observatory, only differing by tiny variations in latency times.\n\nHumans have also developed ways to relate to time on longer scales, which were originally linked to natural rhythms: years, life cycles. Calendar systems are used to determine seasonal agricultural needs (when to plant, when to harvest), while they also make it possible to keep track of life cycles and historical time. Again, such calendar systems have been very diverse and local, but have been slowly fused to a couple of dominant models. Generational or birth, life, and death rhythms, originating from the human experience, have been projected on all sorts of phenomena. Religions tried to explain the origin of everything, while also often predicting the end in apocalyptic visions. The demise of religion at the hand of science did not let such generational visions disappear. They got new expressions in scientific theories of the beginning (big bang, evolution) and end (the heath death of the universe, the end of the earth at the final burnout phase of the sun) of everything. Similar apocalyptic visions are now embedded through technological design decisions (Y2K, the end of Unix-time in 2038). In all versions the end is often linked to the specific design of time (e.g. the end of the Maya calendar, millenarian movements). But just like religious visions can extend their apocalypse in a new versions (e.g. the always near but always delayed apocalypse of the Saints of the last days), machinic accounts of time can always be extended by enlarging the bit size of the time range (cfr the extension of Unix time till AD 292277026596, or safely after the end of the observable universe according to contemporary physics).\n\n## The time(s) of the machine\n\nMachines also have their natural cycle: the vibrating pulses of the internal crystal clock drives the cycles according to which the processor works. All PCs have such a Real Time Clock (RTC), independent of the processor. The time of the computer is linked to this clock cycle, as it consists of counting cyclical ticks. This produces a single cyclical, and completely linear, time rhythm in the hardware. In contrast to the earthly or natural cycles it is without any seasonal difference or interference between several cycles. This makes a computer into a monadic time capsule, disconnected from the outside rhythms. The time experience in the software is in principle based on this local time cycle. However, once computers and software gets linked and networked, they have to negotiate and synchronize their times. To start, time in a computer is no unique or unified experience. Several hardware components and a diverse collection of software organised in layers and processes create a whole ecology of interdependent time experiences. The operating system experiences other software components, and users through them, as a bunch of processes screaming for attention. One of the most pushy interrupts is the timer forcing the processor to count another click and update the system time. An internal kernel process performs the negotiation of time through which the clock count is linked with a system time. This starts already during the booting process, when the operating system is determining the clock signal frequency. PCs have another time-measuring device, the Programmable Interval Timer (PIT), which can be set by the processor at a defined frequency. During a short time indicated by this PIT, the clock cycles of the RTC get counted and the frequency of the RTC gets calculated. Several other timing devices are present in the hardware, synchronized by kernel processes into a range of times available for the operating system and the processes. As said, one of these times is avail\nable as system time and gets communicated to all other processes when demanded. With the advent of the Internet, computers are not monads anymore, but are socialized in the common rhythm broadcasted with the Network Time Protocol. The local system time serves as back up, but gets continuously adapted to the network time. On a Ubuntu/Debian machine these times can be checked with _timedatectl status_. The _timedatectl_ command enables to change these synchronisation processes. The actual synchronisation is done by the _timesyncd_ process and the time servers to be used can be set in the /etc/systemd/timesyncd.conf file. Other Linux flavours work with the older ntp process which can be configured in /etc/ntp.conf. \n\nThe actual process time is completely different from this system time. Most of the time is in the process of making time to do it. Most of the time processes are put on hold and when the scheduler gives them time they can proceed till the next on hold is forced to make time for another process. The scheduler is the big organizer of time in the internal ecology of processes. System time is externally counted and therefore an external global variable to these processes. They can all send a demand to the kernel to get the system time. This gets communicated through the software stack with a range of system calls of the kernel and through the specific time modules of the programming language the software is programmed in. The difference between the actual process time and system time does not appear in how time is perceived by the process. The process only perceives time as the difference between two demands of system time and is oblivious of its time being put on hold. The processor on the other hand spent most of its processing time as idle time: a processor is doing time waiting for slow system components like memory and even slower hard drives and network connections to respond and switches between checking for responses of these laggards. L’enfer du temps perdu, ce sont les autres.\n\n\nUsing a browser over http to connect to a website, or more accurately the server providing the website on your request, is built on a discontinuous time practice. In a REST architecture the server just deals with a queue of requests and does not see continuity over time between certain requests from a single user.  New temporal practices have been designed and technically implemented. Through cookies the server is able to recognise users and their state in time. \n\nConnecting computers into a network demands new negotiations of time. We have already mentioned the networked and globalised UTC timekeeping. But temporal negotiations happen on all levels of the system. Network protocols have timed choreographies to make connections and proceed with communications, with time out fail-safes to break off when something goes wrong. The timing of an action is an essential component making the difference between a meaningful signal and noise. Using a browser over http to connect to a website, or more accurately the server providing the website on your request, is a process built on a discontinuous time practice. In a REST architecture the server just deals with a queue of requests and does not see continuity over time between certain requests from a single user. New temporal practices have been designed and technically implemented. Through cookies the server is able to recognise users and their state in time. The border between your computer and servers on the internet becomes fuzzy when external software is dropped on your computer and runs in your webbrowser. Javascript modules get dropped on your computer and can start performing tasks on demand of an external server, be it rendering a graph or mining digital money. Similarly, the browser becomes a border where time gets negotiated through synchronisation processes. What time exactly is depends on the task at hand. Each tool contains its specific temporal practices, dependent on the speed and subject matter of the synchronization process needed. For example, for collaborative document editing tools like Google Docs or Etherpad it is a sequence of versions of the document. A range of strategies have been developed to allow to synchronize the changes made by different users with the least amount of conflict. The Easysync-protocol used by Etherpad constructs a document from changesets. A changeset details the edits made by a user or the difference with the former local version of the tex\nt. In other\n words, the \nflow of time is represented through a series of changesets which can be summed to the present state. The server keeps a sequence of acknowledged changesets. These acknowledged changesets represent the current common state and get communicated to all clients. Locally each client builds its present state by summing up the acknowledged changesets received from the server, and with the local changesets which are not yet acknowledged. Each client communicates its local changesets, every 500 ms after the latest acknowledgment. As this changeset can be relative to an earlier version the server first recalculates a changeset relative 9\n\nThe border between your computer and servers on the internet becomes fuzzy when external software is dropped on your computer and runs in your webbrowser. Javascript modules get dropped on your computer and can start performing tasks on an external server. Similarly, the browser becomes a border where time gets negotiated through synchronization processes.\nWhat time exactly is on the task at hand. Each tool contains its specific temporal practices, dependent on the speed and subject matter of the synchronization process needed.\nFor example, for collaborative document editing tools like Google Docs or Etherpad it is a sequence of versions of the document. A range of strategies have been developed to reduce the costs of conflict. \nThe Easysync-protocol used by Etherpad constructs a document from changesets. A changeset details the edits made by a user or the difference with the train local version of the text. In other words, the flow of time is represented through a series of changes that can be summed up to the present state. The server keeps a sequence of admits changesets. These changes changes represent the current common state and get to all customers. \nLocally each client builds its present state by summing up the rate of change, and is not yet acknowledged. Each client communicates its local changesets, every 500ms after the latest acknowledgment. As this changeset may be related to an earlier version of the first recalculates a changeset relative to the current version. Then it sends an acknowledgment to the sender and the changeset to the other customers. \nDifferent collaborative document editing tools use different methods to deal with conflicts, which also are dependent on the purpose or content of the document. Conflicts between numeric edits in a collaborative spreadsheet are dealt with differently than conflicts between text edits. But what is common to both is that the present gets continuously constructed both on the server and on the clients and negotiated through the specific protocol. The user can always access its local copy of the text and create its local present, but this local present then gets negotiated with the server to create a common present. (% CARLINSAYS:These last two sentences are key and could be clearer. I have tried an edit that maybe does so?)\nAnd every tool rings also its own disasters and apocalyptic experiences through the collapse of the negotiation process and thereby of the common state.\n\nThis negotiation of time is in the first place a negotiation of the present. But also what is past and future gets constructed in this present. The ordered sequence connected to the system time(s) already imply such a past and future. But the construction of a past consists also of a negotiation of what remains and what gets forgotten. Data gets stored in memory or written to storage devices, while the operating systems assigns time stamps to these traces of the present becoming past and writes other traces to a range of log files. \nAs writers trying to capture their stream of consciousness already experienced, it is impossible to completely store the present for future use as past. There will always be a remainder that escapes and can not be written down. Similarly an operating systems can not keep a log of all its operations without getting stuck in an infinite regress in which it tries to log its logging operations. What will be the past for a future present needs to be constructed and selected. Everything else gets forgotten.\nLinux stores its logs in /var/log, while all sorts of programs can create their own logs. All these logs are specific histories, for example of what programs got installed. To get an idea of your past on a Linux system in the file system, you can collect the timestamps of all files with:\n\n% -----------------\n\nos.system(\"ls -R -l --time-style=long-iso \\\n           > modlistsystem-long-iso.txt\")\nos.system(\"ls -R -lu --time-style=long-iso \\\n           > accesslistsystem-long-iso.txt\")\n\n% SRCCODE:\n\n## Renegotiating time with your computer: sundial network time.\n\nTechnology has been a tool through which humans create distance from natural cycles and design their own time experiences. This means we can critically intervene in the functioning of the technology and develop alternative time practices and experiences. As an example we put forward as a not-yet-existing-proof of concept the possibility to let the computer work according to sundial time.\nIs it possible to reconfigure the time of the computer and rewire the connections with human and natural rhythms? Would we be able to let the computer function in an older human time experience, e.g. the time of the sundial? How can such sundial experience be built into the system and what would be the impact on the user?\nSundial time is a geographically and seasonally localised time. It also includes a distinction between day and night. The night is ‘out of time’. This distinction has been extradited from linear time practices, where the amount of light is just a variable external to steady beat of time. Linear time turns the night into economically productive time. Running your computer on sundial time re-introduces the night in your system.\n\nAn intervention to introduce sundial time in your computer is possible in the whole range of places we discussed where time gets negotiated. The most fundamental but also most difficult route would be to exchange the clock with something reflecting a more natural rhythm. However, as we have seen that this clock has become only a back up tool and that the actual system time is always renegotiated with other systems connected through the network, another renegotiation process can be introduced. Therefore, the most easy way to introduce sundial time would be to reconfigure the timesyncdor ntp processes and make them listen to an alternative sundial time server. Such a sundial time server can be built in different ways. A hardware version can be made of a sundial combined with light sensors, measuring the location of the shadow through the difference in light and deriving the sundial time from this location. This would link the time server to the actual earthly day and night cycle. A simulated version could be a local piece of software which looks up the timing of sunrise and sunset at the specific location and day. Based on this information it recalculates the local sundial time, which it provides through the NTP protocol. The local computer receives this sundial time from the nearest sundial time server and continuously adapts its system time, as it does now already based on UTC. Further, it can be programmed to go into sleep modus during the night and to wake up only when a sunrise signal is received from the time server.\n\nLetting a computer run on sundial time is a conscious effort to disconnect it from human-made linear time and to reconnect it with the old earth-driven cycles and the ancient time experience by humans. The unified time of UTC and the time zones gets broken up into extremely localized time servers, and the difference between day and night gets introduced into the functioning of the computer. \nThis re-enactment of such cycles through the computer will remind human users that the experience of time is a socially negotiated and technically implemented experience. Further, a computer running on sundial time would be a great piece of nannyware nudging the user to live in harmony with his natural environment and a synchronization tool to re-establish the link between the users bio-rhythm and the earthly day and night cycle. It would also be a great reminder why humans tried in the first place to escape from these earthly rhythms through technology and started hacking time.\n\nHans Lammerant, June 2017 - January 2018\n\n% NOTE: -\n This text was written in and in resistance/conflict to WTC time, which is exemplary for the bureaucratic office time experience. The WTC building boots up at 9AM and is turned off in several steps (at 5PM the air conditioning is turned off, later entrances close) into a wake state. The concierge can let you in and out through the night side entry, but main life support systems remain turned off outside office hours. This wake state continues during the weekend, turning the building into a glass house with limited air in storage. On Monday morning this bureaucratic time capsule revives from its slumber. A suffocating experience, but actually the building is a great piece of nannyware nudging towards a healthy office rhythm without too much extra hours outside the herd work ethic.\n\nSuch office time can also be implemented and negotiated on your local computer. A small Proof of Concept was the adapted bashrc on the etherbox simulating a system getting bored and stealing time. This can be further developed by including a differentiated response during versus outside office hours, aging (slower when timestamp of original install is more remote in time), etc.\n\n\n\n\n\n\n","attribs":"*d+4+b*a|1+1*a+r*5+2*b|1+1*5|1+1*0|1+1*5+9*0|2+1n*d+lw*0|1+1*d|4+2f9*0|1+1*d|1+19i*0|3+w*d|3+23p*d+107*0|2+2*d|c+3bq*d+bf*0|1+4*0+81*9+8*0+7*9+8*0+1f*c+5*0+4n*9+i*0+1*9+5*0+1o*9+2*a+1*9+2z*0|4+ja*0+6c*9+a*0|1+7h*0+80*5|1+1*0|1+1*5|2+l+17*5|1+1+15*0|1+1+18*5|1+1+18*0|1+1*5|2+c*0|3+1u*0+1s*9+4*0+r*9+5*0|2+h3*0+8h*9+1*0|2+3h*0+g5*0*2+9*0+3*0*2+3*0+23*9+3*0|2+oa*0+7t*9+1*0+h*9+3*0|1+2l*0+97*9+1*0|2+73*0+g*c+c*0|2+e*6+2*6*7*8+4*6|1+4*0|2+m0*0+ak*a|5+5*0|1+1|1+1"}}},"pad:observatory.guide.experiencingtime:revs:1201":{"changeset":"Z:gvm<4j|m=7is-4j$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148798808}},"pad:observatory.guide.experiencingtime:revs:1202":{"changeset":"Z:gr3>1|o=7ra=op*d+1$,","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148818314}},"pad:observatory.guide.experiencingtime:revs:1203":{"changeset":"Z:gr4<8g|m=7is-8g$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148824281}},"pad:observatory.guide.experiencingtime:revs:1204":{"changeset":"Z:gio<1|l=7ir|1-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148824781}},"pad:observatory.guide.experiencingtime:revs:1205":{"changeset":"Z:gin<1|k=7iq|1-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148825280}},"pad:observatory.guide.experiencingtime:revs:1206":{"changeset":"Z:gim<1|m=7is=1jm|1-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148837736}},"pad:observatory.guide.experiencingtime:revs:1207":{"changeset":"Z:gil<1|n=92q-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148839756}},"pad:observatory.guide.experiencingtime:revs:1208":{"changeset":"Z:gik<1|m=7is=1jx|1-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148840255}},"pad:observatory.guide.experiencingtime:revs:1209":{"changeset":"Z:gij>2|m=7is=1jk-d*d|1+1*d+e$\next. In other ","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148840888}},"pad:observatory.guide.experiencingtime:revs:121":{"changeset":"Z:f38>2|5=b2=94*9+2$ e","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423765263}},"pad:observatory.guide.experiencingtime:revs:1210":{"changeset":"Z:gil<1|n=92d=d-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148841768}},"pad:observatory.guide.experiencingtime:revs:1211":{"changeset":"Z:gik>1|n=92d=d*d+1$ ","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148843086}},"pad:observatory.guide.experiencingtime:revs:1212":{"changeset":"Z:gil<1|m=7is=1jk|1-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148845567}},"pad:observatory.guide.experiencingtime:revs:1213":{"changeset":"Z:gik<1|m=7is=1k9|1-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148848636}},"pad:observatory.guide.experiencingtime:revs:1214":{"changeset":"Z:gij>2|m=7is=uk-oz*d|1+p1$ browser. Javascript modules get dropped on your computer and can start performing tasks on demand of an external server, be it rendering a graph or mining digital money. Similarly, the browser becomes a border where time gets negotiated through synchronisation processes. What time exactly is depends on the task at hand. Each tool contains its specific temporal practices, dependent on the speed and subject matter of the synchronization process needed. For example, for collaborative document editing tools like Google Docs or Etherpad it is a sequence of versions of the document. A range of strategies have been developed to allow to synchronize the changes made by different users with the least amount of conflict. The Easysync-protocol used by Etherpad constructs a document from changesets. A changeset details the edits made by a user or the difference with the former local version of the \n","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148887608}},"pad:observatory.guide.experiencingtime:revs:1215":{"changeset":"Z:gil<1|m=7is=11n-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148942499}},"pad:observatory.guide.experiencingtime:revs:1216":{"changeset":"Z:gik>1|m=7is=11n*d+1$z","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148942994}},"pad:observatory.guide.experiencingtime:revs:1217":{"changeset":"Z:gil<1|m=7is=1jk|1-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148948979}},"pad:observatory.guide.experiencingtime:revs:1218":{"changeset":"Z:gik<9y|o=9kr-9y$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148956217}},"pad:observatory.guide.experiencingtime:revs:1219":{"changeset":"Z:g8m<4u|p=9ks-4u$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148971388}},"pad:observatory.guide.experiencingtime:revs:122":{"changeset":"Z:f3a>1|5=b2=96*9+1$t","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423765761}},"pad:observatory.guide.experiencingtime:revs:1220":{"changeset":"Z:g3s<1|o=9kr|1-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523148972124}},"pad:observatory.guide.experiencingtime:revs:1221":{"changeset":"Z:g3r<7|m=7is=1c3-7$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523149016727}},"pad:observatory.guide.experiencingtime:revs:1222":{"changeset":"Z:g3k<1|m=7is=1c2-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523149017224}},"pad:observatory.guide.experiencingtime:revs:1223":{"changeset":"Z:g3j<1|m=7is=1c1-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523149017725}},"pad:observatory.guide.experiencingtime:revs:1224":{"changeset":"Z:g3i<5o|p=9kj-5o$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523149023922}},"pad:observatory.guide.experiencingtime:revs:1225":{"changeset":"Z:fxu<1|o=9ki|1-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523149024497}},"pad:observatory.guide.experiencingtime:revs:1226":{"changeset":"Z:fxt<c5|p=9kj|1-c5$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523149066063}},"pad:observatory.guide.experiencingtime:revs:1227":{"changeset":"Z:flo<1|o=9ki|1-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523149066942}},"pad:observatory.guide.experiencingtime:revs:1228":{"changeset":"Z:fln<1|m=7is=21n-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523149084254}},"pad:observatory.guide.experiencingtime:revs:1229":{"changeset":"Z:flm>od|m=7is=1jk-i3*d|1+1*d+16f$\nother words, the flow of time is represented through a series of changesets which can be summed to the present state. The server keeps a sequence of acknowledged changesets. These acknowledged changesets represent the current common state and get communicated to all clients. Locally each client builds its present state by summing up the acknowledged changesets received from the server, and with the local changesets which are not yet acknowledged. Each client communicates its local changesets, every 500 ms after the latest acknowledgment. As this changeset can be relative to an earlier version the server first recalculates a changeset relative to the current version. Then it sends an acknowledgment to the sender and the changeset to the other clients. Different collaborative document editing tools use different methods to deal with conflicts, which also are dependent on the purpose or content of the document. Conflicts between numeric edits in a collaborative spreadsheet are dealt with differently than conflicts between text edits. But what is common to both is that the present gets continuously constructed on the server and on the clients and negotiated through the specific protocol. The user can always access its local copy of the text and create its local present, but this local present then gets negotiated with the server to create a common present. And every tool rings also its own disasters and apocalyptic experiences through the collapse of the negotiation process and thereby of the common state.","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523149095133}},"pad:observatory.guide.experiencingtime:revs:123":{"changeset":"Z:f3b>2|5=b2=97*9+2$c.","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423766265}},"pad:observatory.guide.experiencingtime:revs:1230":{"changeset":"Z:g9z<1|m=7is=1jk|1-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523149098705}},"pad:observatory.guide.experiencingtime:revs:1231":{"changeset":"Z:g9y>2|m=7is=1jk-v8*d|1+1*d+v9$\nother words, the flow of time is represented through a series of changesets which can be summed to the present state. The server keeps a sequence of acknowledged changesets. These acknowledged changesets represent the current common state and get communicated to all clients. Locally each client builds its present state by summing up the acknowledged changesets received from the server, and with the local changesets which are not yet acknowledged. Each client communicates its local changesets, every 500 ms after the latest acknowledgment. As this changeset can be relative to an earlier version the server first recalculates a changeset relative to the current version. Then it sends an acknowledgment to the sender and the changeset to the other clients. Different collaborative document editing tools use different methods to deal with conflicts, which also are dependent on the purpose or content of the document. Conflicts between numeric edits in a collaborative spreadsheet are dealt with differently than conflicts between text edits. But what is common to both is that the present gets continuously constructed b","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523149156984}},"pad:observatory.guide.experiencingtime:revs:1232":{"changeset":"Z:ga0>3|n=92d=v9*d+3$oth","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523149157479}},"pad:observatory.guide.experiencingtime:revs:1233":{"changeset":"Z:ga3>1|n=92d=vc*d+1$ ","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523149157984}},"pad:observatory.guide.experiencingtime:revs:1234":{"changeset":"Z:ga4<32|q=aki=h7-32$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523149191407}},"pad:observatory.guide.experiencingtime:revs:1235":{"changeset":"Z:g72<wz|p=a8z|2-sr-48$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523149220457}},"pad:observatory.guide.experiencingtime:revs:1236":{"changeset":"Z:fa3<1|p=a8z|1-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523149221877}},"pad:observatory.guide.experiencingtime:revs:1237":{"changeset":"Z:fa2<1|o=a8y|1-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523149222375}},"pad:observatory.guide.experiencingtime:revs:1238":{"changeset":"Z:fa1>1|s=ba2*d|1+1$\n","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523149233317}},"pad:observatory.guide.experiencingtime:revs:1239":{"changeset":"Z:fa2>t6|t=ba3*d+t6$This negotiation of time is in the first place a negotiation of the present. But also what is past and future gets constructed in this present. The ordered sequence connected to the system time(s) already imply such a past and future. But the construction of a past consists also of a negotiation of what remains and what gets forgotten. Data gets stored in memory or written to storage devices, while the operating systems assigns time stamps to these traces of the present becoming past and writes other traces to a range of log files. As writers trying to capture their stream of consciousness already experienced, it is impossible to completely store the present for future use as past. There will always be a remainder that escapes and can not be written down. Similarly an operating systems can not keep a log of all its operations without getting stuck in an infinite regress in which it tries to log its logging operations. What will be the past for a future present needs to be constructed and selected. Everything else gets forgotten. Linux","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523149233831}},"pad:observatory.guide.experiencingtime:revs:124":{"changeset":"Z:f3d<1|5=b2=98-1$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423768063}},"pad:observatory.guide.experiencingtime:revs:1240":{"changeset":"Z:g38>7u|t=ba3=t6*d+7u$stores its logs in /var/log, while all sorts of programs can create their own logs. All these logs are specific histories, for example of what programs got installed. To get an idea of your past on a Linux system in the file system, you can collect the timestamps of all files with:","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523149242110}},"pad:observatory.guide.experiencingtime:revs:1241":{"changeset":"Z:gb2>1|t=ba3=t6*d+1$ ","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523149243396}},"pad:observatory.guide.experiencingtime:revs:1242":{"changeset":"Z:gb3>5|t=ba3=111*d|1+1*d+4$\n    ","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523149245398}},"pad:observatory.guide.experiencingtime:revs:1243":{"changeset":"Z:gb8>1|t=ba3=lj*d+1$,","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523149325831}},"pad:observatory.guide.experiencingtime:revs:1244":{"changeset":"Z:gb9<112|p=a8z|2-t2-80$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523149340450}},"pad:observatory.guide.experiencingtime:revs:1245":{"changeset":"Z:fa7<1|o=a8y|1-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523149340956}},"pad:observatory.guide.experiencingtime:revs:1246":{"changeset":"Z:fa6<1|n=92d=16k|1-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523149341451}},"pad:observatory.guide.experiencingtime:revs:1247":{"changeset":"Z:fa5>vs|15=cdn*d+vs$Technology has been a tool through which humans create distance from natural cycles and design their own time experiences. This means we can critically intervene in the functioning of the technology and develop alternative time practices and experiences. As an example we put forward as a not-yet-existing-proof of concept the possibility to let the computer work according to sundial time. Is it possible to reconfigure the time of the computer and rewire the connections with human and natural rhythms? Would we be able to let the computer function in an older human time experience, e.g. the time of the sundial? How can such sundial experience be built into the system and what would be the impact on the user? Sundial time is a geographically and seasonally localised time. It also includes a distinction between day and night. The night is ‘out of time’. This distinction has been extradited from linear time practices, where the amount of light is just a variable external to steady beat of time. Linear time turns the night into economically productive time. Running your computer on sundial time re-introduces the night in your system.","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523149365413}},"pad:observatory.guide.experiencingtime:revs:1248":{"changeset":"Z:g5x>1|15=cdn=vs*d|1+1$\n","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523149366419}},"pad:observatory.guide.experiencingtime:revs:1249":{"changeset":"Z:g5y>1|14=c1p=bx*d|1+1$\n","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523149368563}},"pad:observatory.guide.experiencingtime:revs:125":{"changeset":"Z:f3c<3|5=b2=95-3$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423768563}},"pad:observatory.guide.experiencingtime:revs:1250":{"changeset":"Z:g5z<vs|12=bhu|2-jv-bx$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523149412420}},"pad:observatory.guide.experiencingtime:revs:1251":{"changeset":"Z:fa7<1|11=bht|1-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523149412908}},"pad:observatory.guide.experiencingtime:revs:1252":{"changeset":"Z:fa6<1|10=bg1=1r|1-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523149413407}},"pad:observatory.guide.experiencingtime:revs:1253":{"changeset":"Z:fa5>1|15=dkn*d|1+1$\n","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523149433415}},"pad:observatory.guide.experiencingtime:revs:1254":{"changeset":"Z:fa6>16y|16=dko*d+16y$An intervention to introduce sundial time in your computer is possible in the whole range of places we discussed where time gets negotiated. The most fundamental but also most difficult route would be to exchange the clock with something reflecting a more natural rhythm. However, as we have seen that this clock has become only a back up tool and that the actual system time is always renegotiated with other systems connected through the network, another renegotiation process can be introduced. Therefore, the most easy way to introduce sundial time would be to reconfigure the timesyncdor ntp processes and make them listen to an alternative sundial time server. Such a sundial time server can be built in different ways. A hardware version can be made of a sundial combined with light sensors, measuring the location of the shadow through the difference in light and deriving the sundial time from this location. This would link the time server to the actual earthly day and night cycle. A simulated version could be a local piece of software which looks up the timing of sunrise and sunset at the specific location and day. Based on this information it recalculates the local sundial time, which it provides through the NTP protocol. The local computer receives this sundial time from the nearest sundial time server and continuously adapts its system time, as it does now already based on UTC. Further, it can be programmed to go into sleep modus during the night and to wake up only when a sunrise signal is received from the time server.","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523149434598}},"pad:observatory.guide.experiencingtime:revs:1255":{"changeset":"Z:gh4>1|16=dko=16y*d|1+1$\n","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523149435567}},"pad:observatory.guide.experiencingtime:revs:1256":{"changeset":"Z:gh5>1|16=dko=g5*d+1$–","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523149451085}},"pad:observatory.guide.experiencingtime:revs:1257":{"changeset":"Z:gh6<1|16=dko=g5-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523149452162}},"pad:observatory.guide.experiencingtime:revs:1258":{"changeset":"Z:gh5<1|m=7is=1jk|1-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523149465544}},"pad:observatory.guide.experiencingtime:revs:1259":{"changeset":"Z:gh4>1|15=dkn=g5*d+1$–","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523149484885}},"pad:observatory.guide.experiencingtime:revs:126":{"changeset":"Z:f39>2|5=b2=95*9+2$an","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423769065}},"pad:observatory.guide.experiencingtime:revs:1260":{"changeset":"Z:gh5<1|15=dkn=g5-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523149485966}},"pad:observatory.guide.experiencingtime:revs:1261":{"changeset":"Z:gh4>1|15=dkn=g5*d+1$–","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523149489125}},"pad:observatory.guide.experiencingtime:revs:1262":{"changeset":"Z:gh5<1|15=dkn=g5-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523149489947}},"pad:observatory.guide.experiencingtime:revs:1263":{"changeset":"Z:gh4>1|15=dkn=g5*d+1$-","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523149490449}},"pad:observatory.guide.experiencingtime:revs:1264":{"changeset":"Z:gh5<1|15=dkn=g5-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523149491344}},"pad:observatory.guide.experiencingtime:revs:1265":{"changeset":"Z:gh4>1|15=dkn=g5*d+1$_","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523149492837}},"pad:observatory.guide.experiencingtime:revs:1266":{"changeset":"Z:gh5>1|15=dkn=gl*d+1$_","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523149496892}},"pad:observatory.guide.experiencingtime:revs:1267":{"changeset":"Z:gh6<16y|13=cdn-16y$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523149513796}},"pad:observatory.guide.experiencingtime:revs:1268":{"changeset":"Z:fa8<1|12=cdm|1-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523149514288}},"pad:observatory.guide.experiencingtime:revs:1269":{"changeset":"Z:fa7<1|11=bht=vs|1-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523149514788}},"pad:observatory.guide.experiencingtime:revs:127":{"changeset":"Z:f3b>5|5=b2=97*9+5$d so ","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423769565}},"pad:observatory.guide.experiencingtime:revs:1270":{"changeset":"Z:fa6>1|17=eby*d|1+1$\n","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523149537038}},"pad:observatory.guide.experiencingtime:revs:1271":{"changeset":"Z:fa7>dv|18=ebz*d+dv$Letting a computer run on sundial time is a conscious effort to disconnect it from human-made linear time and to reconnect it with the old earth-driven cycles and the ancient time experience by humans. The unified time of UTC and the time zones gets broken up into extremely localized time servers, and the difference between day and night gets introduced into the functioning of the computer. This re-enactment of such cycles through the computer will remind human users that the experience of time","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523149539604}},"pad:observatory.guide.experiencingtime:revs:1272":{"changeset":"Z:fo2>e4|18=ebz=dv*d+e4$is a socially negotiated and technically implemented experience. Further, a computer running on sundial time would be a great piece of nannyware nudging the user to live in harmony with his natural environment and a synchronization tool to re-establish the link between the users bio-rhythm and the earthly day and night cycle. It would also be a great reminder why humans tried in the first place to escape from these earthly rhythms through technology and started hacking time. Hans Lammerant, January 2018","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523149552350}},"pad:observatory.guide.experiencingtime:revs:1273":{"changeset":"Z:g26>1|18=ebz=dv*d+1$ ","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523149554948}},"pad:observatory.guide.experiencingtime:revs:1274":{"changeset":"Z:g27>1|18=ebz=s0*d|1+1$\n","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523149556878}},"pad:observatory.guide.experiencingtime:revs:1275":{"changeset":"Z:g28<r|18=ebz=r9-r$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523149559517}},"pad:observatory.guide.experiencingtime:revs:1276":{"changeset":"Z:g1h<1|18=ebz=r8-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523149560017}},"pad:observatory.guide.experiencingtime:revs:1277":{"changeset":"Z:g1g<r8|15=dkp|1-az-g9$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523149577976}},"pad:observatory.guide.experiencingtime:revs:1278":{"changeset":"Z:fa8<1|14=dko|1-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523149578470}},"pad:observatory.guide.experiencingtime:revs:1279":{"changeset":"Z:fa7<1|13=cdn=170|1-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523149578971}},"pad:observatory.guide.experiencingtime:revs:128":{"changeset":"Z:f3g>2|5=b2=9c*9+2$on","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423770066}},"pad:observatory.guide.experiencingtime:revs:1280":{"changeset":"Z:fa6<1|1a=edf-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523149582383}},"pad:observatory.guide.experiencingtime:revs:1281":{"changeset":"Z:fa5>1|m=7is=1jk*e|1+1$\n","meta":{"author":"a.Yuc89brzNTYjBp89","timestamp":1523274283113}},"pad:observatory.guide.experiencingtime:revs:1282":{"changeset":"Z:fa6<1|j=6ii=107|1-1$","meta":{"author":"a.Yuc89brzNTYjBp89","timestamp":1523274284046}},"pad:observatory.guide.experiencingtime:revs:1283":{"changeset":"Z:fa5<1|l=7ir=1jk|1-1$","meta":{"author":"a.Yuc89brzNTYjBp89","timestamp":1523274332670}},"pad:observatory.guide.experiencingtime:revs:1284":{"changeset":"Z:fa4>1*f+1$%","meta":{"author":"a.yVCbpaJKjZ0bTelk","timestamp":1523291831059}},"pad:observatory.guide.experiencingtime:revs:1285":{"changeset":"Z:fa5>1=1*f+1$ ","meta":{"author":"a.yVCbpaJKjZ0bTelk","timestamp":1523291831565}},"pad:observatory.guide.experiencingtime:revs:1286":{"changeset":"Z:fa6<1=5-1$","meta":{"author":"a.yVCbpaJKjZ0bTelk","timestamp":1523291835684}},"pad:observatory.guide.experiencingtime:revs:1287":{"changeset":"Z:fa5<1=4-1$","meta":{"author":"a.yVCbpaJKjZ0bTelk","timestamp":1523291836175}},"pad:observatory.guide.experiencingtime:revs:1288":{"changeset":"Z:fa4>1=f*f|1+1$\n","meta":{"author":"a.yVCbpaJKjZ0bTelk","timestamp":1523291840870}},"pad:observatory.guide.experiencingtime:revs:129":{"changeset":"Z:f3i>1|5=b2=9e*9+1$.","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423770572}},"pad:observatory.guide.experiencingtime:revs:13":{"changeset":"Z:f1k<1|18=b8f|1-1$","meta":{"author":"a.I4FbrrCTDQNN8GIf","timestamp":1517420651438}},"pad:observatory.guide.experiencingtime:revs:130":{"changeset":"Z:f3j<1|7=ob=1a-2*9+1$i","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423803510}},"pad:observatory.guide.experiencingtime:revs:131":{"changeset":"Z:f3i<1|7=ob=2d-1$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423815296}},"pad:observatory.guide.experiencingtime:revs:132":{"changeset":"Z:f3h>1|7=ob=2c-1*9+2$th","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423815795}},"pad:observatory.guide.experiencingtime:revs:133":{"changeset":"Z:f3i>2|7=ob=2e*9+2$at","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423816297}},"pad:observatory.guide.experiencingtime:revs:134":{"changeset":"Z:f3k>2|7=ob=2k*9+2$ a","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423818687}},"pad:observatory.guide.experiencingtime:revs:135":{"changeset":"Z:f3m>2|7=ob=2m*9+2$ls","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423819194}},"pad:observatory.guide.experiencingtime:revs:136":{"changeset":"Z:f3o>1|7=ob=2o*9+1$o","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423819684}},"pad:observatory.guide.experiencingtime:revs:137":{"changeset":"Z:f3p<5|7=ob=2k-5$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423833723}},"pad:observatory.guide.experiencingtime:revs:138":{"changeset":"Z:f3k<4|7=ob=2c-4$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423834220}},"pad:observatory.guide.experiencingtime:revs:139":{"changeset":"Z:f3g>2|7=ob=2c*9+2$it","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423834722}},"pad:observatory.guide.experiencingtime:revs:14":{"changeset":"Z:f1j<1|1j=e4r-1$","meta":{"author":"a.I4FbrrCTDQNN8GIf","timestamp":1517420656457}},"pad:observatory.guide.experiencingtime:revs:140":{"changeset":"Z:f3i>1|7=ob=1a-1*9+2$wa","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423835224}},"pad:observatory.guide.experiencingtime:revs:141":{"changeset":"Z:f3j<a|5=b2=95-a$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423835726}},"pad:observatory.guide.experiencingtime:revs:142":{"changeset":"Z:f39>2|5=b2=95*9+2$an","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423838556}},"pad:observatory.guide.experiencingtime:revs:143":{"changeset":"Z:f3b>5|5=b2=97*9+5$d so ","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423839043}},"pad:observatory.guide.experiencingtime:revs:144":{"changeset":"Z:f3g>3|5=b2=9c*9+3$on.","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423839545}},"pad:observatory.guide.experiencingtime:revs:145":{"changeset":"Z:f3j>1|7=ob=45*9+1$(","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423845213}},"pad:observatory.guide.experiencingtime:revs:146":{"changeset":"Z:f3k>1|7=ob=46*9+1$%","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423845764}},"pad:observatory.guide.experiencingtime:revs:147":{"changeset":"Z:f3l>1|7=ob=47*9+1$V","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423846646}},"pad:observatory.guide.experiencingtime:revs:148":{"changeset":"Z:f3m>0|7=ob=47-1*9+1$C","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423847146}},"pad:observatory.guide.experiencingtime:revs:149":{"changeset":"Z:f3m>3|7=ob=48*9+3$ARL","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423847646}},"pad:observatory.guide.experiencingtime:revs:15":{"changeset":"Z:f1i>1|2=1e=1m*0|1+1$\n","meta":{"author":"a.I4FbrrCTDQNN8GIf","timestamp":1517420662560}},"pad:observatory.guide.experiencingtime:revs:150":{"changeset":"Z:f3p>3|7=ob=4b*9+3$INS","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423848151}},"pad:observatory.guide.experiencingtime:revs:151":{"changeset":"Z:f3s>2|7=ob=4e*9+2$AY","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423848659}},"pad:observatory.guide.experiencingtime:revs:152":{"changeset":"Z:f3u>2|7=ob=4g*9+2$S\"","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423849149}},"pad:observatory.guide.experiencingtime:revs:153":{"changeset":"Z:f3w>1|7=ob=4i*9+1$ ","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423849649}},"pad:observatory.guide.experiencingtime:revs:154":{"changeset":"Z:f3x<2|7=ob=4h-2$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423850149}},"pad:observatory.guide.experiencingtime:revs:155":{"changeset":"Z:f3v>1|7=ob=4h*9+1$:","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423850718}},"pad:observatory.guide.experiencingtime:revs:156":{"changeset":"Z:f3w>4|7=ob=4i*9+4$ sug","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423851218}},"pad:observatory.guide.experiencingtime:revs:157":{"changeset":"Z:f40>1|7=ob=4m*9+1$g","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423851875}},"pad:observatory.guide.experiencingtime:revs:158":{"changeset":"Z:f41>4|7=ob=4n*9+4$este","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423852377}},"pad:observatory.guide.experiencingtime:revs:159":{"changeset":"Z:f45>4|7=ob=4r*9+4$d re","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423852920}},"pad:observatory.guide.experiencingtime:revs:16":{"changeset":"Z:f1j>1|3=31*0+1$H","meta":{"author":"a.I4FbrrCTDQNN8GIf","timestamp":1517420663507}},"pad:observatory.guide.experiencingtime:revs:160":{"changeset":"Z:f49>5|7=ob=4v*9+5$wordi","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423853424}},"pad:observatory.guide.experiencingtime:revs:161":{"changeset":"Z:f4e>4|7=ob=50*9+4$ng: ","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423853925}},"pad:observatory.guide.experiencingtime:revs:162":{"changeset":"Z:f4i>1|7=ob=54*9+1$\"","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423854428}},"pad:observatory.guide.experiencingtime:revs:163":{"changeset":"Z:f4j>2|7=ob=55*9+2$Hu","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423855331}},"pad:observatory.guide.experiencingtime:revs:164":{"changeset":"Z:f4l>3|7=ob=57*9+3$man","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423855831}},"pad:observatory.guide.experiencingtime:revs:165":{"changeset":"Z:f4o>1|7=ob=5a*9+1$s","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423856335}},"pad:observatory.guide.experiencingtime:revs:166":{"changeset":"Z:f4p>1|7=ob=5b*9+1$ ","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423861165}},"pad:observatory.guide.experiencingtime:revs:167":{"changeset":"Z:f4q>4|7=ob=5c*9+4$have","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423861675}},"pad:observatory.guide.experiencingtime:revs:168":{"changeset":"Z:f4u>3|7=ob=5g*9+3$ de","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423862171}},"pad:observatory.guide.experiencingtime:revs:169":{"changeset":"Z:f4x>4|7=ob=5j*9+4$velo","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423862674}},"pad:observatory.guide.experiencingtime:revs:17":{"changeset":"Z:f1k>3|3=31=1*0+3$ans","meta":{"author":"a.I4FbrrCTDQNN8GIf","timestamp":1517420664003}},"pad:observatory.guide.experiencingtime:revs:170":{"changeset":"Z:f51>2|7=ob=5n*9+2$pe","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423863178}},"pad:observatory.guide.experiencingtime:revs:171":{"changeset":"Z:f53>1|7=ob=5p*9+1$d","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423864221}},"pad:observatory.guide.experiencingtime:revs:172":{"changeset":"Z:f54>2|7=ob=5q*9+2$ a","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423872376}},"pad:observatory.guide.experiencingtime:revs:173":{"changeset":"Z:f56>3|7=ob=5s*9+3$n e","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423872871}},"pad:observatory.guide.experiencingtime:revs:174":{"changeset":"Z:f59>6|7=ob=5v*9+6$xperie","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423873373}},"pad:observatory.guide.experiencingtime:revs:175":{"changeset":"Z:f5f>4|7=ob=61*9+4$nce ","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423873871}},"pad:observatory.guide.experiencingtime:revs:176":{"changeset":"Z:f5j>5|7=ob=65*9+5$of ti","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423874372}},"pad:observatory.guide.experiencingtime:revs:177":{"changeset":"Z:f5o>4|7=ob=6a*9+4$me t","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423874873}},"pad:observatory.guide.experiencingtime:revs:178":{"changeset":"Z:f5s>5|7=ob=6e*9+5$hat i","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423875373}},"pad:observatory.guide.experiencingtime:revs:179":{"changeset":"Z:f5x>5|7=ob=6j*9+5$s lin","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423875873}},"pad:observatory.guide.experiencingtime:revs:18":{"changeset":"Z:f1n>4|3=31=4*0+4$ Lam","meta":{"author":"a.I4FbrrCTDQNN8GIf","timestamp":1517420664532}},"pad:observatory.guide.experiencingtime:revs:180":{"changeset":"Z:f62>4|7=ob=6o*9+4$ked ","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423876379}},"pad:observatory.guide.experiencingtime:revs:181":{"changeset":"Z:f66>5|7=ob=6s*9+5$to na","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423876874}},"pad:observatory.guide.experiencingtime:revs:182":{"changeset":"Z:f6b>5|7=ob=6x*9+5$tural","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423877373}},"pad:observatory.guide.experiencingtime:revs:183":{"changeset":"Z:f6g>3|7=ob=72*9+3$ cy","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423877882}},"pad:observatory.guide.experiencingtime:revs:184":{"changeset":"Z:f6j>5|7=ob=75*9+5$cles ","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423878395}},"pad:observatory.guide.experiencingtime:revs:185":{"changeset":"Z:f6o>3|7=ob=7a*9+3$but","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423878918}},"pad:observatory.guide.experiencingtime:revs:186":{"changeset":"Z:f6r>5|7=ob=7d*9+5$that ","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423879419}},"pad:observatory.guide.experiencingtime:revs:187":{"changeset":"Z:f6w>3|7=ob=7i*9+3$is ","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423879919}},"pad:observatory.guide.experiencingtime:revs:188":{"changeset":"Z:f6z<1|7=ob=7k-1$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423880625}},"pad:observatory.guide.experiencingtime:revs:189":{"changeset":"Z:f6y<3|7=ob=7h-3$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423881127}},"pad:observatory.guide.experiencingtime:revs:19":{"changeset":"Z:f1r>3|3=31=8*0+3$mer","meta":{"author":"a.I4FbrrCTDQNN8GIf","timestamp":1517420665064}},"pad:observatory.guide.experiencingtime:revs:190":{"changeset":"Z:f6v<2|7=ob=7f-2$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423881627}},"pad:observatory.guide.experiencingtime:revs:191":{"changeset":"Z:f6t<2|7=ob=7d-2$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423882129}},"pad:observatory.guide.experiencingtime:revs:192":{"changeset":"Z:f6r>1|7=ob=7d*9+1$ ","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423882633}},"pad:observatory.guide.experiencingtime:revs:193":{"changeset":"Z:f6s>2|7=ob=7e*9+2$th","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423887267}},"pad:observatory.guide.experiencingtime:revs:194":{"changeset":"Z:f6u>5|7=ob=7g*9+5$at is","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423887757}},"pad:observatory.guide.experiencingtime:revs:195":{"changeset":"Z:f6z>3|7=ob=7l*9+3$ al","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423888259}},"pad:observatory.guide.experiencingtime:revs:196":{"changeset":"Z:f72>3|7=ob=7o*9+3$so ","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423888757}},"pad:observatory.guide.experiencingtime:revs:197":{"changeset":"Z:f75>2|7=ob=7r*9+2$in","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423889325}},"pad:observatory.guide.experiencingtime:revs:198":{"changeset":"Z:f77>3|7=ob=7t*9+3$flu","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423889837}},"pad:observatory.guide.experiencingtime:revs:199":{"changeset":"Z:f7a>4|7=ob=7w*9+4$ence","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423890329}},"pad:observatory.guide.experiencingtime:revs:2":{"changeset":"Z:1x<i|2=1e-i$","meta":{"author":"a.I4FbrrCTDQNN8GIf","timestamp":1517420194194}},"pad:observatory.guide.experiencingtime:revs:20":{"changeset":"Z:f1u>3|3=31=b*0+3$ant","meta":{"author":"a.I4FbrrCTDQNN8GIf","timestamp":1517420665565}},"pad:observatory.guide.experiencingtime:revs:200":{"changeset":"Z:f7e>4|7=ob=80*9+4$d by","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423890827,"atext":{"text":"%__NOPUBLISH__\n\n% HEADER: How humans and machines negotiate the experience of time\n\nThe experience of time is an essential element of any form of experience or cognition. Emotions depend to a large extent on expectations, or the potential coming of a future event. Any observing or experience of difference, of presence related to an earlier or later absence, is linked with an experience of time.\nHowever, how the actual experience of time is shaped is strongly influenced by all sort of design decisions and implementations, both for humans and machines. Also, the experience of time is a conglomerate of different experiences: time as a common moment, the duration of a certain time, time as cyclic events, historical time, and so on. Researching how humans and machines experience time and negotiate their time experiences is therefore an interesting avenue to explore.\n\nHumans have developed a time experience which was linked to natural life cycles, but it has been influenced by both technology and social conditions.(%CARLINSAYS: suggested rewording: \"Humans have developed an experience of time that is linked to natural cycles but that is also influenced by\nA first time cycle is the day-night time cycle. Humans do their stuff during the day, but need to sleep. The night is generally the preferred time for sleep, but the availability of artificial light and the need for longer-distance coordination has influenced how humans dealt with the day cycle and the place for sleep in it.\nTime measurement also developed: early time measurement was linked to observation of natural circumstances like sunrise and sunset. Measurement of such sun cycle (which is in fact an earth cycle) through sundials allowed for a more precise time referencing, but it is very place and season dependent. More light during summer than winter implied that hours were longer in summer than in winter. Similarly such changes were larger at higher latitudes, while near the equator such changes are limited. In other words, time measured by sundials provided a local common reference of time, but not one over longer distances.\nThis seasonal time experience when the human world was flat reflects the unknown spherical geometry of the earth cycle projected on the flat earth. When humans became aware of earth as a sphere, they responded by flattening and linearising time. Mechanical clocks allowed to unify time lengths and thereby also standardise time. Physical observation and all sorts of economic processes needed such standardised time measurement. Early versions of such time measurement, like hourglasses, existed but remained disconnected from day time measurement. Mechanical clocks allowed to unify different time cycles and scales. It also allowed standardisation of time over longer distances, departing from the local sundial time to time zones, which were less strictly linked to the seasonal rhythm of the sun but more to geographical zones. Long distance trade, industrialisation and later long-distance communication by electro-magnetic signals (comparable to the speed of light) demanded more geographical coordination. In the 19th century coordination developed through clock networks, with a master clock driving the slave clocks. Nowadays we work with atom clocks and a global Coordinated Universal Time or UTC as a reference to which geographical time zones are connected. Humans organised their activities accordingly, if necessary by de-linking from the solar rhythm. The borders of time zones diverge very often from the longitudinal lines for economic and political reasons.\nA similar socialisation and globalisation of time occurred for computers. Where in the early computer age time was set and counted locally by each machine, it is now common to continuously synchronise time over the internet through time servers and the Network Time Protocol. Humans get woken, cron jobs get triggered, precision bombs get guided and trains count their delays in measure with the drill signal of the Master Clock of the US Naval Observatory, only differing by tiny variations in latency times. \n\nHumans also developed ways to relate to time on a longer scale, which were originally linked to natural rhythms: years, life cycles. Calendar systems were used to determine seasonal agricultural needs (when to plant, when to harvest), while they also allowed to keep track of life cycles and historical time. Again, such calendar systems have been very diverse and local, but got slowly fused to a couple of dominant models. \nGenerational or birth, life and death rhythms, originating from the human experience, have been projected on all sorts of phenomena. Religions tried to explain the origin of everything, while also often predicting the end in apocalyptic visions. The demise of religion at the hand of science did not let such generational visions disappear. They got new expressions in scientific theories of the beginning (big bang, evolution) and end (the heath death of the universe, the end of the earth at the final burnout phase of the sun) of everything. Similar apocalyptic visions are now embedded through technological design decisions (Y2K, the end of Unix-time in 2038). In all versions the end is often linked to the specific design of time (e.g. the end of the Maya calendar, millenarian movements). But just like religious visions can extend their apocalypse in a new versions (e.g. the always near but always delayed apocalypse of the Saints of the last days), machinic accounts of time can always be extended by enlarging the bit size of the time range (cfr the extension of Unix time till AD 292277026596, or safely after the end of the observable universe according to contemporary physics).\n\n## The time(s) of the machine\n\nAlso machines have their natural cycle: the vibrating pulses of its internal crystal clock drives the cycles according to which the processor works. All PCs have such a Real Time Clock (RTC), independent of the processor. The time of the computer is linked to this clock cycle, as it consists in counting cyclical ticks. This produces a single cyclical, and completely linear, time rhythm in the hardware. In contrast to the earthly or natural cycles it is without any seasonal difference or interference between several cycles. This makes a computer into a monadic time capsule, disconnected from the outside rhythms.\nThe time experience in the software is in principle based on this local time cycle. However, once computers and software gets linked and networked, they have to negotiate and synchronize their times.\nTo start, time in a computer is no unique or unified experience. Several hardware components and a diverse collection of software organised in layers and processes create a whole ecology of interdependent time experiences. The operating system experiences other software components, and users through them, as a bunch of processes screaming for attention. One of the most pushy interrupts is the timer forcing the processor to count another click and update the system time. An internal kernel process performs the negotiation of time through which the clock count is linked with a system time. \nThis starts already during the booting process, when the operating system is determining the clock signal frequency. PCs have another time-measuring device, the Programmable Interval Timer\n(PIT), which can be set by the processor at a defined frequency. During a short time indicated by this PIT the clock cycles of the RTC get counted and the frequency of the RTC gets calculated. Several other timing devices are present in the hardware, synchronized by kernel processes into a range of times available for the operating system and the processes. As said, one of these times is available as system time and gets communicated to all other processes when demanded. \nWith the advent of the internet computers are no monads anymore, but are socialised in the common rhythm broadcasted with the Network Time Protocol. The local system time serves as back up, but gets continuously adapted to the network time. On a Ubuntu/Debian machine these times can be checked with timedatectl status. The timedatectl command enables to change these synchronisation processes. The actual synchronisation is done by the timesyncd process and the time servers to be used can be set in the /etc/systemd/timesyncd.conf file. Other Linux flavours work with the older ntp process which can be configured in /etc/ntp.conf. \n\nThe actual process time is completely different from this system time. Most of the time processes are put on hold and when the scheduler gives them time they can proceed till the next on hold is forced to make time for another process. The scheduler is the big organiser of time in the internal ecology of processes.\nSystem time is externally counted and therefore an external global variable to these processes. They can all send a demand to the kernel to get the system time. This gets communicated through the software stack with a range of system calls of the kernel and through the specific time modules of the programming language the software is programmed in.\nThe difference between the actual process time and system time does not appear in how time is perceived by the process. The process only perceives time as the difference between two demands of system time and is oblivious of its time being put on hold. The processor on the other hand spent most of its processing time as idle time: a processor is doing time waiting for slow system components like memory and even slower hard drives and network connections to respond and switches between checking for responses of these laggards. L’enfer du temps perdu, ce sont les autres.\n\nConnecting computers into a network demands new negotiations of time. We already mentioned the networked and globalised UTC timekeeping. But temporal negotiations happen on all levels of the system. Network protocols have timed choreographies to make connections and proceed with communications, with time out failsafes to break off when something goes wrong. The timing of an action is an essential component making the difference between a meaningful signal and noise.\nUsing a browser over http to connect to a website, or better the server providing the website on your request, is built on a discontinuous time practice. In a REST architecture the server just deals with a queue of requests and does not see continuity over time between certain requests from a single user.  New temporal practices have been designed and technically implemented. Through cookies the server is able to recognise users and their state in time. \nThe border between your computer and servers on the internet becomes fuzzy when external software is dropped on your computer and runs  in your webbrowser. Javascript modules get dropped on your computer and can start performing tasks on demand of an external server, be it rendering a graph or mining digital money. Similarly, the browser becomes a border where time gets negotiated through synchronisation processes.\nWhat time exactly is depends on the task at hand. Each tool contains its specific temporal practices, dependent on the speed and subject matter of the synchronisation process needed.\nFor example, for collaborative document editing tools like Google Docs or Etherpad it is a sequence of versions of the document. A range of strategies have been developed to allow to synchronize the changes made by different users with the least amount of conflict. \nThe Easysync-protocol used by Etherpad constructs a document from changesets. A changeset details the edits made by a user or the difference with the former local version of the text. In other words, the flow of time is represented through a series of changesets which can be summed to the present state. The server keeps a sequence of acknowledged changesets. These acknowledged changesets represent the current common state and get communicated to all clients. \nLocally each client builds its present state by summing up the acknowledged changesets received from the server, and with the local changesets which are not yet acknowledged. Each client communicates its local changesets, every 500 ms after the latest acknowledgment.  As this changeset can be relative to an earlier version the server first recalculates a changeset relative to the current version. Then it sends an acknowledgment to the sender and the changeset to the other clients. \nDifferent collaborative document editing tools use different methods to deal with conflicts, which also are dependent on the purpose or content of the document. Conflicts between numeric edits in a collaborative spreadsheet are dealt with differently than conflicts between text edits. But common is that the present gets continuously constructed on the server and on the clients and negotiated through the specific protocol. The user can always access its local copy of the text and create its local present, but it gets negotiated with the server to create a common present. \nAnd every tool rings also its own disasters and apocalyptic experiences through the collapse of the negotiation process and thereby of the common state.\n\nThis negotiation of time is in the first place a negotiation of the present. But also what is past and future gets constructed in this present. The ordered sequence connected to the system time(s) already imply such a past and future. But the construction of a past consists also of a negotiation of what remains and what gets forgotten. Data gets stored in memory or written to storage devices, while the operating systems assigns time stamps to these traces of the present becoming past and writes other traces to a range of log files. \nAs writers trying to capture their stream of consciousness already experienced, it is impossible to completely store the present for future use as past. There will always be a remainder that escapes and can not be written down. Also an operating systems can not keep a log of all its operations without getting stuck in an infinite regress in which it tries to log its logging operations. What will be the past for a future present needs to be constructed and selected. Everything else gets forgotten.\nLinux stores its logs in /var/log, while all sorts of programs can create their own logs. All these logs are specific histories, for example of what programs got installed. To get an idea of your past on a Linux system in the file system, you can collect the timestamps of all files with:\n\n% -----------------\n\nos.system(\"ls -R -l --time-style=long-iso \\\n           > modlistsystem-long-iso.txt\")\nos.system(\"ls -R -lu --time-style=long-iso \\\n           > accesslistsystem-long-iso.txt\")\n\n% SRCCODE:\n\n## Renegotiating time with your computer: sundial network time.\n\nTechnology has been a tool through which humans created distance with natural cycles and designed its own time experiences. This means we can critically intervene in the functioning of the technology and develop alternative time practices and experiences. As an example we put forward as a not-yet-existing-proof of concept the possibility to let the computer work according to sundial time.\nIs it possible to reconfigure the time of the computer and rewire the connections with human and natural rhythms? Would we be able to let the computer function in an older human time experience, e.g. the time of the sundial? How can such sundial experience be built into the system and what would be the impact on the user?\nSundial time is a geographically and seasonally localised time. It also includes a distinction between day and night. The night is ‘out of time’. This distinction has been extradited from linear time practices, where the amount of light is just a variable external to steady beat of time. Linear time allows to turn the night into economically productive time. Running your computer on sundial time re-introduces the night in your system.\n\nAn intervention to introduce sundial time in your computer is possible in the whole range of places we discussed where time gets negotiated. The most fundamental but also most difficult route would be to exchange the clock with something reflecting a more natural rhythm. However, as we have seen that this clock has become only a back up tool and that the actual system time is always renegotiated with other systems connected through the network, another renegotiation process can be introduced. Therefore, the most easy way to introduce sundial time would be to reconfigure the timesyncdor ntp processes and make them listen to an alternative sundial time server. Such sundial time server can be built in different ways. A hardware version can be made of a sundial combined with light sensors, measuring the location of the shadow through the difference in light and deriving the sundial time from this location. This would link the time server to the actual earthly day and night cycle. A simulated version could be a local piece of software which looks up the timing of sunrise and sunset at the specific location and day. Based on this information it recalculates the local sundial time, which it provides through the NTP protocol. The local computer receives this sundial time from the nearest sundial time server and continuously adapts its system time, as it does now already based on UTC. Further, it can be programmed to go into sleep modus during the night and to wake up only when a sunrise signal is received from the time server.\n\nLetting a computer run on sundial time is a conscious effort to disconnect it from human-made linear time and to reconnect it with the old earth-driven cycles and the ancient time experience by humans. The unified time of UTC and the time zones gets broken up into extremely localised time servers, while also the difference between day and night gets introduced into the functioning of the computer. \nThis re-enactment of such cycles through the computer will remind human users that the experience of time is a socially negotiated and technically implemented experience. Further, a computer running on sundial time would be a great piece of nannyware nudging the user to live in harmony with his natural environment and a synchronisation tool to re-establish the link between the users bio-rhythm and the earthly day and night cycle. It would also be a great reminder why humans tried in the first place to escape from these earthly rhythms through technology and started hacking time.\n\nHans Lammerant, January 2018\n\n% NOTE: -\n This text was written in and in resistance/conflict to WTC time, which is exemplary for the bureaucratic office time experience. The WTC building boots up at 9AM and is turned off in several steps (at 5PM the air conditioning is turned off, later entrances close) into a wake state. The concierge can let you in and out through the night side entry, but main life support systems remain turned off outside office hours. This wake state continues during the weekend, turning the building into a glass house with limited air in storage. On Monday morning this bureaucratic time capsule revives from its slumber. A suffocating experience, but actually the building is a great piece of nannyware nudging towards a healthy office rhythm without too much extra hours outside the herd work ethic.\n\nSuch office time can also be implemented and negotiated on your local computer. A small Proof of Concept was the adapted bashrc on the etherbox simulating a system getting bored and stealing time. This can be further developed by including a differentiated response during versus outside office hours, aging (slower when timestamp of original install is more remote in time), etc.\n\n","attribs":"*5+1|1+e*0|1+1*5+9*0|3+ad*0+94*9+b*0|2+3u*0+1a*9+2*0+11*9+2*0+1q*9+3z*0|3+qc*0+se*0*1+2*0|d+3mh*0+8c*0*2+i*0+6*0*2+b*0+2u*0*2+9*0+3q*0*2+3*0|i+4hp*0+80*5|1+1*0|1+1*5|2+l+17*5|1+1+15*0|1+1+18*5|1+1+18*0|1+1*5|2+c*0|7+xy*0+g5*0*2+9*0+3*0*2+3*0|7+1ip*6+2*6*7*8+4*6|1+4*0|3+wl|1+1"}}},"pad:observatory.guide.experiencingtime:revs:201":{"changeset":"Z:f7i>5|7=ob=84*9+5$ both","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423891328}},"pad:observatory.guide.experiencingtime:revs:202":{"changeset":"Z:f7n>3|7=ob=89*9+3$ te","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423891829}},"pad:observatory.guide.experiencingtime:revs:203":{"changeset":"Z:f7q>4|7=ob=8c*9+4$chno","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423892329}},"pad:observatory.guide.experiencingtime:revs:204":{"changeset":"Z:f7u>5|7=ob=8g*9+5$logy ","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423892841}},"pad:observatory.guide.experiencingtime:revs:205":{"changeset":"Z:f7z>4|7=ob=8l*9+4$and ","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423893341}},"pad:observatory.guide.experiencingtime:revs:206":{"changeset":"Z:f83>4|7=ob=8p*9+4$soci","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423893842}},"pad:observatory.guide.experiencingtime:revs:207":{"changeset":"Z:f87>5|7=ob=8t*9+5$al co","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423894342}},"pad:observatory.guide.experiencingtime:revs:208":{"changeset":"Z:f8c>3|7=ob=8y*9+3$ndi","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423894843}},"pad:observatory.guide.experiencingtime:revs:209":{"changeset":"Z:f8f>6|7=ob=91*9+6$tions.","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423895342}},"pad:observatory.guide.experiencingtime:revs:21":{"changeset":"Z:f1x<z|1=e-z$","meta":{"author":"a.I4FbrrCTDQNN8GIf","timestamp":1517420669188}},"pad:observatory.guide.experiencingtime:revs:210":{"changeset":"Z:f8l>1|7=ob=97*9+1$)","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423897008}},"pad:observatory.guide.experiencingtime:revs:211":{"changeset":"Z:f8m<1|7=ob=97-1$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423898439}},"pad:observatory.guide.experiencingtime:revs:212":{"changeset":"Z:f8l>1|7=ob=97*9+1$\"","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423899410}},"pad:observatory.guide.experiencingtime:revs:213":{"changeset":"Z:f8m>1|7=ob=98*9+1$)","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423899909}},"pad:observatory.guide.experiencingtime:revs:214":{"changeset":"Z:f8n<1|8=xl-1$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423926939}},"pad:observatory.guide.experiencingtime:revs:215":{"changeset":"Z:f8m>2|8=xl*9+2$Th","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423927433}},"pad:observatory.guide.experiencingtime:revs:216":{"changeset":"Z:f8o>1|8=xl=2*9+1$e","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423927931}},"pad:observatory.guide.experiencingtime:revs:217":{"changeset":"Z:f8p>2|7=ob=73*9+2$li","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423936971}},"pad:observatory.guide.experiencingtime:revs:218":{"changeset":"Z:f8r>3|7=ob=75*9+3$fe ","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423937466}},"pad:observatory.guide.experiencingtime:revs:219":{"changeset":"Z:f8u<k|7=ob=5s-k$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423945293}},"pad:observatory.guide.experiencingtime:revs:22":{"changeset":"Z:f0y<e|3=22-e$","meta":{"author":"a.I4FbrrCTDQNN8GIf","timestamp":1517420694649}},"pad:observatory.guide.experiencingtime:revs:220":{"changeset":"Z:f8a>5|7=ob=5s*9+5$ time","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423945792}},"pad:observatory.guide.experiencingtime:revs:221":{"changeset":"Z:f8f>2|7=ob=5x*9+2$ e","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423946292}},"pad:observatory.guide.experiencingtime:revs:222":{"changeset":"Z:f8h>5|7=ob=5z-1*9+6$xperie","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423946791}},"pad:observatory.guide.experiencingtime:revs:223":{"changeset":"Z:f8m>3|7=ob=65*9+3$nce","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423947291}},"pad:observatory.guide.experiencingtime:revs:224":{"changeset":"Z:f8p>1|7=ob=68*9+1$ ","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423947796}},"pad:observatory.guide.experiencingtime:revs:225":{"changeset":"Z:f8q<1|8=xm=7p-1$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519423968659}},"pad:observatory.guide.experiencingtime:revs:226":{"changeset":"Z:f8p>1|9=16q=4h*9+1$s","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424083705}},"pad:observatory.guide.experiencingtime:revs:227":{"changeset":"Z:f8q<2|9=16q=6a-2$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424089981}},"pad:observatory.guide.experiencingtime:revs:228":{"changeset":"Z:f8o<5|9=16q=bq-6*9+1$g","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424103853}},"pad:observatory.guide.experiencingtime:revs:229":{"changeset":"Z:f8j>5|9=16q=br*9+5$reate","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424104350}},"pad:observatory.guide.experiencingtime:revs:23":{"changeset":"Z:f0k<1|2=f=1m|1-1$","meta":{"author":"a.I4FbrrCTDQNN8GIf","timestamp":1517420695152}},"pad:observatory.guide.experiencingtime:revs:230":{"changeset":"Z:f8o>1|9=16q=bw*9+1$r","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424104854}},"pad:observatory.guide.experiencingtime:revs:231":{"changeset":"Z:f8p>f|9=16q=3o-dj*9|1+dy$(%CARLINSAYS: Measurement of such sun cycles (which is in fact an earth cycle) through sundials allowed for more precise time referencing, but it is very place and season dependent. More light during summer than winter implied that hours were longer in summer than in winter. Similarly such changes were greater at higher latitudes, while near the equator such changes are limited. In other words, time measured by sundials provided a local common reference of time, but not one over longer distances.\n","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424161756}},"pad:observatory.guide.experiencingtime:revs:232":{"changeset":"Z:f94>1|9=16q=42*9+1$s","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424162950}},"pad:observatory.guide.experiencingtime:revs:233":{"changeset":"Z:f95>2|9=16q=43*9+2$ug","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424163449}},"pad:observatory.guide.experiencingtime:revs:234":{"changeset":"Z:f97>5|9=16q=45*9+5$geste","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424163951}},"pad:observatory.guide.experiencingtime:revs:235":{"changeset":"Z:f9c>2|9=16q=4a*9+2$d ","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424164457}},"pad:observatory.guide.experiencingtime:revs:236":{"changeset":"Z:f9e>2|9=16q=4c*9+2$re","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424164966}},"pad:observatory.guide.experiencingtime:revs:237":{"changeset":"Z:f9g>4|9=16q=4e*9+4$word","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424165466}},"pad:observatory.guide.experiencingtime:revs:238":{"changeset":"Z:f9k>1|9=16q=4i*9+1$i","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424165967}},"pad:observatory.guide.experiencingtime:revs:239":{"changeset":"Z:f9l>3|9=16q=4j*9+3$ng:","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424166468}},"pad:observatory.guide.experiencingtime:revs:24":{"changeset":"Z:f0j>1|1i=dni=g9*0|1+1$\n","meta":{"author":"a.I4FbrrCTDQNN8GIf","timestamp":1517420699918}},"pad:observatory.guide.experiencingtime:revs:240":{"changeset":"Z:f9o>1|9=16q=4m*9+1$ ","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424166969}},"pad:observatory.guide.experiencingtime:revs:241":{"changeset":"Z:f9p<1|9=16q=4m-1$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424167472}},"pad:observatory.guide.experiencingtime:revs:242":{"changeset":"Z:f9o<2|9=16q=4k-2$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424167972}},"pad:observatory.guide.experiencingtime:revs:243":{"changeset":"Z:f9m<3|9=16q=4h-3$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424168472}},"pad:observatory.guide.experiencingtime:revs:244":{"changeset":"Z:f9j<5|9=16q=4c-5$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424168972}},"pad:observatory.guide.experiencingtime:revs:245":{"changeset":"Z:f9e<6|9=16q=46-6$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424169473}},"pad:observatory.guide.experiencingtime:revs:246":{"changeset":"Z:f98<1|9=16q=45-1$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424170121}},"pad:observatory.guide.experiencingtime:revs:247":{"changeset":"Z:f97<3|9=16q=42-3$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424170623}},"pad:observatory.guide.experiencingtime:revs:248":{"changeset":"Z:f94>3|9=16q=42*9+3$I s","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424171126}},"pad:observatory.guide.experiencingtime:revs:249":{"changeset":"Z:f97>4|9=16q=45*9+4$ugge","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424171625}},"pad:observatory.guide.experiencingtime:revs:25":{"changeset":"Z:f0k>1|1j=e3s*0|1+1$\n","meta":{"author":"a.I4FbrrCTDQNN8GIf","timestamp":1517420700419}},"pad:observatory.guide.experiencingtime:revs:250":{"changeset":"Z:f9b>5|9=16q=49*9+5$st cu","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424172125}},"pad:observatory.guide.experiencingtime:revs:251":{"changeset":"Z:f9g>3|9=16q=4e*9+3$tti","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424172629}},"pad:observatory.guide.experiencingtime:revs:252":{"changeset":"Z:f9j>3|9=16q=4h*9+3$ng ","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424173128}},"pad:observatory.guide.experiencingtime:revs:253":{"changeset":"Z:f9m>3|9=16q=4k*9+3$\"Ti","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424173627}},"pad:observatory.guide.experiencingtime:revs:254":{"changeset":"Z:f9p>2|9=16q=4n*9+2$me","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424174187}},"pad:observatory.guide.experiencingtime:revs:255":{"changeset":"Z:f9r>4|9=16q=4p*9+4$ mea","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424174689}},"pad:observatory.guide.experiencingtime:revs:256":{"changeset":"Z:f9v>4|9=16q=4t*9+4$sure","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424175188}},"pad:observatory.guide.experiencingtime:revs:257":{"changeset":"Z:f9z>4|9=16q=4x*9+4$ment","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424175692}},"pad:observatory.guide.experiencingtime:revs:258":{"changeset":"Z:fa3>3|9=16q=51*9+3$ al","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424176192}},"pad:observatory.guide.experiencingtime:revs:259":{"changeset":"Z:fa6>4|9=16q=54*9+4$so d","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424176697}},"pad:observatory.guide.experiencingtime:revs:26":{"changeset":"Z:f0l>e|1k=e3t*0+e$Hans Lammerant","meta":{"author":"a.I4FbrrCTDQNN8GIf","timestamp":1517420700921}},"pad:observatory.guide.experiencingtime:revs:260":{"changeset":"Z:faa>4|9=16q=58*9+4$evel","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424177198}},"pad:observatory.guide.experiencingtime:revs:261":{"changeset":"Z:fae>3|9=16q=5c*9+3$ope","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424177700}},"pad:observatory.guide.experiencingtime:revs:262":{"changeset":"Z:fah>1|9=16q=5f*9+1$d","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424178200}},"pad:observatory.guide.experiencingtime:revs:263":{"changeset":"Z:fai>1|9=16q=5g*9+1$\"","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424178702}},"pad:observatory.guide.experiencingtime:revs:264":{"changeset":"Z:faj>5|9=16q=5h*9+5$ and ","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424179213}},"pad:observatory.guide.experiencingtime:revs:265":{"changeset":"Z:fao>5|9=16q=5m*9+5$sayin","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424179711}},"pad:observatory.guide.experiencingtime:revs:266":{"changeset":"Z:fat>2|9=16q=5r*9+2$g ","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424180212}},"pad:observatory.guide.experiencingtime:revs:267":{"changeset":"Z:fav>0|9=16q=5s-1*9+1$\"","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424181037}},"pad:observatory.guide.experiencingtime:revs:268":{"changeset":"Z:fav>1|9=16q=5t*9+1$E","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424182761}},"pad:observatory.guide.experiencingtime:revs:269":{"changeset":"Z:faw>3|9=16q=5u*9+3$arl","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424183266}},"pad:observatory.guide.experiencingtime:revs:27":{"changeset":"Z:f0z>1|1k=e3t=e*0+1$,","meta":{"author":"a.I4FbrrCTDQNN8GIf","timestamp":1517420703204}},"pad:observatory.guide.experiencingtime:revs:270":{"changeset":"Z:faz<1|9=16q=5w-1$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424183766}},"pad:observatory.guide.experiencingtime:revs:271":{"changeset":"Z:fay<4|9=16q=5s-4$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424184268}},"pad:observatory.guide.experiencingtime:revs:272":{"changeset":"Z:fau<5|9=16q=5n-5$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424184771}},"pad:observatory.guide.experiencingtime:revs:273":{"changeset":"Z:fap<1|9=16q=5m-1$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424185271}},"pad:observatory.guide.experiencingtime:revs:274":{"changeset":"Z:fao>2|9=16q=5m*9+2$st","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424185938}},"pad:observatory.guide.experiencingtime:revs:275":{"changeset":"Z:faq>2|9=16q=5o*9+2$ar","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424186442}},"pad:observatory.guide.experiencingtime:revs:276":{"changeset":"Z:fas>6|9=16q=5q*9+6$tingwi","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424186954}},"pad:observatory.guide.experiencingtime:revs:277":{"changeset":"Z:fay>3|9=16q=5w*9+3$th ","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424187455}},"pad:observatory.guide.experiencingtime:revs:278":{"changeset":"Z:fb1>1|9=16q=5y-1*9+2$ea","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424187955}},"pad:observatory.guide.experiencingtime:revs:279":{"changeset":"Z:fb2<2|9=16q=5y-2$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424188456}},"pad:observatory.guide.experiencingtime:revs:28":{"changeset":"Z:f10>1|1k=e3t=f*0+1$ ","meta":{"author":"a.I4FbrrCTDQNN8GIf","timestamp":1517420703701}},"pad:observatory.guide.experiencingtime:revs:280":{"changeset":"Z:fb0<1|9=16q=5x-1$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424189010}},"pad:observatory.guide.experiencingtime:revs:281":{"changeset":"Z:faz<2|9=16q=5v-2$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424189513}},"pad:observatory.guide.experiencingtime:revs:282":{"changeset":"Z:fax>0|9=16q=5u-1*9+1$ ","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424190013}},"pad:observatory.guide.experiencingtime:revs:283":{"changeset":"Z:fax>3|9=16q=5u-1*9+4$with","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424190513}},"pad:observatory.guide.experiencingtime:revs:284":{"changeset":"Z:fb0>1|9=16q=5y*9+1$ ","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424191125}},"pad:observatory.guide.experiencingtime:revs:285":{"changeset":"Z:fb1>1|9=16q=5u*9+1$ ","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424193952}},"pad:observatory.guide.experiencingtime:revs:286":{"changeset":"Z:fb2>0|9=16q=5z-1*9+1$\"","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424195843}},"pad:observatory.guide.experiencingtime:revs:287":{"changeset":"Z:fb2>1|9=16q=60*9+1$E","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424196343}},"pad:observatory.guide.experiencingtime:revs:288":{"changeset":"Z:fb3>4|9=16q=61*9+4$arly","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424196846}},"pad:observatory.guide.experiencingtime:revs:289":{"changeset":"Z:fb7>1|9=16q=65*9+1$ ","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424197352}},"pad:observatory.guide.experiencingtime:revs:29":{"changeset":"Z:f11>1|1k=e3t=g*0+1$J","meta":{"author":"a.I4FbrrCTDQNN8GIf","timestamp":1517420705013}},"pad:observatory.guide.experiencingtime:revs:290":{"changeset":"Z:fb8>2|9=16q=66*9+2$ti","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424197950}},"pad:observatory.guide.experiencingtime:revs:291":{"changeset":"Z:fba>4|9=16q=68*9+4$me m","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424198451}},"pad:observatory.guide.experiencingtime:revs:292":{"changeset":"Z:fbe>5|9=16q=6c*9+5$easur","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424198952}},"pad:observatory.guide.experiencingtime:revs:293":{"changeset":"Z:fbj>5|9=16q=6h*9+5$ement","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424199453}},"pad:observatory.guide.experiencingtime:revs:294":{"changeset":"Z:fbo>4|9=16q=6m*9+4$ was","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424199954}},"pad:observatory.guide.experiencingtime:revs:295":{"changeset":"Z:fbs>1|9=16q=6q*9+1$ ","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424200455}},"pad:observatory.guide.experiencingtime:revs:296":{"changeset":"Z:fbt>2|9=16q=6r*9+2$li","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424200955}},"pad:observatory.guide.experiencingtime:revs:297":{"changeset":"Z:fbv>3|9=16q=6t*9+3$nke","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424201455}},"pad:observatory.guide.experiencingtime:revs:298":{"changeset":"Z:fby>4|9=16q=6w*9+4$d to","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424201956}},"pad:observatory.guide.experiencingtime:revs:299":{"changeset":"Z:fc2>1|9=16q=70*9+1$ ","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424202456}},"pad:observatory.guide.experiencingtime:revs:3":{"changeset":"Z:1f>f0y|2=1e*0|9+1iw*0+se*0*1+2*0|d+3me*0+8c*0*2+i*0+6*0*2+b*0+2u*0*2+9*0+3q*0*2+3*0|t+5rw*0+g5*0*2+9*0+3*0*2+3*0|9+2el$                                   \nHow humans and machines negotiate the experience of time\n\nThe experience of time is an essential element of any form of experience or cognition. Emotions depend to a large extent on expectations, or the potential coming of a future event. Any observing or experience of difference, of presence related to an earlier or later absence, is linked with an experience of time.\nHowever, how the actual experience of time is shaped is strongly influenced by all sort of design decisions and implementations, both for humans and machines. Also, the experience of time is a conglomerate of different experiences: time as a common moment, the duration of a certain time, time as cyclic events, historical time, ... Researching how humans and machines experience time and negotiate their time experiences is therefore an interesting avenue to explore. \n\nHumans have developed a time experience which was linked to natural life cycles, but it has been influenced by both technology and social conditions.\nA first time cycle is the day-night time cycle. Humans do their stuff during the day, but need to sleep. The night is generally the preferred time for sleep, but the availability of artificial light and the need for longer-distance coordination has influenced how humans dealt with the day cycle and the place for sleep in it.\nTime measurement also developed: early time measurement was linked to observation of natural circumstances like sunrise and sunset. Measurement of such sun cycle (which is in fact an earth cycle) through sundials allowed for a more precise time referencing, but it is very place and season dependent. More light during summer than winter implied that hours were longer in summer than in winter. Similarly such changes were larger at higher latitudes, while near the equator such changes are limited. In other words, time measured by sundials provided a local common reference of time, but not one over longer distances.\nThis seasonal time experience when the human world was flat reflects the unknown spherical geometry of the earth cycle projected on the flat earth. When humans became aware of earth as a sphere, they responded by flattening and linearising time. Mechanical clocks allowed to unify time lengths and thereby also standardise time. Physical observation and all sorts of economic processes needed such standardised time measurement. Early versions of such time measurement, like hourglasses, existed but remained disconnected from day time measurement. Mechanical clocks allowed to unify different time cycles and scales. It also allowed standardisation of time over longer distances, departing from the local sundial time to time zones, which were less strictly linked to the seasonal rhythm of the sun but more to geographical zones. Long distance trade, industrialisation and later long-distance communication by electro-magnetic signals (comparable to the speed of light) demanded more geographical coordination. In the 19th century coordination developed through clock networks, with a master clock driving the slave clocks. Nowadays we work with atom clocks and a global Coordinated Universal Time or UTC as a reference to which geographical time zones are connected. Humans organised their activities accordingly, if necessary by de-linking from the solar rhythm. The borders of time zones diverge very often from the longitudinal lines for economic and political reasons.\nA similar socialisation and globalisation of time occurred for computers. Where in the early computer age time was set and counted locally by each machine, it is now common to continuously synchronise time over the internet through time servers and the Network Time Protocol. Humans get woken, cron jobs get triggered, precision bombs get guided and trains count their delays in measure with the drill signal of the Master Clock of the US Naval Observatory, only differing by tiny variations in latency times. \n\nHumans also developed ways to relate to time on a longer scale, which were originally linked to natural rhythms: years, life cycles. Calendar systems were used to determine seasonal agricultural needs (when to plant, when to harvest), while they also allowed to keep track of life cycles and historical time. Again, such calendar systems have been very diverse and local, but got slowly fused to a couple of dominant models. \nGenerational or birth, life and death rhythms, originating from the human experience, have been projected on all sorts of phenomena. Religions tried to explain the origin of everything, while also often predicting the end in apocalyptic visions. The demise of religion at the hand of science did not let such generational visions disappear. They got new expressions in scientific theories of the beginning (big bang, evolution) and end (the heath death of the universe, the end of the earth at the final burnout phase of the sun) of everything. Similar apocalyptic visions are now embedded through technological design decisions (Y2K, the end of Unix-time in 2038). In all versions the end is often linked to the specific design of time (e.g. the end of the Maya calendar, millenarian movements). But just like religious visions can extend their apocalypse in a new versions (e.g. the always near but always delayed apocalypse of the Saints of the last days), machinic accounts of time can always be extended by enlarging the bit size of the time range (cfr the extension of Unix time till AD 292277026596, or safely after the end of the observable universe according to contemporary physics).\n\nThe time(s) of the machine\n\nAlso machines have their natural cycle: the vibrating pulses of its internal crystal clock drives the cycles according to which the processor works. All PCs have such a Real Time Clock (RTC), independent of the processor. The time of the computer is linked to this clock cycle, as it consists in counting cyclical ticks. This produces a single cyclical, and completely linear, time rhythm in the hardware. In contrast to the earthly or natural cycles it is without any seasonal difference or interference between several cycles. This makes a computer into a monadic time capsule, disconnected from the outside rhythms.\nThe time experience in the software is in principle based on this local time cycle. However, once computers and software gets linked and networked, they have to negotiate and synchronize their times.\nTo start, time in a computer is no unique or unified experience. Several hardware components and a diverse collection of software organised in layers and processes create a whole ecology of interdependent time experiences. The operating system experiences other software components, and users through them, as a bunch of processes screaming for attention. One of the most pushy interrupts is the timer forcing the processor to count another click and update the system time. An internal kernel process performs the negotiation of time through which the clock count is linked with a system time. \nThis starts already during the booting process, when the operating system is determining the clock signal frequency. PCs have another time-measuring device, the Programmable Interval Timer\n(PIT), which can be set by the processor at a defined frequency. During a short time indicated by this PIT the clock cycles of the RTC get counted and the frequency of the RTC gets calculated. Several other timing devices are present in the hardware, synchronized by kernel processes into a range of times available for the operating system and the processes. As said, one of these times is available as system time and gets communicated to all other processes when demanded. \nWith the advent of the internet computers are no monads anymore, but are socialised in the common rhythm broadcasted with the Network Time Protocol. The local system time serves as back up, but gets continuously adapted to the network time. On a Ubuntu/Debian machine these times can be checked with timedatectl status. The timedatectl command enables to change these synchronisation processes. The actual synchronisation is done by the timesyncd process and the time servers to be used can be set in the /etc/systemd/timesyncd.conf file. Other Linux flavours work with the older ntp process which can be configured in /etc/ntp.conf. \n\nThe actual process time is completely different from this system time. Most of the time processes are put on hold and when the scheduler gives them time they can proceed till the next on hold is forced to make time for another process. The scheduler is the big organiser of time in the internal ecology of processes.\nSystem time is externally counted and therefore an external global variable to these processes. They can all send a demand to the kernel to get the system time. This gets communicated through the software stack with a range of system calls of the kernel and through the specific time modules of the programming language the software is programmed in.\nThe difference between the actual process time and system time does not appear in how time is perceived by the process. The process only perceives time as the difference between two demands of system time and is oblivious of its time being put on hold. The processor on the other hand spent most of its processing time as idle time: a processor is doing time waiting for slow system components like memory and even slower hard drives and network connections to respond and switches between checking for responses of these laggards. L’enfer du temps perdu, ce sont les autres.\n\nConnecting computers into a network demands new negotiations of time. We already mentioned the networked and globalised UTC timekeeping. But temporal negotiations happen on all levels of the system. Network protocols have timed choreographies to make connections and proceed with communications, with time out failsafes to break off when something goes wrong. The timing of an action is an essential component making the difference between a meaningful signal and noise.\nUsing a browser over http to connect to a website, or better the server providing the website on your request, is built on a discontinuous time practice. In a REST architecture the server just deals with a queue of requests and does not see continuity over time between certain requests from a single user.  New temporal practices have been designed and technically implemented. Through cookies the server is able to recognise users and their state in time. \nThe border between your computer and servers on the internet becomes fuzzy when external software is dropped on your computer and runs  in your webbrowser. Javascript modules get dropped on your computer and can start performing tasks on demand of an external server, be it rendering a graph or mining digital money. Similarly, the browser becomes a border where time gets negotiated through synchronisation processes.\nWhat time exactly is depends on the task at hand. Each tool contains its specific temporal practices, dependent on the speed and subject matter of the synchronisation process needed.\nFor example, for collaborative document editing tools like Google Docs or Etherpad it is a sequence of versions of the document. A range of strategies have been developed to allow to synchronize the changes made by different users with the least amount of conflict. \nThe Easysync-protocol used by Etherpad constructs a document from changesets. A changeset details the edits made by a user or the difference with the former local version of the text. In other words, the flow of time is represented through a series of changesets which can be summed to the present state. The server keeps a sequence of acknowledged changesets. These acknowledged changesets represent the current common state and get communicated to all clients. \nLocally each client builds its present state by summing up the acknowledged changesets received from the server, and with the local changesets which are not yet acknowledged. Each client communicates its local changesets, every 500 ms after the latest acknowledgment.  As this changeset can be relative to an earlier version the server first recalculates a changeset relative to the current version. Then it sends an acknowledgment to the sender and the changeset to the other clients. \nDifferent collaborative document editing tools use different methods to deal with conflicts, which also are dependent on the purpose or content of the document. Conflicts between numeric edits in a collaborative spreadsheet are dealt with differently than conflicts between text edits. But common is that the present gets continuously constructed on the server and on the clients and negotiated through the specific protocol. The user can always access its local copy of the text and create its local present, but it gets negotiated with the server to create a common present. \nAnd every tool rings also its own disasters and apocalyptic experiences through the collapse of the negotiation process and thereby of the common state.\n\nThis negotiation of time is in the first place a negotiation of the present. But also what is past and future gets constructed in this present. The ordered sequence connected to the system time(s) already imply such a past and future. But the construction of a past consists also of a negotiation of what remains and what gets forgotten. Data gets stored in memory or written to storage devices, while the operating systems assigns time stamps to these traces of the present becoming past and writes other traces to a range of log files. \nAs writers trying to capture their stream of consciousness already experienced, it is impossible to completely store the present for future use as past. There will always be a remainder that escapes and can not be written down. Also an operating systems can not keep a log of all its operations without getting stuck in an infinite regress in which it tries to log its logging operations. What will be the past for a future present needs to be constructed and selected. Everything else gets forgotten.\nLinux stores its logs in /var/log, while all sorts of programs can create their own logs. All these logs are specific histories, for example of what programs got installed. To get an idea of your past on a Linux system in the file system, you can collect the timestamps of all files with:\nos.system(\"ls -R -l --time-style=long-iso / > modlistsystem-long-iso.txt\")\nos.system(\"ls -R -lu --time-style=long-iso / > accesslistsystem-long-iso.txt\")\n\n\nRenegotiating time with your computer: sundial network time.\n\nTechnology has been a tool through which humans created distance with natural cycles and designed its own time experiences. This means we can critically intervene in the functioning of the technology and develop alternative time practices and experiences. As an example we put forward as a not-yet-existing-proof of concept the possibility to let the computer work according to sundial time.\nIs it possible to reconfigure the time of the computer and rewire the connections with human and natural rhythms? Would we be able to let the computer function in an older human time experience, e.g. the time of the sundial? How can such sundial experience be built into the system and what would be the impact on the user?\nSundial time is a geographically and seasonally localised time. It also includes a distinction between day and night. The night is ‘out of time’. This distinction has been extradited from linear time practices, where the amount of light is just a variable external to steady beat of time. Linear time allows to turn the night into economically productive time. Running your computer on sundial time re-introduces the night in your system.\n\nAn intervention to introduce sundial time in your computer is possible in the whole range of places we discussed where time gets negotiated. The most fundamental but also most difficult route would be to exchange the clock with something reflecting a more natural rhythm. However, as we have seen that this clock has become only a back up tool and that the actual system time is always renegotiated with other systems connected through the network, another renegotiation process can be introduced. Therefore, the most easy way to introduce sundial time would be to reconfigure the timesyncdor ntp processes and make them listen to an alternative sundial time server. Such sundial time server can be built in different ways. A hardware version can be made of a sundial combined with light sensors, measuring the location of the shadow through the difference in light and deriving the sundial time from this location. This would link the time server to the actual earthly day and night cycle. A simulated version could be a local piece of software which looks up the timing of sunrise and sunset at the specific location and day. Based on this information it recalculates the local sundial time, which it provides through the NTP protocol. The local computer receives this sundial time from the nearest sundial time server and continuously adapts its system time, as it does now already based on UTC. Further, it can be programmed to go into sleep modus during the night and to wake up only when a sunrise signal is received from the time server.\n\nLetting a computer run on sundial time is a conscious effort to disconnect it from human-made linear time and to reconnect it with the old earth-driven cycles and the ancient time experience by humans. The unified time of UTC and the time zones gets broken up into extremely localised time servers, while also the difference between day and night gets introduced into the functioning of the computer. \nThis re-enactment of such cycles through the computer will remind human users that the experience of time is a socially negotiated and technically implemented experience. Further, a computer running on sundial time would be a great piece of nannyware nudging the user to live in harmony with his natural environment and a synchronisation tool to re-establish the link between the users bio-rhythm and the earthly day and night cycle. It would also be a great reminder why humans tried in the first place to escape from these earthly rhythms through technology and started hacking time.\n \n\nPS. This text was written in and in resistance/conflict to WTC time, which is exemplary for the bureaucratic office time experience. The WTC building boots up at 9AM and is turned off in several steps (at 5PM the air conditioning is turned off, later entrances close) into a wake state. The concierge can let you in and out through the night side entry, but main life support systems remain turned off outside office hours. This wake state continues during the weekend, turning the building into a glass house with limited air in storage. On Monday morning this bureaucratic time capsule revives from its slumber. A suffocating experience, but actually the building is a great piece of nannyware nudging towards a healthy office rhythm without too much extra hours outside the herd work ethic.\n\nSuch office time can also be implemented and negotiated on your local computer. A small Proof of Concept was the adapted bashrc on the etherbox simulating a system getting bored and stealing time. This can be further developed by including a differentiated response during versus outside office hours, aging (slower when timestamp of original install is more remote in time), etc.\n","meta":{"author":"a.I4FbrrCTDQNN8GIf","timestamp":1517420203389}},"pad:observatory.guide.experiencingtime:revs:30":{"changeset":"Z:f12>3|1k=e3t=h*0+3$anu","meta":{"author":"a.I4FbrrCTDQNN8GIf","timestamp":1517420705577}},"pad:observatory.guide.experiencingtime:revs:300":{"changeset":"Z:fc3>2|9=16q=71*9+2$th","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424206287,"atext":{"text":"%__NOPUBLISH__\n\n% HEADER: How humans and machines negotiate the experience of time\n\nThe experience of time is an essential element of any form of experience or cognition. Emotions depend to a large extent on expectations, or the potential coming of a future event. Any observing or experience of difference, of presence related to an earlier or later absence, is linked with an experience of time.\nHowever, how the actual experience of time is shaped is strongly influenced by all sort of design decisions and implementations, both for humans and machines. Also, the experience of time is a conglomerate of different experiences: time as a common moment, the duration of a certain time, time as cyclic events, historical time, and so on. Researching how humans and machines experience time and negotiate their time experiences is therefore an interesting avenue to explore.\n\nHumans have developed a time experience which was linked to natural life cycles, but it has been influenced by both technology and social conditions.(%CARLINSAYS: suggested rewording: \"Humans have developed a time experience that is linked to natural life cycles but that is also influenced by both technology and social conditions.\")\nThe first time cycle is the day-night time cycle. Humans do their stuff during the day, but need to sleep. The night is generally the preferred time for sleep, but the availability of artificial light and the need for longer-distance coordination has influenced how humans deal with the day cycle and the place for sleep in it.\nTime measurement also developed: early time measurement was linked to observation of natural circumstances like sunrise and sunset. (%CARLINSAYS: I suggest cutting \"Time measurement also developed\" and starting with\"Early time measurement was linked to thMeasurement of such sun cycles (which is in fact an earth cycle) through sundials allowed for more precise time referencing, but it is very place and season dependent. More light during summer than winter implied that hours were longer in summer than in winter. Similarly such changes were greater at higher latitudes, while near the equator such changes are limited. In other words, time measured by sundials provided a local common reference of time, but not one over longer distances.\n\nThis seasonal time experience when the human world was flat reflects the unknown spherical geometry of the earth cycle projected on the flat earth. When humans became aware of earth as a sphere, they responded by flattening and linearising time. Mechanical clocks allowed to unify time lengths and thereby also standardise time. Physical observation and all sorts of economic processes needed such standardised time measurement. Early versions of such time measurement, like hourglasses, existed but remained disconnected from day time measurement. Mechanical clocks allowed to unify different time cycles and scales. It also allowed standardisation of time over longer distances, departing from the local sundial time to time zones, which were less strictly linked to the seasonal rhythm of the sun but more to geographical zones. Long distance trade, industrialisation and later long-distance communication by electro-magnetic signals (comparable to the speed of light) demanded more geographical coordination. In the 19th century coordination developed through clock networks, with a master clock driving the slave clocks. Nowadays we work with atom clocks and a global Coordinated Universal Time or UTC as a reference to which geographical time zones are connected. Humans organised their activities accordingly, if necessary by de-linking from the solar rhythm. The borders of time zones diverge very often from the longitudinal lines for economic and political reasons.\nA similar socialisation and globalisation of time occurred for computers. Where in the early computer age time was set and counted locally by each machine, it is now common to continuously synchronise time over the internet through time servers and the Network Time Protocol. Humans get woken, cron jobs get triggered, precision bombs get guided and trains count their delays in measure with the drill signal of the Master Clock of the US Naval Observatory, only differing by tiny variations in latency times. \n\nHumans also developed ways to relate to time on a longer scale, which were originally linked to natural rhythms: years, life cycles. Calendar systems were used to determine seasonal agricultural needs (when to plant, when to harvest), while they also allowed to keep track of life cycles and historical time. Again, such calendar systems have been very diverse and local, but got slowly fused to a couple of dominant models. \nGenerational or birth, life and death rhythms, originating from the human experience, have been projected on all sorts of phenomena. Religions tried to explain the origin of everything, while also often predicting the end in apocalyptic visions. The demise of religion at the hand of science did not let such generational visions disappear. They got new expressions in scientific theories of the beginning (big bang, evolution) and end (the heath death of the universe, the end of the earth at the final burnout phase of the sun) of everything. Similar apocalyptic visions are now embedded through technological design decisions (Y2K, the end of Unix-time in 2038). In all versions the end is often linked to the specific design of time (e.g. the end of the Maya calendar, millenarian movements). But just like religious visions can extend their apocalypse in a new versions (e.g. the always near but always delayed apocalypse of the Saints of the last days), machinic accounts of time can always be extended by enlarging the bit size of the time range (cfr the extension of Unix time till AD 292277026596, or safely after the end of the observable universe according to contemporary physics).\n\n## The time(s) of the machine\n\nAlso machines have their natural cycle: the vibrating pulses of its internal crystal clock drives the cycles according to which the processor works. All PCs have such a Real Time Clock (RTC), independent of the processor. The time of the computer is linked to this clock cycle, as it consists in counting cyclical ticks. This produces a single cyclical, and completely linear, time rhythm in the hardware. In contrast to the earthly or natural cycles it is without any seasonal difference or interference between several cycles. This makes a computer into a monadic time capsule, disconnected from the outside rhythms.\nThe time experience in the software is in principle based on this local time cycle. However, once computers and software gets linked and networked, they have to negotiate and synchronize their times.\nTo start, time in a computer is no unique or unified experience. Several hardware components and a diverse collection of software organised in layers and processes create a whole ecology of interdependent time experiences. The operating system experiences other software components, and users through them, as a bunch of processes screaming for attention. One of the most pushy interrupts is the timer forcing the processor to count another click and update the system time. An internal kernel process performs the negotiation of time through which the clock count is linked with a system time. \nThis starts already during the booting process, when the operating system is determining the clock signal frequency. PCs have another time-measuring device, the Programmable Interval Timer\n(PIT), which can be set by the processor at a defined frequency. During a short time indicated by this PIT the clock cycles of the RTC get counted and the frequency of the RTC gets calculated. Several other timing devices are present in the hardware, synchronized by kernel processes into a range of times available for the operating system and the processes. As said, one of these times is available as system time and gets communicated to all other processes when demanded. \nWith the advent of the internet computers are no monads anymore, but are socialised in the common rhythm broadcasted with the Network Time Protocol. The local system time serves as back up, but gets continuously adapted to the network time. On a Ubuntu/Debian machine these times can be checked with timedatectl status. The timedatectl command enables to change these synchronisation processes. The actual synchronisation is done by the timesyncd process and the time servers to be used can be set in the /etc/systemd/timesyncd.conf file. Other Linux flavours work with the older ntp process which can be configured in /etc/ntp.conf. \n\nThe actual process time is completely different from this system time. Most of the time processes are put on hold and when the scheduler gives them time they can proceed till the next on hold is forced to make time for another process. The scheduler is the big organiser of time in the internal ecology of processes.\nSystem time is externally counted and therefore an external global variable to these processes. They can all send a demand to the kernel to get the system time. This gets communicated through the software stack with a range of system calls of the kernel and through the specific time modules of the programming language the software is programmed in.\nThe difference between the actual process time and system time does not appear in how time is perceived by the process. The process only perceives time as the difference between two demands of system time and is oblivious of its time being put on hold. The processor on the other hand spent most of its processing time as idle time: a processor is doing time waiting for slow system components like memory and even slower hard drives and network connections to respond and switches between checking for responses of these laggards. L’enfer du temps perdu, ce sont les autres.\n\nConnecting computers into a network demands new negotiations of time. We already mentioned the networked and globalised UTC timekeeping. But temporal negotiations happen on all levels of the system. Network protocols have timed choreographies to make connections and proceed with communications, with time out failsafes to break off when something goes wrong. The timing of an action is an essential component making the difference between a meaningful signal and noise.\nUsing a browser over http to connect to a website, or better the server providing the website on your request, is built on a discontinuous time practice. In a REST architecture the server just deals with a queue of requests and does not see continuity over time between certain requests from a single user.  New temporal practices have been designed and technically implemented. Through cookies the server is able to recognise users and their state in time. \nThe border between your computer and servers on the internet becomes fuzzy when external software is dropped on your computer and runs  in your webbrowser. Javascript modules get dropped on your computer and can start performing tasks on demand of an external server, be it rendering a graph or mining digital money. Similarly, the browser becomes a border where time gets negotiated through synchronisation processes.\nWhat time exactly is depends on the task at hand. Each tool contains its specific temporal practices, dependent on the speed and subject matter of the synchronisation process needed.\nFor example, for collaborative document editing tools like Google Docs or Etherpad it is a sequence of versions of the document. A range of strategies have been developed to allow to synchronize the changes made by different users with the least amount of conflict. \nThe Easysync-protocol used by Etherpad constructs a document from changesets. A changeset details the edits made by a user or the difference with the former local version of the text. In other words, the flow of time is represented through a series of changesets which can be summed to the present state. The server keeps a sequence of acknowledged changesets. These acknowledged changesets represent the current common state and get communicated to all clients. \nLocally each client builds its present state by summing up the acknowledged changesets received from the server, and with the local changesets which are not yet acknowledged. Each client communicates its local changesets, every 500 ms after the latest acknowledgment.  As this changeset can be relative to an earlier version the server first recalculates a changeset relative to the current version. Then it sends an acknowledgment to the sender and the changeset to the other clients. \nDifferent collaborative document editing tools use different methods to deal with conflicts, which also are dependent on the purpose or content of the document. Conflicts between numeric edits in a collaborative spreadsheet are dealt with differently than conflicts between text edits. But common is that the present gets continuously constructed on the server and on the clients and negotiated through the specific protocol. The user can always access its local copy of the text and create its local present, but it gets negotiated with the server to create a common present. \nAnd every tool rings also its own disasters and apocalyptic experiences through the collapse of the negotiation process and thereby of the common state.\n\nThis negotiation of time is in the first place a negotiation of the present. But also what is past and future gets constructed in this present. The ordered sequence connected to the system time(s) already imply such a past and future. But the construction of a past consists also of a negotiation of what remains and what gets forgotten. Data gets stored in memory or written to storage devices, while the operating systems assigns time stamps to these traces of the present becoming past and writes other traces to a range of log files. \nAs writers trying to capture their stream of consciousness already experienced, it is impossible to completely store the present for future use as past. There will always be a remainder that escapes and can not be written down. Also an operating systems can not keep a log of all its operations without getting stuck in an infinite regress in which it tries to log its logging operations. What will be the past for a future present needs to be constructed and selected. Everything else gets forgotten.\nLinux stores its logs in /var/log, while all sorts of programs can create their own logs. All these logs are specific histories, for example of what programs got installed. To get an idea of your past on a Linux system in the file system, you can collect the timestamps of all files with:\n\n% -----------------\n\nos.system(\"ls -R -l --time-style=long-iso \\\n           > modlistsystem-long-iso.txt\")\nos.system(\"ls -R -lu --time-style=long-iso \\\n           > accesslistsystem-long-iso.txt\")\n\n% SRCCODE:\n\n## Renegotiating time with your computer: sundial network time.\n\nTechnology has been a tool through which humans created distance with natural cycles and designed its own time experiences. This means we can critically intervene in the functioning of the technology and develop alternative time practices and experiences. As an example we put forward as a not-yet-existing-proof of concept the possibility to let the computer work according to sundial time.\nIs it possible to reconfigure the time of the computer and rewire the connections with human and natural rhythms? Would we be able to let the computer function in an older human time experience, e.g. the time of the sundial? How can such sundial experience be built into the system and what would be the impact on the user?\nSundial time is a geographically and seasonally localised time. It also includes a distinction between day and night. The night is ‘out of time’. This distinction has been extradited from linear time practices, where the amount of light is just a variable external to steady beat of time. Linear time allows to turn the night into economically productive time. Running your computer on sundial time re-introduces the night in your system.\n\nAn intervention to introduce sundial time in your computer is possible in the whole range of places we discussed where time gets negotiated. The most fundamental but also most difficult route would be to exchange the clock with something reflecting a more natural rhythm. However, as we have seen that this clock has become only a back up tool and that the actual system time is always renegotiated with other systems connected through the network, another renegotiation process can be introduced. Therefore, the most easy way to introduce sundial time would be to reconfigure the timesyncdor ntp processes and make them listen to an alternative sundial time server. Such sundial time server can be built in different ways. A hardware version can be made of a sundial combined with light sensors, measuring the location of the shadow through the difference in light and deriving the sundial time from this location. This would link the time server to the actual earthly day and night cycle. A simulated version could be a local piece of software which looks up the timing of sunrise and sunset at the specific location and day. Based on this information it recalculates the local sundial time, which it provides through the NTP protocol. The local computer receives this sundial time from the nearest sundial time server and continuously adapts its system time, as it does now already based on UTC. Further, it can be programmed to go into sleep modus during the night and to wake up only when a sunrise signal is received from the time server.\n\nLetting a computer run on sundial time is a conscious effort to disconnect it from human-made linear time and to reconnect it with the old earth-driven cycles and the ancient time experience by humans. The unified time of UTC and the time zones gets broken up into extremely localised time servers, while also the difference between day and night gets introduced into the functioning of the computer. \nThis re-enactment of such cycles through the computer will remind human users that the experience of time is a socially negotiated and technically implemented experience. Further, a computer running on sundial time would be a great piece of nannyware nudging the user to live in harmony with his natural environment and a synchronisation tool to re-establish the link between the users bio-rhythm and the earthly day and night cycle. It would also be a great reminder why humans tried in the first place to escape from these earthly rhythms through technology and started hacking time.\n\nHans Lammerant, January 2018\n\n% NOTE: -\n This text was written in and in resistance/conflict to WTC time, which is exemplary for the bureaucratic office time experience. The WTC building boots up at 9AM and is turned off in several steps (at 5PM the air conditioning is turned off, later entrances close) into a wake state. The concierge can let you in and out through the night side entry, but main life support systems remain turned off outside office hours. This wake state continues during the weekend, turning the building into a glass house with limited air in storage. On Monday morning this bureaucratic time capsule revives from its slumber. A suffocating experience, but actually the building is a great piece of nannyware nudging towards a healthy office rhythm without too much extra hours outside the herd work ethic.\n\nSuch office time can also be implemented and negotiated on your local computer. A small Proof of Concept was the adapted bashrc on the etherbox simulating a system getting bored and stealing time. This can be further developed by including a differentiated response during versus outside office hours, aging (slower when timestamp of original install is more remote in time), etc.\n\n","attribs":"*5+1|1+e*0|1+1*5+9*0|3+ad*0+94*9+b*0|2+3u*0+1a*9+2*0+11*9+2*0+1q*9+55*0|1+1*9+3*0|1+91*0+3o*9|1+gz*0|1+1*0+se*0*1+2*0|d+3mh*0+8c*0*2+i*0+6*0*2+b*0+2u*0*2+9*0+3q*0*2+3*0|i+4hp*0+80*5|1+1*0|1+1*5|2+l+17*5|1+1+15*0|1+1+18*5|1+1+18*0|1+1*5|2+c*0|7+xy*0+g5*0*2+9*0+3*0*2+3*0|7+1ip*6+2*6*7*8+4*6|1+4*0|3+wl|1+1"}}},"pad:observatory.guide.experiencingtime:revs:301":{"changeset":"Z:fc5>4|9=16q=73*9+4$e da","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424206781}},"pad:observatory.guide.experiencingtime:revs:302":{"changeset":"Z:fc9>1|9=16q=77*9+1$y","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424207279}},"pad:observatory.guide.experiencingtime:revs:303":{"changeset":"Z:fca>1|9=16q=78*9+1$0","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424208042}},"pad:observatory.guide.experiencingtime:revs:304":{"changeset":"Z:fcb<1|9=16q=78-1$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424208549}},"pad:observatory.guide.experiencingtime:revs:305":{"changeset":"Z:fca>1|9=16q=78*9+1$-","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424209256}},"pad:observatory.guide.experiencingtime:revs:306":{"changeset":"Z:fcb>1|9=16q=79*9+1$n","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424209758}},"pad:observatory.guide.experiencingtime:revs:307":{"changeset":"Z:fcc>2|9=16q=7a*9+2$ig","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424210363}},"pad:observatory.guide.experiencingtime:revs:308":{"changeset":"Z:fce>2|9=16q=7c*9+2$ht","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424210879}},"pad:observatory.guide.experiencingtime:revs:309":{"changeset":"Z:fcg>1|9=16q=7e*9+1$ ","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424211377}},"pad:observatory.guide.experiencingtime:revs:31":{"changeset":"Z:f15>2|1k=e3t=k*0+2$ar","meta":{"author":"a.I4FbrrCTDQNN8GIf","timestamp":1517420706078}},"pad:observatory.guide.experiencingtime:revs:310":{"changeset":"Z:fch>1|9=16q=7f*9+1$c","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424211881}},"pad:observatory.guide.experiencingtime:revs:311":{"changeset":"Z:fci>3|9=16q=7g*9+3$ycl","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424212382}},"pad:observatory.guide.experiencingtime:revs:312":{"changeset":"Z:fcl>1|9=16q=7j*9+1$e","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424212919}},"pad:observatory.guide.experiencingtime:revs:313":{"changeset":"Z:fcm>2|9=16q=7k*9+2$ t","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424215686}},"pad:observatory.guide.experiencingtime:revs:314":{"changeset":"Z:fco>5|9=16q=7m*9+5$hroug","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424216190}},"pad:observatory.guide.experiencingtime:revs:315":{"changeset":"Z:fct>3|9=16q=7r*9+3$h o","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424216687}},"pad:observatory.guide.experiencingtime:revs:316":{"changeset":"Z:fcw>4|9=16q=7u*9+4$bser","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424217190}},"pad:observatory.guide.experiencingtime:revs:317":{"changeset":"Z:fd0>5|9=16q=7y*9+5$vatio","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424217690}},"pad:observatory.guide.experiencingtime:revs:318":{"changeset":"Z:fd5>3|9=16q=83*9+3$n o","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424218190}},"pad:observatory.guide.experiencingtime:revs:319":{"changeset":"Z:fd8>5|9=16q=86*9+5$f nat","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424218694}},"pad:observatory.guide.experiencingtime:revs:32":{"changeset":"Z:f17>2|1k=e3t=m*0+2$i ","meta":{"author":"a.I4FbrrCTDQNN8GIf","timestamp":1517420706613}},"pad:observatory.guide.experiencingtime:revs:320":{"changeset":"Z:fdd>2|9=16q=8b*9+2$ur","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424219394}},"pad:observatory.guide.experiencingtime:revs:321":{"changeset":"Z:fdf>3|9=16q=8d*9+3$al ","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424219893}},"pad:observatory.guide.experiencingtime:revs:322":{"changeset":"Z:fdi>3|9=16q=8g*9+3$cir","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424220395}},"pad:observatory.guide.experiencingtime:revs:323":{"changeset":"Z:fdl>4|9=16q=8j*9+4$cume","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424220918}},"pad:observatory.guide.experiencingtime:revs:324":{"changeset":"Z:fdp>1|9=16q=8m-1*9+2$st","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424221420}},"pad:observatory.guide.experiencingtime:revs:325":{"changeset":"Z:fdq>4|9=16q=8o*9+4$ance","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424221923}},"pad:observatory.guide.experiencingtime:revs:326":{"changeset":"Z:fdu>4|9=16q=8s*9+4$s li","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424222420}},"pad:observatory.guide.experiencingtime:revs:327":{"changeset":"Z:fdy>3|9=16q=8w*9+3$ke ","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424222921}},"pad:observatory.guide.experiencingtime:revs:328":{"changeset":"Z:fe1>4|9=16q=8z*9+4$sunr","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424223422}},"pad:observatory.guide.experiencingtime:revs:329":{"changeset":"Z:fe5>6|9=16q=93*9+6$ise an","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424223923}},"pad:observatory.guide.experiencingtime:revs:33":{"changeset":"Z:f19<1|1k=e3t=n-1$","meta":{"author":"a.I4FbrrCTDQNN8GIf","timestamp":1517420707461}},"pad:observatory.guide.experiencingtime:revs:330":{"changeset":"Z:feb>3|9=16q=99*9+3$d u","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424224424}},"pad:observatory.guide.experiencingtime:revs:331":{"changeset":"Z:fee<1|9=16q=9b-1$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424224984}},"pad:observatory.guide.experiencingtime:revs:332":{"changeset":"Z:fed>2|9=16q=9b*9+2$su","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424225485}},"pad:observatory.guide.experiencingtime:revs:333":{"changeset":"Z:fef>3|9=16q=9d*9+3$nse","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424225985}},"pad:observatory.guide.experiencingtime:revs:334":{"changeset":"Z:fei>2|9=16q=9g*9+2$t.","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424226486}},"pad:observatory.guide.experiencingtime:revs:335":{"changeset":"Z:fek>2|9=16q=9i*9+2$\" ","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424226988}},"pad:observatory.guide.experiencingtime:revs:336":{"changeset":"Z:fem<1|9=16q=9j-1$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424227489}},"pad:observatory.guide.experiencingtime:revs:337":{"changeset":"Z:fel>1|9=16q=9j*9+1$)","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424227989}},"pad:observatory.guide.experiencingtime:revs:338":{"changeset":"Z:fem>1|9=16q=9k*9+1$ ","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424228490}},"pad:observatory.guide.experiencingtime:revs:339":{"changeset":"Z:fen<1|b=1tw=8w-1$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424251085}},"pad:observatory.guide.experiencingtime:revs:34":{"changeset":"Z:f18<1|1k=e3t=m-1$","meta":{"author":"a.I4FbrrCTDQNN8GIf","timestamp":1517420707960}},"pad:observatory.guide.experiencingtime:revs:340":{"changeset":"Z:fem>1|b=1tw=8w*9+1$z","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424251579}},"pad:observatory.guide.experiencingtime:revs:341":{"changeset":"Z:fen<1|b=1tw=bb-1$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424254738}},"pad:observatory.guide.experiencingtime:revs:342":{"changeset":"Z:fem>1|b=1tw=bb*9+1$z","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424255231}},"pad:observatory.guide.experiencingtime:revs:343":{"changeset":"Z:fen<1|b=1tw=hv-1$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424266049}},"pad:observatory.guide.experiencingtime:revs:344":{"changeset":"Z:fem>1|b=1tw=hv*9+1$z","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424268084}},"pad:observatory.guide.experiencingtime:revs:345":{"changeset":"Z:fen<1|b=1tw=o0-1$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424276019}},"pad:observatory.guide.experiencingtime:revs:346":{"changeset":"Z:fem>1|b=1tw=o0*9+1$z","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424277979}},"pad:observatory.guide.experiencingtime:revs:347":{"changeset":"Z:fen<3|b=1tw=sc-4*9+1$n","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424296717}},"pad:observatory.guide.experiencingtime:revs:348":{"changeset":"Z:fek>3|b=1tw=sd*9+3$ine","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424297214}},"pad:observatory.guide.experiencingtime:revs:349":{"changeset":"Z:fen>1|b=1tw=sg*9+1$t","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424297716}},"pad:observatory.guide.experiencingtime:revs:35":{"changeset":"Z:f17>1|1k=e3t=m*0+1$y","meta":{"author":"a.I4FbrrCTDQNN8GIf","timestamp":1517420710211}},"pad:observatory.guide.experiencingtime:revs:350":{"changeset":"Z:feo>2|b=1tw=sh*9+2$ee","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424298215}},"pad:observatory.guide.experiencingtime:revs:351":{"changeset":"Z:feq>3|b=1tw=sj*9+3$nth","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424298720}},"pad:observatory.guide.experiencingtime:revs:352":{"changeset":"Z:fet>1|b=1tw=su*9+1$,","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424301580}},"pad:observatory.guide.experiencingtime:revs:353":{"changeset":"Z:feu>1|b=1tw=w7*9+1$u","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424310503}},"pad:observatory.guide.experiencingtime:revs:354":{"changeset":"Z:fev<1|b=1tw=w7-1$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424311002}},"pad:observatory.guide.experiencingtime:revs:355":{"changeset":"Z:feu>2|b=1tw=w7*9+2$ic","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424311507}},"pad:observatory.guide.experiencingtime:revs:356":{"changeset":"Z:few<1|b=1tw=zw-1$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424325450}},"pad:observatory.guide.experiencingtime:revs:357":{"changeset":"Z:fev>1|b=1tw=zw*9+1$z","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424326919}},"pad:observatory.guide.experiencingtime:revs:358":{"changeset":"Z:few<1|b=1tw=zy-1$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424334813}},"pad:observatory.guide.experiencingtime:revs:359":{"changeset":"Z:fev<1|b=1tw=zx-1$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424335315}},"pad:observatory.guide.experiencingtime:revs:36":{"changeset":"Z:f18>1|1k=e3t=n*0+1$ ","meta":{"author":"a.I4FbrrCTDQNN8GIf","timestamp":1517420710712}},"pad:observatory.guide.experiencingtime:revs:360":{"changeset":"Z:feu>1|b=1tw=zx*9+1$e","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424335951}},"pad:observatory.guide.experiencingtime:revs:361":{"changeset":"Z:fev<1|c=2z4=5i-1$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424354030}},"pad:observatory.guide.experiencingtime:revs:362":{"changeset":"Z:feu>1|c=2z4=5i*9+1$z","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424355222}},"pad:observatory.guide.experiencingtime:revs:363":{"changeset":"Z:fev<1|c=2z4=5z-1$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424359284}},"pad:observatory.guide.experiencingtime:revs:364":{"changeset":"Z:feu>1|c=2z4=5z*9+1$I","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424360408}},"pad:observatory.guide.experiencingtime:revs:365":{"changeset":"Z:fev>1|c=2z4=9l*9+1$,","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424397022}},"pad:observatory.guide.experiencingtime:revs:366":{"changeset":"Z:few>2|e=3dd=6*9+2$ h","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424410602}},"pad:observatory.guide.experiencingtime:revs:367":{"changeset":"Z:fey>3|e=3dd=8*9+3$ave","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424411096}},"pad:observatory.guide.experiencingtime:revs:368":{"changeset":"Z:ff1>1|e=3dd=1v*9+1$s","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424431433}},"pad:observatory.guide.experiencingtime:revs:369":{"changeset":"Z:ff2<1|e=3dd=1h-1$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424433043}},"pad:observatory.guide.experiencingtime:revs:37":{"changeset":"Z:f19>2|1k=e3t=o*0+2$20","meta":{"author":"a.I4FbrrCTDQNN8GIf","timestamp":1517420711243}},"pad:observatory.guide.experiencingtime:revs:370":{"changeset":"Z:ff1<1|e=3dd=1g-1$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424433728}},"pad:observatory.guide.experiencingtime:revs:371":{"changeset":"Z:ff0<7|e=3dd=73-7$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424451586}},"pad:observatory.guide.experiencingtime:revs:372":{"changeset":"Z:fet>2|e=3dd=73*9+2$ma","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424452568}},"pad:observatory.guide.experiencingtime:revs:373":{"changeset":"Z:fev>1|e=3dd=75*9+1$d","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424453072}},"pad:observatory.guide.experiencingtime:revs:374":{"changeset":"Z:few>1|e=3dd=76*9+1$e","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424459533}},"pad:observatory.guide.experiencingtime:revs:375":{"changeset":"Z:fex>3|e=3dd=77*9+3$ it","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424460039}},"pad:observatory.guide.experiencingtime:revs:376":{"changeset":"Z:ff0>4|e=3dd=7a*9+4$ pos","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424460542}},"pad:observatory.guide.experiencingtime:revs:377":{"changeset":"Z:ff4>3|e=3dd=7e*9+3$sib","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424461043}},"pad:observatory.guide.experiencingtime:revs:378":{"changeset":"Z:ff7>2|e=3dd=7h*9+2$le","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424461555}},"pad:observatory.guide.experiencingtime:revs:379":{"changeset":"Z:ff9>1|e=3dd=4e*9+1$ ","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424469184}},"pad:observatory.guide.experiencingtime:revs:38":{"changeset":"Z:f1b>1|1k=e3t=q*0+1$1","meta":{"author":"a.I4FbrrCTDQNN8GIf","timestamp":1517420711743}},"pad:observatory.guide.experiencingtime:revs:380":{"changeset":"Z:ffa>1|e=3dd=4f*9+1$(","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424469678}},"pad:observatory.guide.experiencingtime:revs:381":{"changeset":"Z:ffb>1|e=3dd=4g*9+1$%","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424471967}},"pad:observatory.guide.experiencingtime:revs:382":{"changeset":"Z:ffc>1|e=3dd=4h*9+1$C","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424472468}},"pad:observatory.guide.experiencingtime:revs:383":{"changeset":"Z:ffd>3|e=3dd=4i*9+3$ARL","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424472975}},"pad:observatory.guide.experiencingtime:revs:384":{"changeset":"Z:ffg>2|e=3dd=4l*9+2$IN","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424473474}},"pad:observatory.guide.experiencingtime:revs:385":{"changeset":"Z:ffi>1|e=3dd=4n*9+1$S","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424473977}},"pad:observatory.guide.experiencingtime:revs:386":{"changeset":"Z:ffj>3|e=3dd=4o*9+3$AYS","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424474478}},"pad:observatory.guide.experiencingtime:revs:387":{"changeset":"Z:ffm>2|e=3dd=4r*9+2$: ","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424474979}},"pad:observatory.guide.experiencingtime:revs:388":{"changeset":"Z:ffo>3|e=3dd=4t*9+3$are","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424475479}},"pad:observatory.guide.experiencingtime:revs:389":{"changeset":"Z:ffr<1|e=3dd=4v-1$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424475979}},"pad:observatory.guide.experiencingtime:revs:39":{"changeset":"Z:f1c>1|1k=e3t=r*0+1$8","meta":{"author":"a.I4FbrrCTDQNN8GIf","timestamp":1517420712245}},"pad:observatory.guide.experiencingtime:revs:390":{"changeset":"Z:ffq<2|e=3dd=4t-2$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424476480}},"pad:observatory.guide.experiencingtime:revs:391":{"changeset":"Z:ffo>4|e=3dd=4t*9+4$\"are","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424476997}},"pad:observatory.guide.experiencingtime:revs:392":{"changeset":"Z:ffs>4|e=3dd=4x*9+4$ use","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424477504}},"pad:observatory.guide.experiencingtime:revs:393":{"changeset":"Z:ffw>2|e=3dd=51*9+2$d?","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424478006}},"pad:observatory.guide.experiencingtime:revs:394":{"changeset":"Z:ffy>1|e=3dd=53*9+1$)","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424478509}},"pad:observatory.guide.experiencingtime:revs:395":{"changeset":"Z:ffz<1|e=3dd=bl-1$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424489391}},"pad:observatory.guide.experiencingtime:revs:396":{"changeset":"Z:ffy<2|e=3dd=bj-2$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424489922}},"pad:observatory.guide.experiencingtime:revs:397":{"changeset":"Z:ffw>2|e=3dd=bj*9+2$ha","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424490430}},"pad:observatory.guide.experiencingtime:revs:398":{"changeset":"Z:ffy>2|e=3dd=bl*9+2$ve","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424490930}},"pad:observatory.guide.experiencingtime:revs:399":{"changeset":"Z:fg0>2|e=3dd=bu*9+2$ b","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424494511}},"pad:observatory.guide.experiencingtime:revs:4":{"changeset":"Z:f2d<1|2=1e=z|1-1$","meta":{"author":"a.I4FbrrCTDQNN8GIf","timestamp":1517420615924}},"pad:observatory.guide.experiencingtime:revs:40":{"changeset":"Z:f1d>1*5+1$%","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1517586566571}},"pad:observatory.guide.experiencingtime:revs:400":{"changeset":"Z:fg2>3|e=3dd=bw*9+3$een","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424495009,"atext":{"text":"%__NOPUBLISH__\n\n% HEADER: How humans and machines negotiate the experience of time\n\nThe experience of time is an essential element of any form of experience or cognition. Emotions depend to a large extent on expectations, or the potential coming of a future event. Any observing or experience of difference, of presence related to an earlier or later absence, is linked with an experience of time.\nHowever, how the actual experience of time is shaped is strongly influenced by all sort of design decisions and implementations, both for humans and machines. Also, the experience of time is a conglomerate of different experiences: time as a common moment, the duration of a certain time, time as cyclic events, historical time, and so on. Researching how humans and machines experience time and negotiate their time experiences is therefore an interesting avenue to explore.\n\nHumans have developed a time experience which was linked to natural life cycles, but it has been influenced by both technology and social conditions.(%CARLINSAYS: suggested rewording: \"Humans have developed a time experience that is linked to natural life cycles but that is also influenced by both technology and social conditions.\")\nThe first time cycle is the day-night time cycle. Humans do their stuff during the day, but need to sleep. The night is generally the preferred time for sleep, but the availability of artificial light and the need for longer-distance coordination has influenced how humans deal with the day cycle and the place for sleep in it.\nTime measurement also developed: early time measurement was linked to observation of natural circumstances like sunrise and sunset. (%CARLINSAYS: I suggest cutting \"Time measurement also developed\" and starting with\"Early time measurement was linked to the day-night cycle through observation of natural circumstances like sunrise and sunset.\") Measurement of such sun cycles (which is in fact an earth cycle) through sundials allowed for more precise time referencing, but it is very place and season dependent. More light during summer than winter implied that hours were longer in summer than in winter. Similarly such changes were greater at higher latitudes, while near the equator such changes are limited. In other words, time measured by sundials provided a local common reference of time, but not one over longer distances.\n\nThis seasonal time experience when the human world was flat reflects the unknown spherical geometry of the earth cycle projected on the flat earth. When humans became aware of earth as a sphere, they responded by flattening and linearising time. Mechanical clocks allowed to unify time lengths and thereby also standardize time. Physical observation and all sorts of economic processes needed such standardized time measurement. Early versions of such time measurement, like hourglasses, existed but remained disconnected from day time measurement. Mechanical clocks allowed to unify different time cycles and scales. It also allowed standardization of time over longer distances, departing from the local sundial time to time zones, which were less strictly linked to the seasonal rhythm of the sun but more to geographical zones. Long distance trade, industrialization and later long-distance communication by electro-magnetic signals (comparable to the speed of light) demanded more geographical coordination. In the nineteenth century, coordination developed through clock networks, with a master clock driving the slave clocks. Nowadays we work with atomic clocks and a global Coordinated Universal Time or UTC as a reference to which geographical time zones are connected. Humans organize their activities accordingly, if necessary by de-linking from the solar rhythm. The borders of time zones diverge very often from the longitudinal lines for economic and political reasons.\nA similar socialisation and globalisation of time occurred for computers. Where in the early computer age time was set and counted locally by each machine, it is now common to continuously synchronize time over the Internet through time servers and the Network Time Protocol. Humans get woken, cron jobs get triggered, precision bombs get guided, and trains count their delays in measure with the drill signal of the Master Clock of the US Naval Observatory, only differing by tiny variations in latency times. \n\nHumans have also developed ways to relate to time on longer scales, which were originally linked to natural rhythms: years, life cycles. Calendar systems were (%CARLINSAYS: \"are used?) used to determine seasonal agricultural needs (when to plant, when to harvest), while they also made it possible to keep track of life cycles and historical time. Again, such calendar systems have been very diverse and local, but have slowly been fused to a couple of dominant models. \nGenerational or birth, life and death rhythms, originating from the human experience, have been projected on all sorts of phenomena. Religions tried to explain the origin of everything, while also often predicting the end in apocalyptic visions. The demise of religion at the hand of science did not let such generational visions disappear. They got new expressions in scientific theories of the beginning (big bang, evolution) and end (the heath death of the universe, the end of the earth at the final burnout phase of the sun) of everything. Similar apocalyptic visions are now embedded through technological design decisions (Y2K, the end of Unix-time in 2038). In all versions the end is often linked to the specific design of time (e.g. the end of the Maya calendar, millenarian movements). But just like religious visions can extend their apocalypse in a new versions (e.g. the always near but always delayed apocalypse of the Saints of the last days), machinic accounts of time can always be extended by enlarging the bit size of the time range (cfr the extension of Unix time till AD 292277026596, or safely after the end of the observable universe according to contemporary physics).\n\n## The time(s) of the machine\n\nAlso machines have their natural cycle: the vibrating pulses of its internal crystal clock drives the cycles according to which the processor works. All PCs have such a Real Time Clock (RTC), independent of the processor. The time of the computer is linked to this clock cycle, as it consists in counting cyclical ticks. This produces a single cyclical, and completely linear, time rhythm in the hardware. In contrast to the earthly or natural cycles it is without any seasonal difference or interference between several cycles. This makes a computer into a monadic time capsule, disconnected from the outside rhythms.\nThe time experience in the software is in principle based on this local time cycle. However, once computers and software gets linked and networked, they have to negotiate and synchronize their times.\nTo start, time in a computer is no unique or unified experience. Several hardware components and a diverse collection of software organised in layers and processes create a whole ecology of interdependent time experiences. The operating system experiences other software components, and users through them, as a bunch of processes screaming for attention. One of the most pushy interrupts is the timer forcing the processor to count another click and update the system time. An internal kernel process performs the negotiation of time through which the clock count is linked with a system time. \nThis starts already during the booting process, when the operating system is determining the clock signal frequency. PCs have another time-measuring device, the Programmable Interval Timer\n(PIT), which can be set by the processor at a defined frequency. During a short time indicated by this PIT the clock cycles of the RTC get counted and the frequency of the RTC gets calculated. Several other timing devices are present in the hardware, synchronized by kernel processes into a range of times available for the operating system and the processes. As said, one of these times is available as system time and gets communicated to all other processes when demanded. \nWith the advent of the internet computers are no monads anymore, but are socialised in the common rhythm broadcasted with the Network Time Protocol. The local system time serves as back up, but gets continuously adapted to the network time. On a Ubuntu/Debian machine these times can be checked with timedatectl status. The timedatectl command enables to change these synchronisation processes. The actual synchronisation is done by the timesyncd process and the time servers to be used can be set in the /etc/systemd/timesyncd.conf file. Other Linux flavours work with the older ntp process which can be configured in /etc/ntp.conf. \n\nThe actual process time is completely different from this system time. Most of the time processes are put on hold and when the scheduler gives them time they can proceed till the next on hold is forced to make time for another process. The scheduler is the big organiser of time in the internal ecology of processes.\nSystem time is externally counted and therefore an external global variable to these processes. They can all send a demand to the kernel to get the system time. This gets communicated through the software stack with a range of system calls of the kernel and through the specific time modules of the programming language the software is programmed in.\nThe difference between the actual process time and system time does not appear in how time is perceived by the process. The process only perceives time as the difference between two demands of system time and is oblivious of its time being put on hold. The processor on the other hand spent most of its processing time as idle time: a processor is doing time waiting for slow system components like memory and even slower hard drives and network connections to respond and switches between checking for responses of these laggards. L’enfer du temps perdu, ce sont les autres.\n\nConnecting computers into a network demands new negotiations of time. We already mentioned the networked and globalised UTC timekeeping. But temporal negotiations happen on all levels of the system. Network protocols have timed choreographies to make connections and proceed with communications, with time out failsafes to break off when something goes wrong. The timing of an action is an essential component making the difference between a meaningful signal and noise.\nUsing a browser over http to connect to a website, or better the server providing the website on your request, is built on a discontinuous time practice. In a REST architecture the server just deals with a queue of requests and does not see continuity over time between certain requests from a single user.  New temporal practices have been designed and technically implemented. Through cookies the server is able to recognise users and their state in time. \nThe border between your computer and servers on the internet becomes fuzzy when external software is dropped on your computer and runs  in your webbrowser. Javascript modules get dropped on your computer and can start performing tasks on demand of an external server, be it rendering a graph or mining digital money. Similarly, the browser becomes a border where time gets negotiated through synchronisation processes.\nWhat time exactly is depends on the task at hand. Each tool contains its specific temporal practices, dependent on the speed and subject matter of the synchronisation process needed.\nFor example, for collaborative document editing tools like Google Docs or Etherpad it is a sequence of versions of the document. A range of strategies have been developed to allow to synchronize the changes made by different users with the least amount of conflict. \nThe Easysync-protocol used by Etherpad constructs a document from changesets. A changeset details the edits made by a user or the difference with the former local version of the text. In other words, the flow of time is represented through a series of changesets which can be summed to the present state. The server keeps a sequence of acknowledged changesets. These acknowledged changesets represent the current common state and get communicated to all clients. \nLocally each client builds its present state by summing up the acknowledged changesets received from the server, and with the local changesets which are not yet acknowledged. Each client communicates its local changesets, every 500 ms after the latest acknowledgment.  As this changeset can be relative to an earlier version the server first recalculates a changeset relative to the current version. Then it sends an acknowledgment to the sender and the changeset to the other clients. \nDifferent collaborative document editing tools use different methods to deal with conflicts, which also are dependent on the purpose or content of the document. Conflicts between numeric edits in a collaborative spreadsheet are dealt with differently than conflicts between text edits. But common is that the present gets continuously constructed on the server and on the clients and negotiated through the specific protocol. The user can always access its local copy of the text and create its local present, but it gets negotiated with the server to create a common present. \nAnd every tool rings also its own disasters and apocalyptic experiences through the collapse of the negotiation process and thereby of the common state.\n\nThis negotiation of time is in the first place a negotiation of the present. But also what is past and future gets constructed in this present. The ordered sequence connected to the system time(s) already imply such a past and future. But the construction of a past consists also of a negotiation of what remains and what gets forgotten. Data gets stored in memory or written to storage devices, while the operating systems assigns time stamps to these traces of the present becoming past and writes other traces to a range of log files. \nAs writers trying to capture their stream of consciousness already experienced, it is impossible to completely store the present for future use as past. There will always be a remainder that escapes and can not be written down. Also an operating systems can not keep a log of all its operations without getting stuck in an infinite regress in which it tries to log its logging operations. What will be the past for a future present needs to be constructed and selected. Everything else gets forgotten.\nLinux stores its logs in /var/log, while all sorts of programs can create their own logs. All these logs are specific histories, for example of what programs got installed. To get an idea of your past on a Linux system in the file system, you can collect the timestamps of all files with:\n\n% -----------------\n\nos.system(\"ls -R -l --time-style=long-iso \\\n           > modlistsystem-long-iso.txt\")\nos.system(\"ls -R -lu --time-style=long-iso \\\n           > accesslistsystem-long-iso.txt\")\n\n% SRCCODE:\n\n## Renegotiating time with your computer: sundial network time.\n\nTechnology has been a tool through which humans created distance with natural cycles and designed its own time experiences. This means we can critically intervene in the functioning of the technology and develop alternative time practices and experiences. As an example we put forward as a not-yet-existing-proof of concept the possibility to let the computer work according to sundial time.\nIs it possible to reconfigure the time of the computer and rewire the connections with human and natural rhythms? Would we be able to let the computer function in an older human time experience, e.g. the time of the sundial? How can such sundial experience be built into the system and what would be the impact on the user?\nSundial time is a geographically and seasonally localised time. It also includes a distinction between day and night. The night is ‘out of time’. This distinction has been extradited from linear time practices, where the amount of light is just a variable external to steady beat of time. Linear time allows to turn the night into economically productive time. Running your computer on sundial time re-introduces the night in your system.\n\nAn intervention to introduce sundial time in your computer is possible in the whole range of places we discussed where time gets negotiated. The most fundamental but also most difficult route would be to exchange the clock with something reflecting a more natural rhythm. However, as we have seen that this clock has become only a back up tool and that the actual system time is always renegotiated with other systems connected through the network, another renegotiation process can be introduced. Therefore, the most easy way to introduce sundial time would be to reconfigure the timesyncdor ntp processes and make them listen to an alternative sundial time server. Such sundial time server can be built in different ways. A hardware version can be made of a sundial combined with light sensors, measuring the location of the shadow through the difference in light and deriving the sundial time from this location. This would link the time server to the actual earthly day and night cycle. A simulated version could be a local piece of software which looks up the timing of sunrise and sunset at the specific location and day. Based on this information it recalculates the local sundial time, which it provides through the NTP protocol. The local computer receives this sundial time from the nearest sundial time server and continuously adapts its system time, as it does now already based on UTC. Further, it can be programmed to go into sleep modus during the night and to wake up only when a sunrise signal is received from the time server.\n\nLetting a computer run on sundial time is a conscious effort to disconnect it from human-made linear time and to reconnect it with the old earth-driven cycles and the ancient time experience by humans. The unified time of UTC and the time zones gets broken up into extremely localised time servers, while also the difference between day and night gets introduced into the functioning of the computer. \nThis re-enactment of such cycles through the computer will remind human users that the experience of time is a socially negotiated and technically implemented experience. Further, a computer running on sundial time would be a great piece of nannyware nudging the user to live in harmony with his natural environment and a synchronisation tool to re-establish the link between the users bio-rhythm and the earthly day and night cycle. It would also be a great reminder why humans tried in the first place to escape from these earthly rhythms through technology and started hacking time.\n\nHans Lammerant, January 2018\n\n% NOTE: -\n This text was written in and in resistance/conflict to WTC time, which is exemplary for the bureaucratic office time experience. The WTC building boots up at 9AM and is turned off in several steps (at 5PM the air conditioning is turned off, later entrances close) into a wake state. The concierge can let you in and out through the night side entry, but main life support systems remain turned off outside office hours. This wake state continues during the weekend, turning the building into a glass house with limited air in storage. On Monday morning this bureaucratic time capsule revives from its slumber. A suffocating experience, but actually the building is a great piece of nannyware nudging towards a healthy office rhythm without too much extra hours outside the herd work ethic.\n\nSuch office time can also be implemented and negotiated on your local computer. A small Proof of Concept was the adapted bashrc on the etherbox simulating a system getting bored and stealing time. This can be further developed by including a differentiated response during versus outside office hours, aging (slower when timestamp of original install is more remote in time), etc.\n\n","attribs":"*5+1|1+e*0|1+1*5+9*0|3+ad*0+94*9+b*0|2+3u*0+1a*9+2*0+11*9+2*0+1q*9+55*0|1+1*9+3*0|1+91*0+3o*9|1+jh*0|1+1*0+8w*9+1*0+2e*9+1*0+6j*9+1*0+64*9+1*0+4b*9+a*0+8*9+1*0+3c*9+2*0+3n*9+2*0|1+5a*0+5i*9+1*0+g*9+1*0+3l*9+1*0|2+4n*0+6*9+5*0+1i*9+1*0+2k*9+q*0+2p*9+g*0+3a*9+4*0+7*9+5*0|a+2kz*0+8c*0*2+i*0+6*0*2+b*0+2u*0*2+9*0+3q*0*2+3*0|i+4hp*0+80*5|1+1*0|1+1*5|2+l+17*5|1+1+15*0|1+1+18*5|1+1+18*0|1+1*5|2+c*0|7+xy*0+g5*0*2+9*0+3*0*2+3*0|7+1ip*6+2*6*7*8+4*6|1+4*0|3+wl|1+1"}}},"pad:observatory.guide.experiencingtime:revs:401":{"changeset":"Z:fg5<1|e=3dd=by-1$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424496357}},"pad:observatory.guide.experiencingtime:revs:402":{"changeset":"Z:fg4<3|e=3dd=bv-3$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424496853}},"pad:observatory.guide.experiencingtime:revs:403":{"changeset":"Z:fg1<1|e=3dd=bu-1$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424497363}},"pad:observatory.guide.experiencingtime:revs:404":{"changeset":"Z:fg0>1|e=3dd=bo*9+1$b","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424500075}},"pad:observatory.guide.experiencingtime:revs:405":{"changeset":"Z:fg1>1|e=3dd=bp*9+1$e","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424500789}},"pad:observatory.guide.experiencingtime:revs:406":{"changeset":"Z:fg2>2|e=3dd=bq*9+2$en","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424501298}},"pad:observatory.guide.experiencingtime:revs:407":{"changeset":"Z:fg4>1|e=3dd=bs*9+1$ ","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424501792}},"pad:observatory.guide.experiencingtime:revs:408":{"changeset":"Z:fg5>1|f=3qg=r*9+1$,","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424565759}},"pad:observatory.guide.experiencingtime:revs:409":{"changeset":"Z:fg6>1|e=3dd=52*9+1$\"","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424595647}},"pad:observatory.guide.experiencingtime:revs:41":{"changeset":"Z:f1e>5|15=av6=80*5|1+1*5+4$\n    ","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1518020891094}},"pad:observatory.guide.experiencingtime:revs:410":{"changeset":"Z:fg7>1|e=3dd=54*9+1$ ","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424596914}},"pad:observatory.guide.experiencingtime:revs:411":{"changeset":"Z:fg8>1|e=3dd=55*9+1$I","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424598077}},"pad:observatory.guide.experiencingtime:revs:412":{"changeset":"Z:fg9<1|e=3dd=55-1$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424598575}},"pad:observatory.guide.experiencingtime:revs:413":{"changeset":"Z:fg8>1|e=3dd=55*9+1$T","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424599117}},"pad:observatory.guide.experiencingtime:revs:414":{"changeset":"Z:fg9<1|e=3dd=55-1$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424599617}},"pad:observatory.guide.experiencingtime:revs:415":{"changeset":"Z:fg8>4|e=3dd=55*9+4$the ","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424600127}},"pad:observatory.guide.experiencingtime:revs:416":{"changeset":"Z:fgc>3|e=3dd=59*9+3$ten","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424600628}},"pad:observatory.guide.experiencingtime:revs:417":{"changeset":"Z:fgf>2|e=3dd=5c*9+2$se","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424601257}},"pad:observatory.guide.experiencingtime:revs:418":{"changeset":"Z:fgh>5|e=3dd=5e*9+5$ of v","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424601764}},"pad:observatory.guide.experiencingtime:revs:419":{"changeset":"Z:fgm>2|e=3dd=5j*9+2$er","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424602263}},"pad:observatory.guide.experiencingtime:revs:42":{"changeset":"Z:f1j<4|16=b37-4$","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1518020892387}},"pad:observatory.guide.experiencingtime:revs:420":{"changeset":"Z:fgo>3|e=3dd=5l*9+3$bs ","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424602763}},"pad:observatory.guide.experiencingtime:revs:421":{"changeset":"Z:fgr>4|e=3dd=5o*9+4$and ","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424603266}},"pad:observatory.guide.experiencingtime:revs:422":{"changeset":"Z:fgv>3|e=3dd=5s*9+3$the","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424603771}},"pad:observatory.guide.experiencingtime:revs:423":{"changeset":"Z:fgy>4|e=3dd=5v*9+4$ amo","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424604265}},"pad:observatory.guide.experiencingtime:revs:424":{"changeset":"Z:fh2>7|e=3dd=5z*9+7$un tof ","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424604775}},"pad:observatory.guide.experiencingtime:revs:425":{"changeset":"Z:fh9<2|e=3dd=64-2$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424605271}},"pad:observatory.guide.experiencingtime:revs:426":{"changeset":"Z:fh7<3|e=3dd=61-3$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424605770}},"pad:observatory.guide.experiencingtime:revs:427":{"changeset":"Z:fh4>4|e=3dd=61*9+4$t of","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424606270}},"pad:observatory.guide.experiencingtime:revs:428":{"changeset":"Z:fh8>1|e=3dd=65*9+1$t","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424606780}},"pad:observatory.guide.experiencingtime:revs:429":{"changeset":"Z:fh9<1|e=3dd=65-1$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424607273}},"pad:observatory.guide.experiencingtime:revs:43":{"changeset":"Z:f1f>1|17=b38*5+1$%","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1518020894557}},"pad:observatory.guide.experiencingtime:revs:430":{"changeset":"Z:fh8>3|e=3dd=65*9+3$ th","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424607773}},"pad:observatory.guide.experiencingtime:revs:431":{"changeset":"Z:fhb<2|e=3dd=66-2$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424608275}},"pad:observatory.guide.experiencingtime:revs:432":{"changeset":"Z:fh9<1|e=3dd=65-1$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424608840}},"pad:observatory.guide.experiencingtime:revs:433":{"changeset":"Z:fh8<1|e=3dd=64-1$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424609340}},"pad:observatory.guide.experiencingtime:revs:434":{"changeset":"Z:fh7<5|e=3dd=5z-5$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424609844}},"pad:observatory.guide.experiencingtime:revs:435":{"changeset":"Z:fh2<4|e=3dd=5v-4$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424610344}},"pad:observatory.guide.experiencingtime:revs:436":{"changeset":"Z:fgy>2|e=3dd=5v*9+2$ u","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424610845}},"pad:observatory.guide.experiencingtime:revs:437":{"changeset":"Z:fh0>3|e=3dd=5x*9+3$se ","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424611353}},"pad:observatory.guide.experiencingtime:revs:438":{"changeset":"Z:fh3>5|e=3dd=60*9+5$of th","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424611854}},"pad:observatory.guide.experiencingtime:revs:439":{"changeset":"Z:fh8>2|e=3dd=65*9+2$ep","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424612361}},"pad:observatory.guide.experiencingtime:revs:44":{"changeset":"Z:f1g>2|17=b38=1*5+2$ S","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1518020895072}},"pad:observatory.guide.experiencingtime:revs:440":{"changeset":"Z:fha<1|e=3dd=66-1$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424612858}},"pad:observatory.guide.experiencingtime:revs:441":{"changeset":"Z:fh9>4|e=3dd=66*9+4$ pas","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424613363}},"pad:observatory.guide.experiencingtime:revs:442":{"changeset":"Z:fhd>5|e=3dd=6a*9+5$sive ","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424613864}},"pad:observatory.guide.experiencingtime:revs:443":{"changeset":"Z:fhi>1|e=3dd=6f*9+1$v","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424614366}},"pad:observatory.guide.experiencingtime:revs:444":{"changeset":"Z:fhj>4|e=3dd=6g*9+4$oice","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424614872}},"pad:observatory.guide.experiencingtime:revs:445":{"changeset":"Z:fhn>5|e=3dd=6k*9+5$ in t","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424615378}},"pad:observatory.guide.experiencingtime:revs:446":{"changeset":"Z:fhs>4|e=3dd=6p*9+4$his ","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424615880}},"pad:observatory.guide.experiencingtime:revs:447":{"changeset":"Z:fhw>2|e=3dd=6t*9+2$ma","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424618478}},"pad:observatory.guide.experiencingtime:revs:448":{"changeset":"Z:fhy>4|e=3dd=6v*9+4$ke s","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424618968}},"pad:observatory.guide.experiencingtime:revs:449":{"changeset":"Z:fi2<1|e=3dd=6y-1$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424619474}},"pad:observatory.guide.experiencingtime:revs:45":{"changeset":"Z:f1i>1|17=b38=3*5+1$R","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1518020895736}},"pad:observatory.guide.experiencingtime:revs:450":{"changeset":"Z:fi1>2|e=3dd=6y*9+2$ce","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424620182}},"pad:observatory.guide.experiencingtime:revs:451":{"changeset":"Z:fi3>5|e=3dd=70*9+5$rtain","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424620678}},"pad:observatory.guide.experiencingtime:revs:452":{"changeset":"Z:fi8>2|e=3dd=75*9+2$ s","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424621178}},"pad:observatory.guide.experiencingtime:revs:453":{"changeset":"Z:fia>1|e=3dd=77*9+1$e","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424621684}},"pad:observatory.guide.experiencingtime:revs:454":{"changeset":"Z:fib>6|e=3dd=78*9+6$ntence","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424622186}},"pad:observatory.guide.experiencingtime:revs:455":{"changeset":"Z:fih>6|e=3dd=7e*9+6$s conf","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424622686}},"pad:observatory.guide.experiencingtime:revs:456":{"changeset":"Z:fin>3|e=3dd=7k*9+3$usi","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424623187}},"pad:observatory.guide.experiencingtime:revs:457":{"changeset":"Z:fiq>2|e=3dd=7n*9+2$ng","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424623686}},"pad:observatory.guide.experiencingtime:revs:458":{"changeset":"Z:fis<1|e=3dd=7o-1$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424624990}},"pad:observatory.guide.experiencingtime:revs:459":{"changeset":"Z:fir<1|e=3dd=7n-1$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424625484}},"pad:observatory.guide.experiencingtime:revs:46":{"changeset":"Z:f1j>1|17=b38=4*5+1$C","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1518020896236}},"pad:observatory.guide.experiencingtime:revs:460":{"changeset":"Z:fiq<5|e=3dd=7i-5$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424625984}},"pad:observatory.guide.experiencingtime:revs:461":{"changeset":"Z:fil<2|e=3dd=7g-2$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424626484}},"pad:observatory.guide.experiencingtime:revs:462":{"changeset":"Z:fij>5|e=3dd=7g*9+5$read ","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424626986}},"pad:observatory.guide.experiencingtime:revs:463":{"changeset":"Z:fio>7|e=3dd=7l*9+7$a littl","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424627492}},"pad:observatory.guide.experiencingtime:revs:464":{"changeset":"Z:fiv>4|e=3dd=7s*9+4$e st","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424627991}},"pad:observatory.guide.experiencingtime:revs:465":{"changeset":"Z:fiz>5|e=3dd=7w*9+5$range","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424628491}},"pad:observatory.guide.experiencingtime:revs:466":{"changeset":"Z:fj4>2|e=3dd=81*9+2$ly","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424628991}},"pad:observatory.guide.experiencingtime:revs:467":{"changeset":"Z:fj6>1|f=3tg=45*9+1$ ","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424638789}},"pad:observatory.guide.experiencingtime:revs:468":{"changeset":"Z:fj7>1|f=3tg=46*9+1$*","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424639395}},"pad:observatory.guide.experiencingtime:revs:469":{"changeset":"Z:fj8<1|f=3tg=46-1$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424640084}},"pad:observatory.guide.experiencingtime:revs:47":{"changeset":"Z:f1k>3|17=b38=5*5+3$COD","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1518020896737}},"pad:observatory.guide.experiencingtime:revs:470":{"changeset":"Z:fj7>1|f=3tg=46*9+1$(","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424640595}},"pad:observatory.guide.experiencingtime:revs:471":{"changeset":"Z:fj8<1|f=3tg=46-1$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424647162}},"pad:observatory.guide.experiencingtime:revs:472":{"changeset":"Z:fj7>c|f=3tg=46-1*9+d$(%CARLINSAYS:","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424647653}},"pad:observatory.guide.experiencingtime:revs:473":{"changeset":"Z:fjj>1|f=3tg=4j*9+1$ ","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424648543}},"pad:observatory.guide.experiencingtime:revs:474":{"changeset":"Z:fjk>1|f=3tg=4k*9+1$:","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424649042}},"pad:observatory.guide.experiencingtime:revs:475":{"changeset":"Z:fjl>1|f=3tg=4l*9+1$T","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424649546}},"pad:observatory.guide.experiencingtime:revs:476":{"changeset":"Z:fjm<2|f=3tg=4k-2$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424650051}},"pad:observatory.guide.experiencingtime:revs:477":{"changeset":"Z:fjk>2|f=3tg=4k*9+2$\"t","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424650561}},"pad:observatory.guide.experiencingtime:revs:478":{"changeset":"Z:fjm>3|f=3tg=4m*9+3$ry\"","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424651063}},"pad:observatory.guide.experiencingtime:revs:479":{"changeset":"Z:fjp>4|f=3tg=4p*9+4$ or ","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424651576}},"pad:observatory.guide.experiencingtime:revs:48":{"changeset":"Z:f1n>1|17=b38=8*5+1$E","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1518020897239}},"pad:observatory.guide.experiencingtime:revs:480":{"changeset":"Z:fjt>1|f=3tg=4t*9+1$\"","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424652092}},"pad:observatory.guide.experiencingtime:revs:481":{"changeset":"Z:fju>1|f=3tg=4u*9+1$t","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424652597}},"pad:observatory.guide.experiencingtime:revs:482":{"changeset":"Z:fjv>3|f=3tg=4v*9+3$rie","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424653097}},"pad:observatory.guide.experiencingtime:revs:483":{"changeset":"Z:fjy>6|f=3tg=4y*9+6$d and ","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424653598}},"pad:observatory.guide.experiencingtime:revs:484":{"changeset":"Z:fk4>2|f=3tg=54*9+2$co","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424654097}},"pad:observatory.guide.experiencingtime:revs:485":{"changeset":"Z:fk6>3|f=3tg=56*9+3$nti","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424654608}},"pad:observatory.guide.experiencingtime:revs:486":{"changeset":"Z:fk9>5|f=3tg=59*9+5$nue t","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424655108}},"pad:observatory.guide.experiencingtime:revs:487":{"changeset":"Z:fke>5|f=3tg=5e*9+5$o try","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424655615}},"pad:observatory.guide.experiencingtime:revs:488":{"changeset":"Z:fkj>1|f=3tg=5j*9+1$\"","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424656123}},"pad:observatory.guide.experiencingtime:revs:489":{"changeset":"Z:fkk>1|f=3tg=5k*9+1$)","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424656699}},"pad:observatory.guide.experiencingtime:revs:49":{"changeset":"Z:f1o>1|17=b38=9*5+1$:","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1518020897874}},"pad:observatory.guide.experiencingtime:revs:490":{"changeset":"Z:fkl>1|f=3tg=5l*9+1$ ","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424657203}},"pad:observatory.guide.experiencingtime:revs:491":{"changeset":"Z:fkm<c|j=4sz-d*9+1$M","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424700646}},"pad:observatory.guide.experiencingtime:revs:492":{"changeset":"Z:fka>4|j=4sz=1*9+4$achi","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424701142}},"pad:observatory.guide.experiencingtime:revs:493":{"changeset":"Z:fke>4|j=4sz=5*9+4$nes ","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424701641}},"pad:observatory.guide.experiencingtime:revs:494":{"changeset":"Z:fki>3|j=4sz=9*9+3$als","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424702140}},"pad:observatory.guide.experiencingtime:revs:495":{"changeset":"Z:fkl>1|j=4sz=c*9+1$o","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424702645}},"pad:observatory.guide.experiencingtime:revs:496":{"changeset":"Z:fkm>1|j=4sz=12*9+1$s","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424707261}},"pad:observatory.guide.experiencingtime:revs:497":{"changeset":"Z:fkn<1|j=4sz=12-1$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424714945}},"pad:observatory.guide.experiencingtime:revs:498":{"changeset":"Z:fkm<1|j=4sz=1u-1$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424725832}},"pad:observatory.guide.experiencingtime:revs:499":{"changeset":"Z:fkl<2|j=4sz=1s-2$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424726327}},"pad:observatory.guide.experiencingtime:revs:5":{"changeset":"Z:f2c<z|2=1e-z$","meta":{"author":"a.I4FbrrCTDQNN8GIf","timestamp":1517420619358}},"pad:observatory.guide.experiencingtime:revs:50":{"changeset":"Z:f1p>1|17=b38=a*5+1$ ","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1518020898377}},"pad:observatory.guide.experiencingtime:revs:500":{"changeset":"Z:fkj>2|j=4sz=1s*9+2$th","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424728035,"atext":{"text":"%__NOPUBLISH__\n\n% HEADER: How humans and machines negotiate the experience of time\n\nThe experience of time is an essential element of any form of experience or cognition. Emotions depend to a large extent on expectations, or the potential coming of a future event. Any observing or experience of difference, of presence related to an earlier or later absence, is linked with an experience of time.\nHowever, how the actual experience of time is shaped is strongly influenced by all sort of design decisions and implementations, both for humans and machines. Also, the experience of time is a conglomerate of different experiences: time as a common moment, the duration of a certain time, time as cyclic events, historical time, and so on. Researching how humans and machines experience time and negotiate their time experiences is therefore an interesting avenue to explore.\n\nHumans have developed a time experience which was linked to natural life cycles, but it has been influenced by both technology and social conditions.(%CARLINSAYS: suggested rewording: \"Humans have developed a time experience that is linked to natural life cycles but that is also influenced by both technology and social conditions.\")\nThe first time cycle is the day-night time cycle. Humans do their stuff during the day, but need to sleep. The night is generally the preferred time for sleep, but the availability of artificial light and the need for longer-distance coordination has influenced how humans deal with the day cycle and the place for sleep in it.\nTime measurement also developed: early time measurement was linked to observation of natural circumstances like sunrise and sunset. (%CARLINSAYS: I suggest cutting \"Time measurement also developed\" and starting with\"Early time measurement was linked to the day-night cycle through observation of natural circumstances like sunrise and sunset.\") Measurement of such sun cycles (which is in fact an earth cycle) through sundials allowed for more precise time referencing, but it is very place and season dependent. More light during summer than winter implied that hours were longer in summer than in winter. Similarly such changes were greater at higher latitudes, while near the equator such changes are limited. In other words, time measured by sundials provided a local common reference of time, but not one over longer distances.\n\nThis seasonal time experience when the human world was flat reflects the unknown spherical geometry of the earth cycle projected on the flat earth. When humans became aware of earth as a sphere, they responded by flattening and linearising time. Mechanical clocks allowed to unify time lengths and thereby also standardize time. Physical observation and all sorts of economic processes needed such standardized time measurement. Early versions of such time measurement, like hourglasses, existed but remained disconnected from day time measurement. Mechanical clocks allowed to unify different time cycles and scales. It also allowed standardization of time over longer distances, departing from the local sundial time to time zones, which were less strictly linked to the seasonal rhythm of the sun but more to geographical zones. Long distance trade, industrialization and later long-distance communication by electro-magnetic signals (comparable to the speed of light) demanded more geographical coordination. In the nineteenth century, coordination developed through clock networks, with a master clock driving the slave clocks. Nowadays we work with atomic clocks and a global Coordinated Universal Time or UTC as a reference to which geographical time zones are connected. Humans organize their activities accordingly, if necessary by de-linking from the solar rhythm. The borders of time zones diverge very often from the longitudinal lines for economic and political reasons.\nA similar socialisation and globalisation of time occurred for computers. Where in the early computer age time was set and counted locally by each machine, it is now common to continuously synchronize time over the Internet through time servers and the Network Time Protocol. Humans get woken, cron jobs get triggered, precision bombs get guided, and trains count their delays in measure with the drill signal of the Master Clock of the US Naval Observatory, only differing by tiny variations in latency times. \n\nHumans have also developed ways to relate to time on longer scales, which were originally linked to natural rhythms: years, life cycles. Calendar systems were (%CARLINSAYS: \"are used\"? the tense of verbs and the use of the passive voice in this make certain sentences read a little strangely) used to determine seasonal agricultural needs (when to plant, when to harvest), while they also made it possible to keep track of life cycles and historical time. Again, such calendar systems have been very diverse and local, but have been slowly fused to a couple of dominant models. \nGenerational or birth, life, and death rhythms, originating from the human experience, have been projected on all sorts of phenomena. Religions tried (%CARLINSAYS: \"try\" or \"tried and continue to try\") to explain the origin of everything, while also often predicting the end in apocalyptic visions. The demise of religion at the hand of science did not let such generational visions disappear. They got new expressions in scientific theories of the beginning (big bang, evolution) and end (the heath death of the universe, the end of the earth at the final burnout phase of the sun) of everything. Similar apocalyptic visions are now embedded through technological design decisions (Y2K, the end of Unix-time in 2038). In all versions the end is often linked to the specific design of time (e.g. the end of the Maya calendar, millenarian movements). But just like religious visions can extend their apocalypse in a new versions (e.g. the always near but always delayed apocalypse of the Saints of the last days), machinic accounts of time can always be extended by enlarging the bit size of the time range (cfr the extension of Unix time till AD 292277026596, or safely after the end of the observable universe according to contemporary physics).\n\n## The time(s) of the machine\n\nMachines also have their natural cycle: the vibrating pulses of th internal crystal clock drives the cycles according to which the processor works. All PCs have such a Real Time Clock (RTC), independent of the processor. The time of the computer is linked to this clock cycle, as it consists in counting cyclical ticks. This produces a single cyclical, and completely linear, time rhythm in the hardware. In contrast to the earthly or natural cycles it is without any seasonal difference or interference between several cycles. This makes a computer into a monadic time capsule, disconnected from the outside rhythms.\nThe time experience in the software is in principle based on this local time cycle. However, once computers and software gets linked and networked, they have to negotiate and synchronize their times.\nTo start, time in a computer is no unique or unified experience. Several hardware components and a diverse collection of software organised in layers and processes create a whole ecology of interdependent time experiences. The operating system experiences other software components, and users through them, as a bunch of processes screaming for attention. One of the most pushy interrupts is the timer forcing the processor to count another click and update the system time. An internal kernel process performs the negotiation of time through which the clock count is linked with a system time. \nThis starts already during the booting process, when the operating system is determining the clock signal frequency. PCs have another time-measuring device, the Programmable Interval Timer\n(PIT), which can be set by the processor at a defined frequency. During a short time indicated by this PIT the clock cycles of the RTC get counted and the frequency of the RTC gets calculated. Several other timing devices are present in the hardware, synchronized by kernel processes into a range of times available for the operating system and the processes. As said, one of these times is available as system time and gets communicated to all other processes when demanded. \nWith the advent of the internet computers are no monads anymore, but are socialised in the common rhythm broadcasted with the Network Time Protocol. The local system time serves as back up, but gets continuously adapted to the network time. On a Ubuntu/Debian machine these times can be checked with timedatectl status. The timedatectl command enables to change these synchronisation processes. The actual synchronisation is done by the timesyncd process and the time servers to be used can be set in the /etc/systemd/timesyncd.conf file. Other Linux flavours work with the older ntp process which can be configured in /etc/ntp.conf. \n\nThe actual process time is completely different from this system time. Most of the time processes are put on hold and when the scheduler gives them time they can proceed till the next on hold is forced to make time for another process. The scheduler is the big organiser of time in the internal ecology of processes.\nSystem time is externally counted and therefore an external global variable to these processes. They can all send a demand to the kernel to get the system time. This gets communicated through the software stack with a range of system calls of the kernel and through the specific time modules of the programming language the software is programmed in.\nThe difference between the actual process time and system time does not appear in how time is perceived by the process. The process only perceives time as the difference between two demands of system time and is oblivious of its time being put on hold. The processor on the other hand spent most of its processing time as idle time: a processor is doing time waiting for slow system components like memory and even slower hard drives and network connections to respond and switches between checking for responses of these laggards. L’enfer du temps perdu, ce sont les autres.\n\nConnecting computers into a network demands new negotiations of time. We already mentioned the networked and globalised UTC timekeeping. But temporal negotiations happen on all levels of the system. Network protocols have timed choreographies to make connections and proceed with communications, with time out failsafes to break off when something goes wrong. The timing of an action is an essential component making the difference between a meaningful signal and noise.\nUsing a browser over http to connect to a website, or better the server providing the website on your request, is built on a discontinuous time practice. In a REST architecture the server just deals with a queue of requests and does not see continuity over time between certain requests from a single user.  New temporal practices have been designed and technically implemented. Through cookies the server is able to recognise users and their state in time. \nThe border between your computer and servers on the internet becomes fuzzy when external software is dropped on your computer and runs  in your webbrowser. Javascript modules get dropped on your computer and can start performing tasks on demand of an external server, be it rendering a graph or mining digital money. Similarly, the browser becomes a border where time gets negotiated through synchronisation processes.\nWhat time exactly is depends on the task at hand. Each tool contains its specific temporal practices, dependent on the speed and subject matter of the synchronisation process needed.\nFor example, for collaborative document editing tools like Google Docs or Etherpad it is a sequence of versions of the document. A range of strategies have been developed to allow to synchronize the changes made by different users with the least amount of conflict. \nThe Easysync-protocol used by Etherpad constructs a document from changesets. A changeset details the edits made by a user or the difference with the former local version of the text. In other words, the flow of time is represented through a series of changesets which can be summed to the present state. The server keeps a sequence of acknowledged changesets. These acknowledged changesets represent the current common state and get communicated to all clients. \nLocally each client builds its present state by summing up the acknowledged changesets received from the server, and with the local changesets which are not yet acknowledged. Each client communicates its local changesets, every 500 ms after the latest acknowledgment.  As this changeset can be relative to an earlier version the server first recalculates a changeset relative to the current version. Then it sends an acknowledgment to the sender and the changeset to the other clients. \nDifferent collaborative document editing tools use different methods to deal with conflicts, which also are dependent on the purpose or content of the document. Conflicts between numeric edits in a collaborative spreadsheet are dealt with differently than conflicts between text edits. But common is that the present gets continuously constructed on the server and on the clients and negotiated through the specific protocol. The user can always access its local copy of the text and create its local present, but it gets negotiated with the server to create a common present. \nAnd every tool rings also its own disasters and apocalyptic experiences through the collapse of the negotiation process and thereby of the common state.\n\nThis negotiation of time is in the first place a negotiation of the present. But also what is past and future gets constructed in this present. The ordered sequence connected to the system time(s) already imply such a past and future. But the construction of a past consists also of a negotiation of what remains and what gets forgotten. Data gets stored in memory or written to storage devices, while the operating systems assigns time stamps to these traces of the present becoming past and writes other traces to a range of log files. \nAs writers trying to capture their stream of consciousness already experienced, it is impossible to completely store the present for future use as past. There will always be a remainder that escapes and can not be written down. Also an operating systems can not keep a log of all its operations without getting stuck in an infinite regress in which it tries to log its logging operations. What will be the past for a future present needs to be constructed and selected. Everything else gets forgotten.\nLinux stores its logs in /var/log, while all sorts of programs can create their own logs. All these logs are specific histories, for example of what programs got installed. To get an idea of your past on a Linux system in the file system, you can collect the timestamps of all files with:\n\n% -----------------\n\nos.system(\"ls -R -l --time-style=long-iso \\\n           > modlistsystem-long-iso.txt\")\nos.system(\"ls -R -lu --time-style=long-iso \\\n           > accesslistsystem-long-iso.txt\")\n\n% SRCCODE:\n\n## Renegotiating time with your computer: sundial network time.\n\nTechnology has been a tool through which humans created distance with natural cycles and designed its own time experiences. This means we can critically intervene in the functioning of the technology and develop alternative time practices and experiences. As an example we put forward as a not-yet-existing-proof of concept the possibility to let the computer work according to sundial time.\nIs it possible to reconfigure the time of the computer and rewire the connections with human and natural rhythms? Would we be able to let the computer function in an older human time experience, e.g. the time of the sundial? How can such sundial experience be built into the system and what would be the impact on the user?\nSundial time is a geographically and seasonally localised time. It also includes a distinction between day and night. The night is ‘out of time’. This distinction has been extradited from linear time practices, where the amount of light is just a variable external to steady beat of time. Linear time allows to turn the night into economically productive time. Running your computer on sundial time re-introduces the night in your system.\n\nAn intervention to introduce sundial time in your computer is possible in the whole range of places we discussed where time gets negotiated. The most fundamental but also most difficult route would be to exchange the clock with something reflecting a more natural rhythm. However, as we have seen that this clock has become only a back up tool and that the actual system time is always renegotiated with other systems connected through the network, another renegotiation process can be introduced. Therefore, the most easy way to introduce sundial time would be to reconfigure the timesyncdor ntp processes and make them listen to an alternative sundial time server. Such sundial time server can be built in different ways. A hardware version can be made of a sundial combined with light sensors, measuring the location of the shadow through the difference in light and deriving the sundial time from this location. This would link the time server to the actual earthly day and night cycle. A simulated version could be a local piece of software which looks up the timing of sunrise and sunset at the specific location and day. Based on this information it recalculates the local sundial time, which it provides through the NTP protocol. The local computer receives this sundial time from the nearest sundial time server and continuously adapts its system time, as it does now already based on UTC. Further, it can be programmed to go into sleep modus during the night and to wake up only when a sunrise signal is received from the time server.\n\nLetting a computer run on sundial time is a conscious effort to disconnect it from human-made linear time and to reconnect it with the old earth-driven cycles and the ancient time experience by humans. The unified time of UTC and the time zones gets broken up into extremely localised time servers, while also the difference between day and night gets introduced into the functioning of the computer. \nThis re-enactment of such cycles through the computer will remind human users that the experience of time is a socially negotiated and technically implemented experience. Further, a computer running on sundial time would be a great piece of nannyware nudging the user to live in harmony with his natural environment and a synchronisation tool to re-establish the link between the users bio-rhythm and the earthly day and night cycle. It would also be a great reminder why humans tried in the first place to escape from these earthly rhythms through technology and started hacking time.\n\nHans Lammerant, January 2018\n\n% NOTE: -\n This text was written in and in resistance/conflict to WTC time, which is exemplary for the bureaucratic office time experience. The WTC building boots up at 9AM and is turned off in several steps (at 5PM the air conditioning is turned off, later entrances close) into a wake state. The concierge can let you in and out through the night side entry, but main life support systems remain turned off outside office hours. This wake state continues during the weekend, turning the building into a glass house with limited air in storage. On Monday morning this bureaucratic time capsule revives from its slumber. A suffocating experience, but actually the building is a great piece of nannyware nudging towards a healthy office rhythm without too much extra hours outside the herd work ethic.\n\nSuch office time can also be implemented and negotiated on your local computer. A small Proof of Concept was the adapted bashrc on the etherbox simulating a system getting bored and stealing time. This can be further developed by including a differentiated response during versus outside office hours, aging (slower when timestamp of original install is more remote in time), etc.\n\n","attribs":"*5+1|1+e*0|1+1*5+9*0|3+ad*0+94*9+b*0|2+3u*0+1a*9+2*0+11*9+2*0+1q*9+55*0|1+1*9+3*0|1+91*0+3o*9|1+jh*0|1+1*0+8w*9+1*0+2e*9+1*0+6j*9+1*0+64*9+1*0+4b*9+a*0+8*9+1*0+3c*9+2*0+3n*9+2*0|1+5a*0+5i*9+1*0+g*9+1*0+3l*9+1*0|2+4n*0+6*9+5*0+1i*9+1*0+2k*9+3q*0+2p*9+g*0+3a*9+4*0+1*9+5*0|1+1a*0+r*9+1*0+3d*9+1h*0|4+tx*9+d*0+1f*9+2*0|5+1jy*0+8c*0*2+i*0+6*0*2+b*0+2u*0*2+9*0+3q*0*2+3*0|i+4hp*0+80*5|1+1*0|1+1*5|2+l+17*5|1+1+15*0|1+1+18*5|1+1+18*0|1+1*5|2+c*0|7+xy*0+g5*0*2+9*0+3*0*2+3*0|7+1ip*6+2*6*7*8+4*6|1+4*0|3+wl|1+1"}}},"pad:observatory.guide.experiencingtime:revs:501":{"changeset":"Z:fkl>1|j=4sz=1u*9+1$e","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424728525}},"pad:observatory.guide.experiencingtime:revs:502":{"changeset":"Z:fkm>1|n=61j=2y*9+1$,","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424817494}},"pad:observatory.guide.experiencingtime:revs:503":{"changeset":"Z:fkn<1|o=6et=n-1$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424829205}},"pad:observatory.guide.experiencingtime:revs:504":{"changeset":"Z:fkm>1|o=6et=n*9+1$I","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424829704}},"pad:observatory.guide.experiencingtime:revs:505":{"changeset":"Z:fkn>1|o=6et=1c*9+1$t","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424834805}},"pad:observatory.guide.experiencingtime:revs:506":{"changeset":"Z:fko<1|o=6et=29-1$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424839206}},"pad:observatory.guide.experiencingtime:revs:507":{"changeset":"Z:fkn>1|o=6et=29*9+1$z","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424839701}},"pad:observatory.guide.experiencingtime:revs:508":{"changeset":"Z:fko<1|o=6et=38-1$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424847056}},"pad:observatory.guide.experiencingtime:revs:509":{"changeset":"Z:fkn<1|o=6et=37-1$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424847549}},"pad:observatory.guide.experiencingtime:revs:51":{"changeset":"Z:f1q>1|18=b5m*5+1$%","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1518020902901}},"pad:observatory.guide.experiencingtime:revs:510":{"changeset":"Z:fkm>2|o=6et=37*9+2$ed","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424896256}},"pad:observatory.guide.experiencingtime:revs:511":{"changeset":"Z:fko<1|q=6wi=7f-1$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424946301}},"pad:observatory.guide.experiencingtime:revs:512":{"changeset":"Z:fkn>1|q=6wi=7f*9+1$z","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519424946797}},"pad:observatory.guide.experiencingtime:revs:513":{"changeset":"Z:fko>1|r=75b=2s*9+1$ ","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425000129}},"pad:observatory.guide.experiencingtime:revs:514":{"changeset":"Z:fkp>1|r=75b=2t*9+1$(","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425000671}},"pad:observatory.guide.experiencingtime:revs:515":{"changeset":"Z:fkq<1|r=75b=2t-1$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425001711}},"pad:observatory.guide.experiencingtime:revs:516":{"changeset":"Z:fkp>c|r=75b=2t-1*9+d$(%CARLINSAYS:","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425002214}},"pad:observatory.guide.experiencingtime:revs:517":{"changeset":"Z:fl1>1|r=75b=36*9+1$ ","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425003060}},"pad:observatory.guide.experiencingtime:revs:518":{"changeset":"Z:fl2>2|r=75b=37*9+2$th","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425008342}},"pad:observatory.guide.experiencingtime:revs:519":{"changeset":"Z:fl4>5|r=75b=39*9+5$e pro","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425008832}},"pad:observatory.guide.experiencingtime:revs:52":{"changeset":"Z:f1r>1|18=b5m=1*5+1$ ","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1518020903400}},"pad:observatory.guide.experiencingtime:revs:520":{"changeset":"Z:fl9>2|r=75b=3e*9+2$ce","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425009334}},"pad:observatory.guide.experiencingtime:revs:521":{"changeset":"Z:flb>3|r=75b=3g*9+3$sse","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425009836}},"pad:observatory.guide.experiencingtime:revs:522":{"changeset":"Z:fle<1|r=75b=3i-1$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425010539}},"pad:observatory.guide.experiencingtime:revs:523":{"changeset":"Z:fld<5|r=75b=3d-5$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425011032}},"pad:observatory.guide.experiencingtime:revs:524":{"changeset":"Z:fl8<3|r=75b=3a-3$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425011534}},"pad:observatory.guide.experiencingtime:revs:525":{"changeset":"Z:fl5>3|r=75b=3a*9+3$y r","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425012036}},"pad:observatory.guide.experiencingtime:revs:526":{"changeset":"Z:fl8>4|r=75b=3d*9+4$efer","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425012536}},"pad:observatory.guide.experiencingtime:revs:527":{"changeset":"Z:flc>4|r=75b=3h*9+4$s to","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425013036}},"pad:observatory.guide.experiencingtime:revs:528":{"changeset":"Z:flg>7|r=75b=3l*9+7$ the pr","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425013537}},"pad:observatory.guide.experiencingtime:revs:529":{"changeset":"Z:fln>3|r=75b=3s*9+3$oce","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425014037}},"pad:observatory.guide.experiencingtime:revs:53":{"changeset":"Z:f1s>2|18=b5m=2*5+2$SR","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1518020903931}},"pad:observatory.guide.experiencingtime:revs:530":{"changeset":"Z:flq>3|r=75b=3v*9+3$sse","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425014537}},"pad:observatory.guide.experiencingtime:revs:531":{"changeset":"Z:flt>1|r=75b=3y*9+1$s","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425015038}},"pad:observatory.guide.experiencingtime:revs:532":{"changeset":"Z:flu>2|r=75b=3z*9+2$? ","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425015540}},"pad:observatory.guide.experiencingtime:revs:533":{"changeset":"Z:flw>2|r=75b=41*9+2$or","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425017277}},"pad:observatory.guide.experiencingtime:revs:534":{"changeset":"Z:fly>3|r=75b=43*9+3$ an","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425017758}},"pad:observatory.guide.experiencingtime:revs:535":{"changeset":"Z:fm1>6|r=75b=46*9+6$y comp","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425018263}},"pad:observatory.guide.experiencingtime:revs:536":{"changeset":"Z:fm7>4|r=75b=4c*9+4$uter","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425018764}},"pad:observatory.guide.experiencingtime:revs:537":{"changeset":"Z:fmb>1|r=75b=4g*9+1$?","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425021542}},"pad:observatory.guide.experiencingtime:revs:538":{"changeset":"Z:fmc<1|r=75b=4g-1$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425023104}},"pad:observatory.guide.experiencingtime:revs:539":{"changeset":"Z:fmb<1|r=75b=4f-1$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425023601}},"pad:observatory.guide.experiencingtime:revs:54":{"changeset":"Z:f1u>1|18=b5m=4*5+1$C","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1518020904434}},"pad:observatory.guide.experiencingtime:revs:540":{"changeset":"Z:fma<5|r=75b=4a-5$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425024104}},"pad:observatory.guide.experiencingtime:revs:541":{"changeset":"Z:fm5<1|r=75b=49-1$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425024607}},"pad:observatory.guide.experiencingtime:revs:542":{"changeset":"Z:fm4<1|r=75b=48-1$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425025108}},"pad:observatory.guide.experiencingtime:revs:543":{"changeset":"Z:fm3<1|r=75b=47-1$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425025609}},"pad:observatory.guide.experiencingtime:revs:544":{"changeset":"Z:fm2<2|r=75b=45-2$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425026108}},"pad:observatory.guide.experiencingtime:revs:545":{"changeset":"Z:fm0<1|r=75b=44-1$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425033442}},"pad:observatory.guide.experiencingtime:revs:546":{"changeset":"Z:flz<1|r=75b=43-1$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425033941}},"pad:observatory.guide.experiencingtime:revs:547":{"changeset":"Z:fly<4|r=75b=3z-4$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425034442}},"pad:observatory.guide.experiencingtime:revs:548":{"changeset":"Z:flu<6|r=75b=3t-6$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425034939}},"pad:observatory.guide.experiencingtime:revs:549":{"changeset":"Z:flo<2|r=75b=3r-2$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425035443}},"pad:observatory.guide.experiencingtime:revs:55":{"changeset":"Z:f1v>3|18=b5m=5*5+3$COD","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1518020904930}},"pad:observatory.guide.experiencingtime:revs:550":{"changeset":"Z:flm>1|r=75b=3r*9+1$o","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425035955}},"pad:observatory.guide.experiencingtime:revs:551":{"changeset":"Z:fln>2|r=75b=3r-1*9+3$roc","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425036457}},"pad:observatory.guide.experiencingtime:revs:552":{"changeset":"Z:flp>4|r=75b=3u*9+4$esse","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425036955}},"pad:observatory.guide.experiencingtime:revs:553":{"changeset":"Z:flt>2|r=75b=3y*9+2$s?","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425037457}},"pad:observatory.guide.experiencingtime:revs:554":{"changeset":"Z:flv>2|r=75b=40*9+2$ i","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425037966}},"pad:observatory.guide.experiencingtime:revs:555":{"changeset":"Z:flx>5|r=75b=42*9+5$f not","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425038470}},"pad:observatory.guide.experiencingtime:revs:556":{"changeset":"Z:fm2>7|r=75b=47*9+7$ then c","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425038974}},"pad:observatory.guide.experiencingtime:revs:557":{"changeset":"Z:fm9>1|r=75b=4e*9+1$a","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425039477}},"pad:observatory.guide.experiencingtime:revs:558":{"changeset":"Z:fma>1|r=75b=4e-1*9+2$la","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425039980}},"pad:observatory.guide.experiencingtime:revs:559":{"changeset":"Z:fmb>3|r=75b=4g*9+3$rif","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425040480}},"pad:observatory.guide.experiencingtime:revs:56":{"changeset":"Z:f1y>1|18=b5m=8*5+1$E","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1518020905538}},"pad:observatory.guide.experiencingtime:revs:560":{"changeset":"Z:fme>2|r=75b=4j*9+2$y)","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425040980}},"pad:observatory.guide.experiencingtime:revs:561":{"changeset":"Z:fmg>1|r=75b=4l*9+1$ ","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425041483}},"pad:observatory.guide.experiencingtime:revs:562":{"changeset":"Z:fmh>1|v=89z=1o*9+1$ ","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425101980}},"pad:observatory.guide.experiencingtime:revs:563":{"changeset":"Z:fmi>c|v=89z=1p-1*9+d$(%CARLINSAYS:","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425102496}},"pad:observatory.guide.experiencingtime:revs:564":{"changeset":"Z:fmu>1|v=89z=22*9+1$ ","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425103955}},"pad:observatory.guide.experiencingtime:revs:565":{"changeset":"Z:fmv>1|v=89z=23*9+1$b","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425106855}},"pad:observatory.guide.experiencingtime:revs:566":{"changeset":"Z:fmw>3|v=89z=24*9+3$ett","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425107353}},"pad:observatory.guide.experiencingtime:revs:567":{"changeset":"Z:fmz>2|v=89z=27*9+2$er","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425108127}},"pad:observatory.guide.experiencingtime:revs:568":{"changeset":"Z:fn1>1|v=89z=29*9+1$ ","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425108625}},"pad:observatory.guide.experiencingtime:revs:569":{"changeset":"Z:fn2>2|v=89z=2a*9+2$is","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425109250}},"pad:observatory.guide.experiencingtime:revs:57":{"changeset":"Z:f1z>1|18=b5m=9*5+1$:","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1518020906308}},"pad:observatory.guide.experiencingtime:revs:570":{"changeset":"Z:fn4>4|v=89z=2c*9+4$ mea","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425109750}},"pad:observatory.guide.experiencingtime:revs:571":{"changeset":"Z:fn8>4|v=89z=2g*9+4$nt t","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425110254}},"pad:observatory.guide.experiencingtime:revs:572":{"changeset":"Z:fnc>7|v=89z=2k*9+7$o mean ","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425110773}},"pad:observatory.guide.experiencingtime:revs:573":{"changeset":"Z:fnj>4|v=89z=2r*9+4$it i","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425111273}},"pad:observatory.guide.experiencingtime:revs:574":{"changeset":"Z:fnn>2|v=89z=2v*9+2$s ","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425111772}},"pad:observatory.guide.experiencingtime:revs:575":{"changeset":"Z:fnp>3|v=89z=2x*9+3$a b","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425112281}},"pad:observatory.guide.experiencingtime:revs:576":{"changeset":"Z:fns>2|v=89z=30*9+2$et","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425112777}},"pad:observatory.guide.experiencingtime:revs:577":{"changeset":"Z:fnu>4|v=89z=32*9+4$ter ","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425113271}},"pad:observatory.guide.experiencingtime:revs:578":{"changeset":"Z:fny>5|v=89z=36*9+5$examp","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425113774}},"pad:observatory.guide.experiencingtime:revs:579":{"changeset":"Z:fo3>3|v=89z=3b*9+3$le?","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425114274}},"pad:observatory.guide.experiencingtime:revs:58":{"changeset":"Z:f20>1|18=b5m=a*5+1$ ","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1518020906808}},"pad:observatory.guide.experiencingtime:revs:580":{"changeset":"Z:fo6>3|v=89z=3e*9+3$ if","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425114775}},"pad:observatory.guide.experiencingtime:revs:581":{"changeset":"Z:fo9>1|v=89z=3h*9+1$ ","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425115274}},"pad:observatory.guide.experiencingtime:revs:582":{"changeset":"Z:foa>2|v=89z=3i*9+2$so","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425115785}},"pad:observatory.guide.experiencingtime:revs:583":{"changeset":"Z:foc>1|v=89z=3k*9+1$ ","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425116283}},"pad:observatory.guide.experiencingtime:revs:584":{"changeset":"Z:fod>3|v=89z=3l*9+3$cut","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425116785}},"pad:observatory.guide.experiencingtime:revs:585":{"changeset":"Z:fog>5|v=89z=3o*9+5$ the ","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425117285}},"pad:observatory.guide.experiencingtime:revs:586":{"changeset":"Z:fol>3|v=89z=3t*9+3$wor","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425117783}},"pad:observatory.guide.experiencingtime:revs:587":{"changeset":"Z:foo>2|v=89z=3w*9+2$d.","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425118284}},"pad:observatory.guide.experiencingtime:revs:588":{"changeset":"Z:foq>1|v=89z=3y*9+1$ ","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425118783}},"pad:observatory.guide.experiencingtime:revs:589":{"changeset":"Z:for<1|v=89z=3y-1$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425119957}},"pad:observatory.guide.experiencingtime:revs:59":{"changeset":"Z:f21<1|17=b38=a-1$","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1518025908864}},"pad:observatory.guide.experiencingtime:revs:590":{"changeset":"Z:foq>1|v=89z=3y*9+1$_","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425120720}},"pad:observatory.guide.experiencingtime:revs:591":{"changeset":"Z:for<1|v=89z=3y-1$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425121222}},"pad:observatory.guide.experiencingtime:revs:592":{"changeset":"Z:foq>1|v=89z=3y*9+1$)","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425121724}},"pad:observatory.guide.experiencingtime:revs:593":{"changeset":"Z:for>1|v=89z=3z*9+1$ ","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425122230}},"pad:observatory.guide.experiencingtime:revs:594":{"changeset":"Z:fos<1|w=8p1=3r-1$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425159717}},"pad:observatory.guide.experiencingtime:revs:595":{"changeset":"Z:for<1|x=90n=4g-1$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425180961}},"pad:observatory.guide.experiencingtime:revs:596":{"changeset":"Z:foq>1|x=90n=4g*9+1$z","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425181466}},"pad:observatory.guide.experiencingtime:revs:597":{"changeset":"Z:for>1|11=a3k=88*9+1$ ","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425232373}},"pad:observatory.guide.experiencingtime:revs:598":{"changeset":"Z:fos>5|11=a3k=89*9+5$to bo","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425232858}},"pad:observatory.guide.experiencingtime:revs:599":{"changeset":"Z:fox>2|11=a3k=8e*9+2$th","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425233359}},"pad:observatory.guide.experiencingtime:revs:6":{"changeset":"Z:f1d>1|2=1e*0+1$#","meta":{"author":"a.I4FbrrCTDQNN8GIf","timestamp":1517420622018}},"pad:observatory.guide.experiencingtime:revs:60":{"changeset":"Z:f20<3|17=b38=7-3$","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1518025909402}},"pad:observatory.guide.experiencingtime:revs:600":{"changeset":"Z:foz>2|11=a3k=81*9+2$ w","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425247651,"atext":{"text":"%__NOPUBLISH__\n\n% HEADER: How humans and machines negotiate the experience of time\n\nThe experience of time is an essential element of any form of experience or cognition. Emotions depend to a large extent on expectations, or the potential coming of a future event. Any observing or experience of difference, of presence related to an earlier or later absence, is linked with an experience of time.\nHowever, how the actual experience of time is shaped is strongly influenced by all sort of design decisions and implementations, both for humans and machines. Also, the experience of time is a conglomerate of different experiences: time as a common moment, the duration of a certain time, time as cyclic events, historical time, and so on. Researching how humans and machines experience time and negotiate their time experiences is therefore an interesting avenue to explore.\n\nHumans have developed a time experience which was linked to natural life cycles, but it has been influenced by both technology and social conditions.(%CARLINSAYS: suggested rewording: \"Humans have developed a time experience that is linked to natural life cycles but that is also influenced by both technology and social conditions.\")\nThe first time cycle is the day-night time cycle. Humans do their stuff during the day, but need to sleep. The night is generally the preferred time for sleep, but the availability of artificial light and the need for longer-distance coordination has influenced how humans deal with the day cycle and the place for sleep in it.\nTime measurement also developed: early time measurement was linked to observation of natural circumstances like sunrise and sunset. (%CARLINSAYS: I suggest cutting \"Time measurement also developed\" and starting with\"Early time measurement was linked to the day-night cycle through observation of natural circumstances like sunrise and sunset.\") Measurement of such sun cycles (which is in fact an earth cycle) through sundials allowed for more precise time referencing, but it is very place and season dependent. More light during summer than winter implied that hours were longer in summer than in winter. Similarly such changes were greater at higher latitudes, while near the equator such changes are limited. In other words, time measured by sundials provided a local common reference of time, but not one over longer distances.\n\nThis seasonal time experience when the human world was flat reflects the unknown spherical geometry of the earth cycle projected on the flat earth. When humans became aware of earth as a sphere, they responded by flattening and linearising time. Mechanical clocks allowed to unify time lengths and thereby also standardize time. Physical observation and all sorts of economic processes needed such standardized time measurement. Early versions of such time measurement, like hourglasses, existed but remained disconnected from day time measurement. Mechanical clocks allowed to unify different time cycles and scales. It also allowed standardization of time over longer distances, departing from the local sundial time to time zones, which were less strictly linked to the seasonal rhythm of the sun but more to geographical zones. Long distance trade, industrialization and later long-distance communication by electro-magnetic signals (comparable to the speed of light) demanded more geographical coordination. In the nineteenth century, coordination developed through clock networks, with a master clock driving the slave clocks. Nowadays we work with atomic clocks and a global Coordinated Universal Time or UTC as a reference to which geographical time zones are connected. Humans organize their activities accordingly, if necessary by de-linking from the solar rhythm. The borders of time zones diverge very often from the longitudinal lines for economic and political reasons.\nA similar socialisation and globalisation of time occurred for computers. Where in the early computer age time was set and counted locally by each machine, it is now common to continuously synchronize time over the Internet through time servers and the Network Time Protocol. Humans get woken, cron jobs get triggered, precision bombs get guided, and trains count their delays in measure with the drill signal of the Master Clock of the US Naval Observatory, only differing by tiny variations in latency times. \n\nHumans have also developed ways to relate to time on longer scales, which were originally linked to natural rhythms: years, life cycles. Calendar systems were (%CARLINSAYS: \"are used\"? the tense of verbs and the use of the passive voice in this make certain sentences read a little strangely) used to determine seasonal agricultural needs (when to plant, when to harvest), while they also made it possible to keep track of life cycles and historical time. Again, such calendar systems have been very diverse and local, but have been slowly fused to a couple of dominant models. \nGenerational or birth, life, and death rhythms, originating from the human experience, have been projected on all sorts of phenomena. Religions tried (%CARLINSAYS: \"try\" or \"tried and continue to try\") to explain the origin of everything, while also often predicting the end in apocalyptic visions. The demise of religion at the hand of science did not let such generational visions disappear. They got new expressions in scientific theories of the beginning (big bang, evolution) and end (the heath death of the universe, the end of the earth at the final burnout phase of the sun) of everything. Similar apocalyptic visions are now embedded through technological design decisions (Y2K, the end of Unix-time in 2038). In all versions the end is often linked to the specific design of time (e.g. the end of the Maya calendar, millenarian movements). But just like religious visions can extend their apocalypse in a new versions (e.g. the always near but always delayed apocalypse of the Saints of the last days), machinic accounts of time can always be extended by enlarging the bit size of the time range (cfr the extension of Unix time till AD 292277026596, or safely after the end of the observable universe according to contemporary physics).\n\n## The time(s) of the machine\n\nMachines also have their natural cycle: the vibrating pulses of the internal crystal clock drives the cycles according to which the processor works. All PCs have such a Real Time Clock (RTC), independent of the processor. The time of the computer is linked to this clock cycle, as it consists in counting cyclical ticks. This produces a single cyclical, and completely linear, time rhythm in the hardware. In contrast to the earthly or natural cycles it is without any seasonal difference or interference between several cycles. This makes a computer into a monadic time capsule, disconnected from the outside rhythms.\nThe time experience in the software is in principle based on this local time cycle. However, once computers and software gets linked and networked, they have to negotiate and synchronize their times.\nTo start, time in a computer is no unique or unified experience. Several hardware components and a diverse collection of software organised in layers and processes create a whole ecology of interdependent time experiences. The operating system experiences other software components, and users through them, as a bunch of processes screaming for attention. One of the most pushy interrupts is the timer forcing the processor to count another click and update the system time. An internal kernel process performs the negotiation of time through which the clock count is linked with a system time. \nThis starts already during the booting process, when the operating system is determining the clock signal frequency. PCs have another time-measuring device, the Programmable Interval Timer\n(PIT), which can be set by the processor at a defined frequency. During a short time indicated by this PIT, the clock cycles of the RTC get counted and the frequency of the RTC gets calculated. Several other timing devices are present in the hardware, synchronized by kernel processes into a range of times available for the operating system and the processes. As said, one of these times is available as system time and gets communicated to all other processes when demanded. \nWith the advent of the Internet computers are not monads anymore, but are socialized in the common rhythm broadcasted with the Network Time Protocol. The local system time serves as back up, but gets continuously adapted to the network time. On a Ubuntu/Debian machine these times can be checked with timedatectl status. The timedatectl command enables to change these synchronisation processes. The actual synchronisation is done by the timesyncd process and the time servers to be used can be set in the /etc/systemd/timesyncd.conf file. Other Linux flavours work with the older ntp process which can be configured in /etc/ntp.conf. \n\nThe actual process time is completely different from this system time. Most of the time processes are put on hold and when the scheduler gives them time they can proceed till the next on hold is forced to make time for another process. The scheduler is the big organizer of time in the internal ecology of processes.\nSystem time is externally counted and therefore an external global variable to these processes. They (%CARLINSAYS: they refers to the processes? if not then clarify) can all send a demand to the kernel to get the system time. This gets communicated through the software stack with a range of system calls of the kernel and through the specific time modules of the programming language the software is programmed in.\nThe difference between the actual process time and system time does not appear in how time is perceived by the process. The process only perceives time as the difference between two demands of system time and is oblivious of its time being put on hold. The processor on the other hand spent most of its processing time as idle time: a processor is doing time waiting for slow system components like memory and even slower hard drives and network connections to respond and switches between checking for responses of these laggards. L’enfer du temps perdu, ce sont les autres.\n\nConnecting computers into a network demands new negotiations of time. We already mentioned the networked and globalised UTC timekeeping. But temporal negotiations happen on all levels of the system. Network protocols have timed choreographies to make connections and proceed with communications, with time out failsafes to break off when something goes wrong. The timing of an action is an essential component making the difference between a meaningful signal and noise.\nUsing a browser over http to connect to a website, or better (%CARLINSAYS: better is meant to mean it is a better example? if so cut the word.) the server providing the website on your request, is built on a discontinuous time practice. In a REST architecture the server just deals with a queue of requests and does not see continuity over time between certain requests from a single user.  New temporal practices have been designed and technically implemented. Through cookies the server is able to recognise users and their state in time. \nThe border between your computer and servers on the internet becomes fuzzy when external software is dropped on your computer and runs in your webbrowser. Javascript modules get dropped on your computer and can start performing tasks on demand of an external server, be it rendering a graph or mining digital money. Similarly, the browser becomes a border where time gets negotiated through synchronisation processes.\nWhat time exactly is depends on the task at hand. Each tool contains its specific temporal practices, dependent on the speed and subject matter of the synchronization process needed.\nFor example, for collaborative document editing tools like Google Docs or Etherpad it is a sequence of versions of the document. A range of strategies have been developed to allow to synchronize the changes made by different users with the least amount of conflict. \nThe Easysync-protocol used by Etherpad constructs a document from changesets. A changeset details the edits made by a user or the difference with the former local version of the text. In other words, the flow of time is represented through a series of changesets which can be summed to the present state. The server keeps a sequence of acknowledged changesets. These acknowledged changesets represent the current common state and get communicated to all clients. \nLocally each client builds its present state by summing up the acknowledged changesets received from the server, and with the local changesets which are not yet acknowledged. Each client communicates its local changesets, every 500 ms after the latest acknowledgment.  As this changeset can be relative to an earlier version the server first recalculates a changeset relative to the current version. Then it sends an acknowledgment to the sender and the changeset to the other clients. \nDifferent collaborative document editing tools use different methods to deal with conflicts, which also are dependent on the purpose or content of the document. Conflicts between numeric edits in a collaborative spreadsheet are dealt with differently than conflicts between text edits. But w common to both is that the present gets continuously constructed on the server and on the clients and negotiated through the specific protocol. The user can always access its local copy of the text and create its local present, but it gets negotiated with the server to create a common present. \nAnd every tool rings also its own disasters and apocalyptic experiences through the collapse of the negotiation process and thereby of the common state.\n\nThis negotiation of time is in the first place a negotiation of the present. But also what is past and future gets constructed in this present. The ordered sequence connected to the system time(s) already imply such a past and future. But the construction of a past consists also of a negotiation of what remains and what gets forgotten. Data gets stored in memory or written to storage devices, while the operating systems assigns time stamps to these traces of the present becoming past and writes other traces to a range of log files. \nAs writers trying to capture their stream of consciousness already experienced, it is impossible to completely store the present for future use as past. There will always be a remainder that escapes and can not be written down. Also an operating systems can not keep a log of all its operations without getting stuck in an infinite regress in which it tries to log its logging operations. What will be the past for a future present needs to be constructed and selected. Everything else gets forgotten.\nLinux stores its logs in /var/log, while all sorts of programs can create their own logs. All these logs are specific histories, for example of what programs got installed. To get an idea of your past on a Linux system in the file system, you can collect the timestamps of all files with:\n\n% -----------------\n\nos.system(\"ls -R -l --time-style=long-iso \\\n           > modlistsystem-long-iso.txt\")\nos.system(\"ls -R -lu --time-style=long-iso \\\n           > accesslistsystem-long-iso.txt\")\n\n% SRCCODE:\n\n## Renegotiating time with your computer: sundial network time.\n\nTechnology has been a tool through which humans created distance with natural cycles and designed its own time experiences. This means we can critically intervene in the functioning of the technology and develop alternative time practices and experiences. As an example we put forward as a not-yet-existing-proof of concept the possibility to let the computer work according to sundial time.\nIs it possible to reconfigure the time of the computer and rewire the connections with human and natural rhythms? Would we be able to let the computer function in an older human time experience, e.g. the time of the sundial? How can such sundial experience be built into the system and what would be the impact on the user?\nSundial time is a geographically and seasonally localised time. It also includes a distinction between day and night. The night is ‘out of time’. This distinction has been extradited from linear time practices, where the amount of light is just a variable external to steady beat of time. Linear time allows to turn the night into economically productive time. Running your computer on sundial time re-introduces the night in your system.\n\nAn intervention to introduce sundial time in your computer is possible in the whole range of places we discussed where time gets negotiated. The most fundamental but also most difficult route would be to exchange the clock with something reflecting a more natural rhythm. However, as we have seen that this clock has become only a back up tool and that the actual system time is always renegotiated with other systems connected through the network, another renegotiation process can be introduced. Therefore, the most easy way to introduce sundial time would be to reconfigure the timesyncdor ntp processes and make them listen to an alternative sundial time server. Such sundial time server can be built in different ways. A hardware version can be made of a sundial combined with light sensors, measuring the location of the shadow through the difference in light and deriving the sundial time from this location. This would link the time server to the actual earthly day and night cycle. A simulated version could be a local piece of software which looks up the timing of sunrise and sunset at the specific location and day. Based on this information it recalculates the local sundial time, which it provides through the NTP protocol. The local computer receives this sundial time from the nearest sundial time server and continuously adapts its system time, as it does now already based on UTC. Further, it can be programmed to go into sleep modus during the night and to wake up only when a sunrise signal is received from the time server.\n\nLetting a computer run on sundial time is a conscious effort to disconnect it from human-made linear time and to reconnect it with the old earth-driven cycles and the ancient time experience by humans. The unified time of UTC and the time zones gets broken up into extremely localised time servers, while also the difference between day and night gets introduced into the functioning of the computer. \nThis re-enactment of such cycles through the computer will remind human users that the experience of time is a socially negotiated and technically implemented experience. Further, a computer running on sundial time would be a great piece of nannyware nudging the user to live in harmony with his natural environment and a synchronisation tool to re-establish the link between the users bio-rhythm and the earthly day and night cycle. It would also be a great reminder why humans tried in the first place to escape from these earthly rhythms through technology and started hacking time.\n\nHans Lammerant, January 2018\n\n% NOTE: -\n This text was written in and in resistance/conflict to WTC time, which is exemplary for the bureaucratic office time experience. The WTC building boots up at 9AM and is turned off in several steps (at 5PM the air conditioning is turned off, later entrances close) into a wake state. The concierge can let you in and out through the night side entry, but main life support systems remain turned off outside office hours. This wake state continues during the weekend, turning the building into a glass house with limited air in storage. On Monday morning this bureaucratic time capsule revives from its slumber. A suffocating experience, but actually the building is a great piece of nannyware nudging towards a healthy office rhythm without too much extra hours outside the herd work ethic.\n\nSuch office time can also be implemented and negotiated on your local computer. A small Proof of Concept was the adapted bashrc on the etherbox simulating a system getting bored and stealing time. This can be further developed by including a differentiated response during versus outside office hours, aging (slower when timestamp of original install is more remote in time), etc.\n\n","attribs":"*5+1|1+e*0|1+1*5+9*0|3+ad*0+94*9+b*0|2+3u*0+1a*9+2*0+11*9+2*0+1q*9+55*0|1+1*9+3*0|1+91*0+3o*9|1+jh*0|1+1*0+8w*9+1*0+2e*9+1*0+6j*9+1*0+64*9+1*0+4b*9+a*0+8*9+1*0+3c*9+2*0+3n*9+2*0|1+5a*0+5i*9+1*0+g*9+1*0+3l*9+1*0|2+4n*0+6*9+5*0+1i*9+1*0+2k*9+3q*0+2p*9+g*0+3a*9+4*0+1*9+5*0|1+1a*0+r*9+1*0+3d*9+1h*0|4+tx*9+d*0+1f*9+3*0|4+16p*0+2y*9+1*0|1+ab*0+n*9+1*0+o*9+1*0+w*9+1*0+x*9+2*0+54*0*2+i*0+6*0*2+b*0+2u*0*2+9*0+3q*0*2+3*0|2+1h*0+7f*9+1*0|1+1d*0+2s*9+1u*0|4+102*0+1o*9+2c*0|2+mo*0+4g*9+1*0|4+yg*0+81*9+2*0+7*9+8*0|5+151*0+80*5|1+1*0|1+1*5|2+l+17*5|1+1+15*0|1+1+18*5|1+1+18*0|1+1*5|2+c*0|7+xy*0+g5*0*2+9*0+3*0*2+3*0|7+1ip*6+2*6*7*8+4*6|1+4*0|3+wl|1+1"}}},"pad:observatory.guide.experiencingtime:revs:601":{"changeset":"Z:fp1>6|11=a3k=83*9+6$hat is","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425248160}},"pad:observatory.guide.experiencingtime:revs:602":{"changeset":"Z:fp7>d|11=a3k=gh*9+d$(%CARLINSAYS:","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425271383}},"pad:observatory.guide.experiencingtime:revs:603":{"changeset":"Z:fpk>2|11=a3k=gu*9+2$Th","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425271977}},"pad:observatory.guide.experiencingtime:revs:604":{"changeset":"Z:fpm>4|11=a3k=gw*9+4$ese ","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425272483}},"pad:observatory.guide.experiencingtime:revs:605":{"changeset":"Z:fpq>2|11=a3k=h0*9+2$la","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425272982}},"pad:observatory.guide.experiencingtime:revs:606":{"changeset":"Z:fps>3|11=a3k=h2*9+3$st ","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425273490}},"pad:observatory.guide.experiencingtime:revs:607":{"changeset":"Z:fpv>6|11=a3k=h5*9+6$two se","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425274000}},"pad:observatory.guide.experiencingtime:revs:608":{"changeset":"Z:fq1>2|11=a3k=hb*9+2$nt","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425274500}},"pad:observatory.guide.experiencingtime:revs:609":{"changeset":"Z:fq3>4|11=a3k=hd*9+4$ence","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425274999}},"pad:observatory.guide.experiencingtime:revs:61":{"changeset":"Z:f1x<4|17=b38=3-4$","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1518025909927}},"pad:observatory.guide.experiencingtime:revs:610":{"changeset":"Z:fq7>4|11=a3k=hh*9+4$s se","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425275499}},"pad:observatory.guide.experiencingtime:revs:611":{"changeset":"Z:fqb>2|11=a3k=hl*9+2$em","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425276002}},"pad:observatory.guide.experiencingtime:revs:612":{"changeset":"Z:fqd>1|11=a3k=hn*9+1$ ","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425276503}},"pad:observatory.guide.experiencingtime:revs:613":{"changeset":"Z:fqe<3|11=a3k=hl-3$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425277005}},"pad:observatory.guide.experiencingtime:revs:614":{"changeset":"Z:fqb<2|11=a3k=hj-2$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425277507}},"pad:observatory.guide.experiencingtime:revs:615":{"changeset":"Z:fq9>6|11=a3k=hj*9+6$are ke","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425278006}},"pad:observatory.guide.experiencingtime:revs:616":{"changeset":"Z:fqf>3|11=a3k=hp*9+3$y a","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425278515}},"pad:observatory.guide.experiencingtime:revs:617":{"changeset":"Z:fqi>6|11=a3k=hs*9+6$nd cou","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425279016}},"pad:observatory.guide.experiencingtime:revs:618":{"changeset":"Z:fqo>4|11=a3k=hy*9+4$ld b","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425279515}},"pad:observatory.guide.experiencingtime:revs:619":{"changeset":"Z:fqs>3|11=a3k=i2*9+3$e s","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425280015}},"pad:observatory.guide.experiencingtime:revs:62":{"changeset":"Z:f1t<2|17=b38=1-2$","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1518025910472}},"pad:observatory.guide.experiencingtime:revs:620":{"changeset":"Z:fqv>3|11=a3k=i5*9+3$har","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425280517}},"pad:observatory.guide.experiencingtime:revs:621":{"changeset":"Z:fqy>2|11=a3k=i8*9+2$pe","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425281122}},"pad:observatory.guide.experiencingtime:revs:622":{"changeset":"Z:fr0>1|11=a3k=ia*9+1$r","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425281624}},"pad:observatory.guide.experiencingtime:revs:623":{"changeset":"Z:fr1<4|11=a3k=i7-4$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425282135}},"pad:observatory.guide.experiencingtime:revs:624":{"changeset":"Z:fqx<2|11=a3k=i5-2$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425282634}},"pad:observatory.guide.experiencingtime:revs:625":{"changeset":"Z:fqv<1|11=a3k=i4-1$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425283136}},"pad:observatory.guide.experiencingtime:revs:626":{"changeset":"Z:fqu>6|11=a3k=i4*9+6$cleare","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425283637}},"pad:observatory.guide.experiencingtime:revs:627":{"changeset":"Z:fr0>1|11=a3k=ia*9+1$r","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425284212}},"pad:observatory.guide.experiencingtime:revs:628":{"changeset":"Z:fr1>1|11=a3k=ib*9+1$.","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425285778}},"pad:observatory.guide.experiencingtime:revs:629":{"changeset":"Z:fr2<1|11=a3k=er-1$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425296111}},"pad:observatory.guide.experiencingtime:revs:63":{"changeset":"Z:f1r<1|17=b38-1$","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1518025910973}},"pad:observatory.guide.experiencingtime:revs:630":{"changeset":"Z:fr1>1|11=a3k=eq-1*9+2$th","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425296612}},"pad:observatory.guide.experiencingtime:revs:631":{"changeset":"Z:fr2>6|11=a3k=es*9+6$is pre","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425297111}},"pad:observatory.guide.experiencingtime:revs:632":{"changeset":"Z:fr8<1|11=a3k=ex-1$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425297715}},"pad:observatory.guide.experiencingtime:revs:633":{"changeset":"Z:fr7<2|11=a3k=ev-2$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425298205}},"pad:observatory.guide.experiencingtime:revs:634":{"changeset":"Z:fr5>4|11=a3k=ev*9+4$loca","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425298710}},"pad:observatory.guide.experiencingtime:revs:635":{"changeset":"Z:fr9>5|11=a3k=ez*9+5$l pre","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425299209}},"pad:observatory.guide.experiencingtime:revs:636":{"changeset":"Z:fre>4|11=a3k=f4*9+4$sent","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425299710}},"pad:observatory.guide.experiencingtime:revs:637":{"changeset":"Z:fri>1|11=a3k=is*9+1$ ","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425307164}},"pad:observatory.guide.experiencingtime:revs:638":{"changeset":"Z:frj>1|11=a3k=it*9+1$I","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425307670}},"pad:observatory.guide.experiencingtime:revs:639":{"changeset":"Z:frk>6|11=a3k=iu*9+6$ have ","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425308169}},"pad:observatory.guide.experiencingtime:revs:64":{"changeset":"Z:f1q>1|17=b38*5|1+1$\n","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1518025911495}},"pad:observatory.guide.experiencingtime:revs:640":{"changeset":"Z:frq>4|11=a3k=j0*9+4$trie","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425308669}},"pad:observatory.guide.experiencingtime:revs:641":{"changeset":"Z:fru>2|11=a3k=j4*9+2$d ","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425309169}},"pad:observatory.guide.experiencingtime:revs:642":{"changeset":"Z:frw>7|11=a3k=j6*9+7$an edit","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425309669}},"pad:observatory.guide.experiencingtime:revs:643":{"changeset":"Z:fs3>4|11=a3k=jd*9+4$ to ","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425310169}},"pad:observatory.guide.experiencingtime:revs:644":{"changeset":"Z:fs7>1|11=a3k=jh*9+1$d","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425310671}},"pad:observatory.guide.experiencingtime:revs:645":{"changeset":"Z:fs8<2|11=a3k=jg-2$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425311169}},"pad:observatory.guide.experiencingtime:revs:646":{"changeset":"Z:fs6<2|11=a3k=je-2$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425311671}},"pad:observatory.guide.experiencingtime:revs:647":{"changeset":"Z:fs4>7|11=a3k=je*9+7$that ma","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425312174}},"pad:observatory.guide.experiencingtime:revs:648":{"changeset":"Z:fsb>4|11=a3k=jl*9+4$ybe ","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425312683}},"pad:observatory.guide.experiencingtime:revs:649":{"changeset":"Z:fsf>5|11=a3k=jp*9+5$does ","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425313174}},"pad:observatory.guide.experiencingtime:revs:65":{"changeset":"Z:f1r>1|17=b38*5+1$&","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1518025912666}},"pad:observatory.guide.experiencingtime:revs:650":{"changeset":"Z:fsk>3|11=a3k=ju*9+3$so?","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425313673}},"pad:observatory.guide.experiencingtime:revs:651":{"changeset":"Z:fsn>1|11=a3k=jx*9+1$)","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425314173}},"pad:observatory.guide.experiencingtime:revs:652":{"changeset":"Z:fso>2|11=a3k=f9*9+2$th","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425324182}},"pad:observatory.guide.experiencingtime:revs:653":{"changeset":"Z:fsq>3|11=a3k=fb*9+3$en ","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425324672}},"pad:observatory.guide.experiencingtime:revs:654":{"changeset":"Z:fst<2|15=b6x=6c-4*9+2$Si","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425383040}},"pad:observatory.guide.experiencingtime:revs:655":{"changeset":"Z:fsr>2|15=b6x=6e-1*9+3$mil","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425383543}},"pad:observatory.guide.experiencingtime:revs:656":{"changeset":"Z:fst>4|15=b6x=6h*9+4$arly","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425384042}},"pad:observatory.guide.experiencingtime:revs:657":{"changeset":"Z:fsx>1|15=b6x=6l*9+1$ ","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425384543}},"pad:observatory.guide.experiencingtime:revs:658":{"changeset":"Z:fsy<1|1j=c0p=1i-1$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425444610}},"pad:observatory.guide.experiencingtime:revs:659":{"changeset":"Z:fsx<1|1j=c0p=2n-1$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425447460}},"pad:observatory.guide.experiencingtime:revs:66":{"changeset":"Z:f1s<1|17=b38-1$","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1518025913196}},"pad:observatory.guide.experiencingtime:revs:660":{"changeset":"Z:fsw<1|1j=c0p=2m-1$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425447960}},"pad:observatory.guide.experiencingtime:revs:661":{"changeset":"Z:fsv<1|1j=c0p=2p-1$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425450485}},"pad:observatory.guide.experiencingtime:revs:662":{"changeset":"Z:fsu<1|1j=c0p=2o-1$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425453946}},"pad:observatory.guide.experiencingtime:revs:663":{"changeset":"Z:fst<1|1j=c0p=2n-1$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425454444}},"pad:observatory.guide.experiencingtime:revs:664":{"changeset":"Z:fss>1|1j=c0p=2n*9+1$t","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425460905}},"pad:observatory.guide.experiencingtime:revs:665":{"changeset":"Z:fst>1|1j=c0p=2o*9+1$h","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425461478}},"pad:observatory.guide.experiencingtime:revs:666":{"changeset":"Z:fsu>3|1j=c0p=2p*9+3$eir","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425461984}},"pad:observatory.guide.experiencingtime:revs:667":{"changeset":"Z:fsx<3|1j=c0p=1s-4*9+1$f","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425464484}},"pad:observatory.guide.experiencingtime:revs:668":{"changeset":"Z:fsu>2|1j=c0p=1t*9+2$ro","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425464984}},"pad:observatory.guide.experiencingtime:revs:669":{"changeset":"Z:fsw>1|1j=c0p=1v*9+1$m","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425465487}},"pad:observatory.guide.experiencingtime:revs:67":{"changeset":"Z:f1r>1|17=b38*5+1$%","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1518025913701}},"pad:observatory.guide.experiencingtime:revs:670":{"changeset":"Z:fsx<9|1l=ckk=8d-9$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425517742}},"pad:observatory.guide.experiencingtime:revs:671":{"changeset":"Z:fso<1|1l=ckk=8c-1$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425518299}},"pad:observatory.guide.experiencingtime:revs:672":{"changeset":"Z:fsn>1|1l=ckk=8h*9+1$s","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425519859}},"pad:observatory.guide.experiencingtime:revs:673":{"changeset":"Z:fso>0|1n=cwj=in-1*9+1$a","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425554498}},"pad:observatory.guide.experiencingtime:revs:674":{"changeset":"Z:fso>1|1n=cwj=io*9+1$ ","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425555002}},"pad:observatory.guide.experiencingtime:revs:675":{"changeset":"Z:fsp>1|1n=cwj=in*9+1$ ","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425557669}},"pad:observatory.guide.experiencingtime:revs:676":{"changeset":"Z:fsq<1|1p=e3j=7t-1$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425645501}},"pad:observatory.guide.experiencingtime:revs:677":{"changeset":"Z:fsp>1|1p=e3j=7t*9+1$z","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425646001}},"pad:observatory.guide.experiencingtime:revs:678":{"changeset":"Z:fsq<4|1p=e3j=8h-4$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425665008}},"pad:observatory.guide.experiencingtime:revs:679":{"changeset":"Z:fsm<3|1p=e3j=8e-3$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425665502}},"pad:observatory.guide.experiencingtime:revs:68":{"changeset":"Z:f1s>1|17=b38=1*5+1$ ","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1518025914203}},"pad:observatory.guide.experiencingtime:revs:680":{"changeset":"Z:fsj<3|1p=e3j=8b-3$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425666003}},"pad:observatory.guide.experiencingtime:revs:681":{"changeset":"Z:fsg>2|1p=e3j=8b*9+2$an","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425666506}},"pad:observatory.guide.experiencingtime:revs:682":{"changeset":"Z:fsi>1|1p=e3j=8d*9+1$d","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425667008}},"pad:observatory.guide.experiencingtime:revs:683":{"changeset":"Z:fsj<1|1q=eei=97-1$","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425681513}},"pad:observatory.guide.experiencingtime:revs:684":{"changeset":"Z:fsi>1|1q=eei=97*9+1$z","meta":{"author":"a.EXnmpSWanmHBGv1u","timestamp":1519425682006}},"pad:observatory.guide.experiencingtime:revs:685":{"changeset":"Z:fsj>1|7=ob=47*a+1$ ","meta":{"author":"a.eJQfyC3773rYpTah","timestamp":1519640630896}},"pad:observatory.guide.experiencingtime:revs:686":{"changeset":"Z:fsk>1|e=3de=4h*a+1$ ","meta":{"author":"a.eJQfyC3773rYpTah","timestamp":1519640637115}},"pad:observatory.guide.experiencingtime:revs:687":{"changeset":"Z:fsl>1|f=3ti=48*a+1$ ","meta":{"author":"a.eJQfyC3773rYpTah","timestamp":1519640641930}},"pad:observatory.guide.experiencingtime:revs:688":{"changeset":"Z:fsm>1|9=16r=3q*a+1$ ","meta":{"author":"a.eJQfyC3773rYpTah","timestamp":1519640656543}},"pad:observatory.guide.experiencingtime:revs:689":{"changeset":"Z:fsn>1|e=3df=4i*a+1$ ","meta":{"author":"a.eJQfyC3773rYpTah","timestamp":1519640662861}},"pad:observatory.guide.experiencingtime:revs:69":{"changeset":"Z:f1t>h|17=b38=2*5+h$-----------------","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1518025915196}},"pad:observatory.guide.experiencingtime:revs:690":{"changeset":"Z:fso<1|e=3df=4h-1$","meta":{"author":"a.eJQfyC3773rYpTah","timestamp":1519640668567}},"pad:observatory.guide.experiencingtime:revs:691":{"changeset":"Z:fsn>1|r=75f=2v*a+1$ ","meta":{"author":"a.eJQfyC3773rYpTah","timestamp":1519640674558}},"pad:observatory.guide.experiencingtime:revs:692":{"changeset":"Z:fso>1|v=8a4=1r*a+1$ ","meta":{"author":"a.eJQfyC3773rYpTah","timestamp":1519640679776}},"pad:observatory.guide.experiencingtime:revs:693":{"changeset":"Z:fsp>1|11=a3q=h4*a+1$ ","meta":{"author":"a.eJQfyC3773rYpTah","timestamp":1519640683939}},"pad:observatory.guide.experiencingtime:revs:694":{"changeset":"Z:fsq>1|1x=fi4=ak*a|1+1$\n","meta":{"author":"a.eJQfyC3773rYpTah","timestamp":1519922572849}},"pad:observatory.guide.experiencingtime:revs:695":{"changeset":"Z:fsr>2|1y=fsp*a|2+2$\n\n","meta":{"author":"a.eJQfyC3773rYpTah","timestamp":1519922573354}},"pad:observatory.guide.experiencingtime:revs:696":{"changeset":"Z:fst>2|20=fsr*a|2+2$\n\n","meta":{"author":"a.eJQfyC3773rYpTah","timestamp":1519922573851}},"pad:observatory.guide.experiencingtime:revs:697":{"changeset":"Z:fsv>1|1=f*a|1+1$\n","meta":{"author":"a.eJQfyC3773rYpTah","timestamp":1520269937825}},"pad:observatory.guide.experiencingtime:revs:698":{"changeset":"Z:fsw>2|2=g*a|2+2$\n\n","meta":{"author":"a.eJQfyC3773rYpTah","timestamp":1520269938331}},"pad:observatory.guide.experiencingtime:revs:699":{"changeset":"Z:fsy>1|2=g*a+1$%","meta":{"author":"a.eJQfyC3773rYpTah","timestamp":1520269939963}},"pad:observatory.guide.experiencingtime:revs:7":{"changeset":"Z:f1e>1|2=1e=1*0+1$ ","meta":{"author":"a.I4FbrrCTDQNN8GIf","timestamp":1517420622470}},"pad:observatory.guide.experiencingtime:revs:70":{"changeset":"Z:f2a<a|19=b5v-a$","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1518025921241}},"pad:observatory.guide.experiencingtime:revs:700":{"changeset":"Z:fsz>3|2=g=1*a+3$ SH","meta":{"author":"a.eJQfyC3773rYpTah","timestamp":1520269940466,"atext":{"text":"%__NOPUBLISH__\n\n% SH\n\n\n% HEADER: How humans and machines negotiate the experience of time\n\nThe experience of time is an essential element of any form of experience or cognition. Emotions depend to a large extent on expectations, or the potential coming of a future event. Any observing or experience of difference, of presence related to an earlier or later absence, is linked with an experience of time.\nHowever, how the actual experience of time is shaped is strongly influenced by all sort of design decisions and implementations, both for humans and machines. Also, the experience of time is a conglomerate of different experiences: time as a common moment, the duration of a certain time, time as cyclic events, historical time, and so on. Researching how humans and machines experience time and negotiate their time experiences is therefore an interesting avenue to explore.\n\nHumans have developed a time experience which was linked to natural life cycles, but it has been influenced by both technology and social conditions.(% CARLINSAYS: suggested rewording: \"Humans have developed a time experience that is linked to natural life cycles but that is also influenced by both technology and social conditions.\")\nThe first time cycle is the day-night time cycle. Humans do their stuff during the day, but need to sleep. The night is generally the preferred time for sleep, but the availability of artificial light and the need for longer-distance coordination has influenced how humans deal with the day cycle and the place for sleep in it.\nTime measurement also developed: early time measurement was linked to observation of natural circumstances like sunrise and sunset. (% CARLINSAYS: I suggest cutting \"Time measurement also developed\" and starting with\"Early time measurement was linked to the day-night cycle through observation of natural circumstances like sunrise and sunset.\") Measurement of such sun cycles (which is in fact an earth cycle) through sundials allowed for more precise time referencing, but it is very place and season dependent. More light during summer than winter implied that hours were longer in summer than in winter. Similarly such changes were greater at higher latitudes, while near the equator such changes are limited. In other words, time measured by sundials provided a local common reference of time, but not one over longer distances.\n\nThis seasonal time experience when the human world was flat reflects the unknown spherical geometry of the earth cycle projected on the flat earth. When humans became aware of earth as a sphere, they responded by flattening and linearising time. Mechanical clocks allowed to unify time lengths and thereby also standardize time. Physical observation and all sorts of economic processes needed such standardized time measurement. Early versions of such time measurement, like hourglasses, existed but remained disconnected from day time measurement. Mechanical clocks allowed to unify different time cycles and scales. It also allowed standardization of time over longer distances, departing from the local sundial time to time zones, which were less strictly linked to the seasonal rhythm of the sun but more to geographical zones. Long distance trade, industrialization and later long-distance communication by electro-magnetic signals (comparable to the speed of light) demanded more geographical coordination. In the nineteenth century, coordination developed through clock networks, with a master clock driving the slave clocks. Nowadays we work with atomic clocks and a global Coordinated Universal Time or UTC as a reference to which geographical time zones are connected. Humans organize their activities accordingly, if necessary by de-linking from the solar rhythm. The borders of time zones diverge very often from the longitudinal lines for economic and political reasons.\nA similar socialisation and globalisation of time occurred for computers. Where in the early computer age time was set and counted locally by each machine, it is now common to continuously synchronize time over the Internet through time servers and the Network Time Protocol. Humans get woken, cron jobs get triggered, precision bombs get guided, and trains count their delays in measure with the drill signal of the Master Clock of the US Naval Observatory, only differing by tiny variations in latency times. \n\nHumans have also developed ways to relate to time on longer scales, which were originally linked to natural rhythms: years, life cycles. Calendar systems were (% CARLINSAYS: \"are used\"? the tense of verbs and the use of the passive voice in this make certain sentences read a little strangely) used to determine seasonal agricultural needs (when to plant, when to harvest), while they also made it possible to keep track of life cycles and historical time. Again, such calendar systems have been very diverse and local, but have been slowly fused to a couple of dominant models. \nGenerational or birth, life, and death rhythms, originating from the human experience, have been projected on all sorts of phenomena. Religions tried (% CARLINSAYS: \"try\" or \"tried and continue to try\") to explain the origin of everything, while also often predicting the end in apocalyptic visions. The demise of religion at the hand of science did not let such generational visions disappear. They got new expressions in scientific theories of the beginning (big bang, evolution) and end (the heath death of the universe, the end of the earth at the final burnout phase of the sun) of everything. Similar apocalyptic visions are now embedded through technological design decisions (Y2K, the end of Unix-time in 2038). In all versions the end is often linked to the specific design of time (e.g. the end of the Maya calendar, millenarian movements). But just like religious visions can extend their apocalypse in a new versions (e.g. the always near but always delayed apocalypse of the Saints of the last days), machinic accounts of time can always be extended by enlarging the bit size of the time range (cfr the extension of Unix time till AD 292277026596, or safely after the end of the observable universe according to contemporary physics).\n\n## The time(s) of the machine\n\nMachines also have their natural cycle: the vibrating pulses of the internal crystal clock drives the cycles according to which the processor works. All PCs have such a Real Time Clock (RTC), independent of the processor. The time of the computer is linked to this clock cycle, as it consists in counting cyclical ticks. This produces a single cyclical, and completely linear, time rhythm in the hardware. In contrast to the earthly or natural cycles it is without any seasonal difference or interference between several cycles. This makes a computer into a monadic time capsule, disconnected from the outside rhythms.\nThe time experience in the software is in principle based on this local time cycle. However, once computers and software gets linked and networked, they have to negotiate and synchronize their times.\nTo start, time in a computer is no unique or unified experience. Several hardware components and a diverse collection of software organised in layers and processes create a whole ecology of interdependent time experiences. The operating system experiences other software components, and users through them, as a bunch of processes screaming for attention. One of the most pushy interrupts is the timer forcing the processor to count another click and update the system time. An internal kernel process performs the negotiation of time through which the clock count is linked with a system time. \nThis starts already during the booting process, when the operating system is determining the clock signal frequency. PCs have another time-measuring device, the Programmable Interval Timer\n(PIT), which can be set by the processor at a defined frequency. During a short time indicated by this PIT, the clock cycles of the RTC get counted and the frequency of the RTC gets calculated. Several other timing devices are present in the hardware, synchronized by kernel processes into a range of times available for the operating system and the processes. As said, one of these times is available as system time and gets communicated to all other processes when demanded. \nWith the advent of the Internet computers are not monads anymore, but are socialized in the common rhythm broadcasted with the Network Time Protocol. The local system time serves as back up, but gets continuously adapted to the network time. On a Ubuntu/Debian machine these times can be checked with timedatectl status. The timedatectl command enables to change these synchronisation processes. The actual synchronisation is done by the timesyncd process and the time servers to be used can be set in the /etc/systemd/timesyncd.conf file. Other Linux flavours work with the older ntp process which can be configured in /etc/ntp.conf. \n\nThe actual process time is completely different from this system time. Most of the time processes are put on hold and when the scheduler gives them time they can proceed till the next on hold is forced to make time for another process. The scheduler is the big organizer of time in the internal ecology of processes.\nSystem time is externally counted and therefore an external global variable to these processes. They (% CARLINSAYS: they refers to the processes? if not then clarify) can all send a demand to the kernel to get the system time. This gets communicated through the software stack with a range of system calls of the kernel and through the specific time modules of the programming language the software is programmed in.\nThe difference between the actual process time and system time does not appear in how time is perceived by the process. The process only perceives time as the difference between two demands of system time and is oblivious of its time being put on hold. The processor on the other hand spent most of its processing time as idle time: a processor is doing time waiting for slow system components like memory and even slower hard drives and network connections to respond and switches between checking for responses of these laggards. L’enfer du temps perdu, ce sont les autres.\n\nConnecting computers into a network demands new negotiations of time. We already mentioned the networked and globalised UTC timekeeping. But temporal negotiations happen on all levels of the system. Network protocols have timed choreographies to make connections and proceed with communications, with time out failsafes to break off when something goes wrong. The timing of an action is an essential component making the difference between a meaningful signal and noise.\nUsing a browser over http to connect to a website, or better (% CARLINSAYS: better is meant to mean it is a better example? if so cut the word.) the server providing the website on your request, is built on a discontinuous time practice. In a REST architecture the server just deals with a queue of requests and does not see continuity over time between certain requests from a single user.  New temporal practices have been designed and technically implemented. Through cookies the server is able to recognise users and their state in time. \nThe border between your computer and servers on the internet becomes fuzzy when external software is dropped on your computer and runs in your webbrowser. Javascript modules get dropped on your computer and can start performing tasks on demand of an external server, be it rendering a graph or mining digital money. Similarly, the browser becomes a border where time gets negotiated through synchronisation processes.\nWhat time exactly is depends on the task at hand. Each tool contains its specific temporal practices, dependent on the speed and subject matter of the synchronization process needed.\nFor example, for collaborative document editing tools like Google Docs or Etherpad it is a sequence of versions of the document. A range of strategies have been developed to allow to synchronize the changes made by different users with the least amount of conflict. \nThe Easysync-protocol used by Etherpad constructs a document from changesets. A changeset details the edits made by a user or the difference with the former local version of the text. In other words, the flow of time is represented through a series of changesets which can be summed to the present state. The server keeps a sequence of acknowledged changesets. These acknowledged changesets represent the current common state and get communicated to all clients. \nLocally each client builds its present state by summing up the acknowledged changesets received from the server, and with the local changesets which are not yet acknowledged. Each client communicates its local changesets, every 500 ms after the latest acknowledgment.  As this changeset can be relative to an earlier version the server first recalculates a changeset relative to the current version. Then it sends an acknowledgment to the sender and the changeset to the other clients. \nDifferent collaborative document editing tools use different methods to deal with conflicts, which also are dependent on the purpose or content of the document. Conflicts between numeric edits in a collaborative spreadsheet are dealt with differently than conflicts between text edits. But what is common to both is that the present gets continuously constructed on the server and on the clients and negotiated through the specific protocol. The user can always access its local copy of the text and create its local present, but this local present then gets negotiated with the server to create a common present. (% CARLINSAYS:These last two sentences are key and could be clearer. I have tried an edit that maybe does so?)\nAnd every tool rings also its own disasters and apocalyptic experiences through the collapse of the negotiation process and thereby of the common state.\n\nThis negotiation of time is in the first place a negotiation of the present. But also what is past and future gets constructed in this present. The ordered sequence connected to the system time(s) already imply such a past and future. But the construction of a past consists also of a negotiation of what remains and what gets forgotten. Data gets stored in memory or written to storage devices, while the operating systems assigns time stamps to these traces of the present becoming past and writes other traces to a range of log files. \nAs writers trying to capture their stream of consciousness already experienced, it is impossible to completely store the present for future use as past. There will always be a remainder that escapes and can not be written down. Similarly an operating systems can not keep a log of all its operations without getting stuck in an infinite regress in which it tries to log its logging operations. What will be the past for a future present needs to be constructed and selected. Everything else gets forgotten.\nLinux stores its logs in /var/log, while all sorts of programs can create their own logs. All these logs are specific histories, for example of what programs got installed. To get an idea of your past on a Linux system in the file system, you can collect the timestamps of all files with:\n\n% -----------------\n\nos.system(\"ls -R -l --time-style=long-iso \\\n           > modlistsystem-long-iso.txt\")\nos.system(\"ls -R -lu --time-style=long-iso \\\n           > accesslistsystem-long-iso.txt\")\n\n% SRCCODE:\n\n## Renegotiating time with your computer: sundial network time.\n\nTechnology has been a tool through which humans create distance from natural cycles and design their own time experiences. This means we can critically intervene in the functioning of the technology and develop alternative time practices and experiences. As an example we put forward as a not-yet-existing-proof of concept the possibility to let the computer work according to sundial time.\nIs it possible to reconfigure the time of the computer and rewire the connections with human and natural rhythms? Would we be able to let the computer function in an older human time experience, e.g. the time of the sundial? How can such sundial experience be built into the system and what would be the impact on the user?\nSundial time is a geographically and seasonally localised time. It also includes a distinction between day and night. The night is ‘out of time’. This distinction has been extradited from linear time practices, where the amount of light is just a variable external to steady beat of time. Linear time turns the night into economically productive time. Running your computer on sundial time re-introduces the night in your system.\n\nAn intervention to introduce sundial time in your computer is possible in the whole range of places we discussed where time gets negotiated. The most fundamental but also most difficult route would be to exchange the clock with something reflecting a more natural rhythm. However, as we have seen that this clock has become only a back up tool and that the actual system time is always renegotiated with other systems connected through the network, another renegotiation process can be introduced. Therefore, the most easy way to introduce sundial time would be to reconfigure the timesyncdor ntp processes and make them listen to an alternative sundial time server. Such a sundial time server can be built in different ways. A hardware version can be made of a sundial combined with light sensors, measuring the location of the shadow through the difference in light and deriving the sundial time from this location. This would link the time server to the actual earthly day and night cycle. A simulated version could be a local piece of software which looks up the timing of sunrise and sunset at the specific location and day. Based on this information it recalculates the local sundial time, which it provides through the NTP protocol. The local computer receives this sundial time from the nearest sundial time server and continuously adapts its system time, as it does now already based on UTC. Further, it can be programmed to go into sleep modus during the night and to wake up only when a sunrise signal is received from the time server.\n\nLetting a computer run on sundial time is a conscious effort to disconnect it from human-made linear time and to reconnect it with the old earth-driven cycles and the ancient time experience by humans. The unified time of UTC and the time zones gets broken up into extremely localized time servers, and the difference between day and night gets introduced into the functioning of the computer. \nThis re-enactment of such cycles through the computer will remind human users that the experience of time is a socially negotiated and technically implemented experience. Further, a computer running on sundial time would be a great piece of nannyware nudging the user to live in harmony with his natural environment and a synchronization tool to re-establish the link between the users bio-rhythm and the earthly day and night cycle. It would also be a great reminder why humans tried in the first place to escape from these earthly rhythms through technology and started hacking time.\n\nHans Lammerant, January 2018\n\n% NOTE: -\n This text was written in and in resistance/conflict to WTC time, which is exemplary for the bureaucratic office time experience. The WTC building boots up at 9AM and is turned off in several steps (at 5PM the air conditioning is turned off, later entrances close) into a wake state. The concierge can let you in and out through the night side entry, but main life support systems remain turned off outside office hours. This wake state continues during the weekend, turning the building into a glass house with limited air in storage. On Monday morning this bureaucratic time capsule revives from its slumber. A suffocating experience, but actually the building is a great piece of nannyware nudging towards a healthy office rhythm without too much extra hours outside the herd work ethic.\n\nSuch office time can also be implemented and negotiated on your local computer. A small Proof of Concept was the adapted bashrc on the etherbox simulating a system getting bored and stealing time. This can be further developed by including a differentiated response during versus outside office hours, aging (slower when timestamp of original install is more remote in time), etc.\n\n\n\n\n\n\n","attribs":"*5+1|1+e*a|3+7*0|1+1*5+9*0|3+ad*0+94*9+b*0|2+3u*0+1a*9+2*0+11*9+2*0+1q*9+2*a+1*9+53*0|1+1*9+3*0|1+91*0+3o*9+2*a+1*9|1+jf*0|1+1*0+8w*9+1*0+2e*9+1*0+6j*9+1*0+64*9+1*0+4b*9+a*0+8*9+1*0+3c*9+2*0+3n*9+2*0|1+5a*0+5i*9+1*0+g*9+1*0+3l*9+1*0|2+4n*0+6*9+5*0+1i*9+1*0+2k*9+3*a+1*9+3n*0+2p*9+g*0+3a*9+4*0+1*9+5*0|1+1a*0+r*9+1*0+3d*9+3*a+1*9+1e*0|4+tx*9+d*0+1f*9+3*0|4+16p*0+2y*9+1*0|1+ab*0+n*9+1*0+o*9+1*0+w*9+1*0+x*9+2*0+54*0*2+i*0+6*0*2+b*0+2u*0*2+9*0+3q*0*2+3*0|2+1h*0+7f*9+1*0|1+1d*0+2s*9+3*a+1*9+1r*0|4+102*0+1o*9+3*a+1*9+29*0|2+mo*0+4g*9+1*0|4+yg*0+81*9+8*0+7*9+8*0+62*9+i*0+1*9+5*0+1o*9+2*a+1*9+2z*0|4+ja*0+6c*9+a*0|1+7h*0+80*5|1+1*0|1+1*5|2+l+17*5|1+1+15*0|1+1+18*5|1+1+18*0|1+1*5|2+c*0|3+1u*0+1s*9+4*0+r*9+5*0|2+h3*0+8h*9+1*0|2+3h*0+g5*0*2+9*0+3*0*2+3*0+23*9+3*0|2+oa*0+7t*9+1*0+h*9+3*0|1+2l*0+97*9+1*0|4+7x*6+2*6*7*8+4*6|1+4*0|2+m0*0+ak*a|5+5*0|1+1|1+1"}}},"pad:observatory.guide.experiencingtime:revs:701":{"changeset":"Z:ft2>2|2=g=4*a+2$OW","meta":{"author":"a.eJQfyC3773rYpTah","timestamp":1520269940967}},"pad:observatory.guide.experiencingtime:revs:702":{"changeset":"Z:ft4>1|2=g=6*a+1$:","meta":{"author":"a.eJQfyC3773rYpTah","timestamp":1520269941925}},"pad:observatory.guide.experiencingtime:revs:703":{"changeset":"Z:ft5>2|2=g=7*a+2$ t","meta":{"author":"a.eJQfyC3773rYpTah","timestamp":1520269942435}},"pad:observatory.guide.experiencingtime:revs:704":{"changeset":"Z:ft7>1|2=g=9*a+1$g","meta":{"author":"a.eJQfyC3773rYpTah","timestamp":1520269942937}},"pad:observatory.guide.experiencingtime:revs:705":{"changeset":"Z:ft8>2|2=g=a*a+2$so","meta":{"author":"a.eJQfyC3773rYpTah","timestamp":1520269943467}},"pad:observatory.guide.experiencingtime:revs:706":{"changeset":"Z:fta>1|2=g=c*a+1$i","meta":{"author":"a.eJQfyC3773rYpTah","timestamp":1520269944145}},"pad:observatory.guide.experiencingtime:revs:707":{"changeset":"Z:ftb>3|2=g=d*a+3$mag","meta":{"author":"a.eJQfyC3773rYpTah","timestamp":1520269944665}},"pad:observatory.guide.experiencingtime:revs:708":{"changeset":"Z:fte>2|2=g=g*a+2$es","meta":{"author":"a.eJQfyC3773rYpTah","timestamp":1520269945159}},"pad:observatory.guide.experiencingtime:revs:709":{"changeset":"Z:ftg>1|2=g=i*a+1$.","meta":{"author":"a.eJQfyC3773rYpTah","timestamp":1520269945817}},"pad:observatory.guide.experiencingtime:revs:71":{"changeset":"Z:f20<1|19=b5v-1$","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1518025922059}},"pad:observatory.guide.experiencingtime:revs:710":{"changeset":"Z:fth>2|2=g=j*a+2$sv","meta":{"author":"a.eJQfyC3773rYpTah","timestamp":1520269946319}},"pad:observatory.guide.experiencingtime:revs:711":{"changeset":"Z:ftj>1|2=g=l*a+1$g","meta":{"author":"a.eJQfyC3773rYpTah","timestamp":1520269946819}},"pad:observatory.guide.experiencingtime:revs:712":{"changeset":"Z:ftk>1|2=g=m*a+1$ ","meta":{"author":"a.eJQfyC3773rYpTah","timestamp":1520269947321}},"pad:observatory.guide.experiencingtime:revs:713":{"changeset":"Z:ftl>2|2=g=n*a+2$ha","meta":{"author":"a.eJQfyC3773rYpTah","timestamp":1520269947828}},"pad:observatory.guide.experiencingtime:revs:714":{"changeset":"Z:ftn>2|2=g=p*a+2$ns","meta":{"author":"a.eJQfyC3773rYpTah","timestamp":1520269948331}},"pad:observatory.guide.experiencingtime:revs:715":{"changeset":"Z:ftp>1|2=g=r*b|1+1$\n","meta":{"author":"a.nlrHjVXBoDvu2rfr","timestamp":1520270345261}},"pad:observatory.guide.experiencingtime:revs:716":{"changeset":"Z:ftq>f|3=18*b+f$% CLEARTORIGHT:","meta":{"author":"a.nlrHjVXBoDvu2rfr","timestamp":1520270346847}},"pad:observatory.guide.experiencingtime:revs:717":{"changeset":"Z:fu5<1|4=1o|1-1$","meta":{"author":"a.nlrHjVXBoDvu2rfr","timestamp":1520270349923}},"pad:observatory.guide.experiencingtime:revs:718":{"changeset":"Z:fu4>0|3=18=1-1*5+1$!","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1520330139537}},"pad:observatory.guide.experiencingtime:revs:719":{"changeset":"Z:fu4>1|3=18=1*5+1$ ","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1520331648997}},"pad:observatory.guide.experiencingtime:revs:72":{"changeset":"Z:f1z>1|1a=b82*5|1+1$\n","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1518025922726}},"pad:observatory.guide.experiencingtime:revs:720":{"changeset":"Z:fu5<1|3=18=2-1$","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1520331650526}},"pad:observatory.guide.experiencingtime:revs:721":{"changeset":"Z:fu4<b|3=18=2-b$","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1520331654118}},"pad:observatory.guide.experiencingtime:revs:722":{"changeset":"Z:ftt>3|3=18=3*5+3$EXI","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1520331654648}},"pad:observatory.guide.experiencingtime:revs:723":{"changeset":"Z:ftw>1|3=18=6*5+1$N","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1520331655150}},"pad:observatory.guide.experiencingtime:revs:724":{"changeset":"Z:ftx>1|3=18=8*5+1$\\","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1520331657831}},"pad:observatory.guide.experiencingtime:revs:725":{"changeset":"Z:fty>1|3=18=9*5+1$c","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1520331658386}},"pad:observatory.guide.experiencingtime:revs:726":{"changeset":"Z:ftz>1|3=18=a*5+1$l","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1520331658906}},"pad:observatory.guide.experiencingtime:revs:727":{"changeset":"Z:fu0>2|3=18=b*5+2$ea","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1520331659461}},"pad:observatory.guide.experiencingtime:revs:728":{"changeset":"Z:fu2>1|3=18=d*5+1$r","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1520331659966}},"pad:observatory.guide.experiencingtime:revs:729":{"changeset":"Z:fu3>1|3=18=e*5+1$p","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1520331660505}},"pad:observatory.guide.experiencingtime:revs:73":{"changeset":"Z:f20>1|1b=b83*5|1+1$\n","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1518025923225}},"pad:observatory.guide.experiencingtime:revs:730":{"changeset":"Z:fu4>3|3=18=f*5+3$age","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1520331661028}},"pad:observatory.guide.experiencingtime:revs:731":{"changeset":"Z:fu7<f|3=18=2-g*5+1$F","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1520333178902}},"pad:observatory.guide.experiencingtime:revs:732":{"changeset":"Z:fts>1|3=18=3*5+1$l","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1520333179433}},"pad:observatory.guide.experiencingtime:revs:733":{"changeset":"Z:ftt>3|3=18=4*5+3$ush","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1520333179921}},"pad:observatory.guide.experiencingtime:revs:734":{"changeset":"Z:ftw<3|3=18=4-3$","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1520333180440}},"pad:observatory.guide.experiencingtime:revs:735":{"changeset":"Z:ftt<1|3=18=3-1$","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1520333180942}},"pad:observatory.guide.experiencingtime:revs:736":{"changeset":"Z:fts>1|3=18=3*5+1$L","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1520333181460}},"pad:observatory.guide.experiencingtime:revs:737":{"changeset":"Z:ftt>1|3=18=4*5+1$U","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1520333181944}},"pad:observatory.guide.experiencingtime:revs:738":{"changeset":"Z:ftu>2|3=18=5*5+2$SH","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1520333182448}},"pad:observatory.guide.experiencingtime:revs:739":{"changeset":"Z:ftw>1|3=18=7*5+1$F","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1520333183172}},"pad:observatory.guide.experiencingtime:revs:74":{"changeset":"Z:f21>a|1b=b83*5+a$% SRCCODE:","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1518025923912}},"pad:observatory.guide.experiencingtime:revs:740":{"changeset":"Z:ftx>2|3=18=8*5+2$LO","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1520333183672}},"pad:observatory.guide.experiencingtime:revs:741":{"changeset":"Z:ftz>2|3=18=a*5+2$AT","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1520333184186}},"pad:observatory.guide.experiencingtime:revs:742":{"changeset":"Z:fu1>1|3=18=c*5+1$S","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1520333184683}},"pad:observatory.guide.experiencingtime:revs:743":{"changeset":"Z:fu2>1|3=18=d*5+1$:","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1520333185210}},"pad:observatory.guide.experiencingtime:revs:744":{"changeset":"Z:fu3<d|3=18-e*5|1+1$\n","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1520333285422}},"pad:observatory.guide.experiencingtime:revs:745":{"changeset":"Z:ftq<1|3=18|1-1$","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1520333286224}},"pad:observatory.guide.experiencingtime:revs:746":{"changeset":"Z:ftp<1|3=18|1-1$","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1520333287954}},"pad:observatory.guide.experiencingtime:revs:747":{"changeset":"Z:fto>1|2=g=r*5+1$ ","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1520333289700}},"pad:observatory.guide.experiencingtime:revs:748":{"changeset":"Z:ftp>1|2=g=s*5+1$H","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1520333290337}},"pad:observatory.guide.experiencingtime:revs:749":{"changeset":"Z:ftq<1=e|1-1$","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1520334145280}},"pad:observatory.guide.experiencingtime:revs:75":{"changeset":"Z:f2b>0|18=b3s=16-1*5+1$\\","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1518025939385}},"pad:observatory.guide.experiencingtime:revs:750":{"changeset":"Z:ftp>0*3=e$","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1520334159663}},"pad:observatory.guide.experiencingtime:revs:751":{"changeset":"Z:ftp>1|2=19*5|1+1$\n","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1520334173578}},"pad:observatory.guide.experiencingtime:revs:752":{"changeset":"Z:ftq<2i|x=8az=1i-2i$","meta":{"author":"a.EYVsjkr8VHlpFIwi","timestamp":1522932936618}},"pad:observatory.guide.experiencingtime:revs:753":{"changeset":"Z:fr8>1|x=8az=1i*c+1$m","meta":{"author":"a.EYVsjkr8VHlpFIwi","timestamp":1522932937115}},"pad:observatory.guide.experiencingtime:revs:754":{"changeset":"Z:fr9>1|x=8az=1j*c+1$o","meta":{"author":"a.EYVsjkr8VHlpFIwi","timestamp":1522932937991}},"pad:observatory.guide.experiencingtime:revs:755":{"changeset":"Z:fra>2|x=8az=1k*c+2$re","meta":{"author":"a.EYVsjkr8VHlpFIwi","timestamp":1522932938454}},"pad:observatory.guide.experiencingtime:revs:756":{"changeset":"Z:frc>2|x=8az=1m*c+2$ a","meta":{"author":"a.EYVsjkr8VHlpFIwi","timestamp":1522932938938}},"pad:observatory.guide.experiencingtime:revs:757":{"changeset":"Z:fre>3|x=8az=1o*c+3$ccu","meta":{"author":"a.EYVsjkr8VHlpFIwi","timestamp":1522932939453}},"pad:observatory.guide.experiencingtime:revs:758":{"changeset":"Z:frh>2|x=8az=1r*c+2$ra","meta":{"author":"a.EYVsjkr8VHlpFIwi","timestamp":1522932939955}},"pad:observatory.guide.experiencingtime:revs:759":{"changeset":"Z:frj>1|x=8az=1t*c+1$t","meta":{"author":"a.EYVsjkr8VHlpFIwi","timestamp":1522932941505}},"pad:observatory.guide.experiencingtime:revs:76":{"changeset":"Z:f2b>0|19=b5v=17-1*5+1$\\","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1518025941221}},"pad:observatory.guide.experiencingtime:revs:760":{"changeset":"Z:frk>2|x=8az=1u*c+2$el","meta":{"author":"a.EYVsjkr8VHlpFIwi","timestamp":1522932942007}},"pad:observatory.guide.experiencingtime:revs:761":{"changeset":"Z:frm>1|x=8az=1w*c+1$y","meta":{"author":"a.EYVsjkr8VHlpFIwi","timestamp":1522932942506}},"pad:observatory.guide.experiencingtime:revs:762":{"changeset":"Z:frn<3|g=3ea=4a-4*c+1$a","meta":{"author":"a.EYVsjkr8VHlpFIwi","timestamp":1522933258343}},"pad:observatory.guide.experiencingtime:revs:763":{"changeset":"Z:frk>2|g=3ea=4b*c+2$re","meta":{"author":"a.EYVsjkr8VHlpFIwi","timestamp":1522933258959}},"pad:observatory.guide.experiencingtime:revs:764":{"changeset":"Z:frm<4|h=3ud=41-4$","meta":{"author":"a.EYVsjkr8VHlpFIwi","timestamp":1522933273205}},"pad:observatory.guide.experiencingtime:revs:765":{"changeset":"Z:fri>2|h=3ud=41*c+2$ry","meta":{"author":"a.EYVsjkr8VHlpFIwi","timestamp":1522933273705}},"pad:observatory.guide.experiencingtime:revs:766":{"changeset":"Z:frk>1|t=767=41*c+1$ ","meta":{"author":"a.EYVsjkr8VHlpFIwi","timestamp":1522933292088}},"pad:observatory.guide.experiencingtime:revs:767":{"changeset":"Z:frl>1|t=767=42*c+1$(","meta":{"author":"a.EYVsjkr8VHlpFIwi","timestamp":1522933292831}},"pad:observatory.guide.experiencingtime:revs:768":{"changeset":"Z:frm>1|t=767=43*c+1$c","meta":{"author":"a.EYVsjkr8VHlpFIwi","timestamp":1522933293880}},"pad:observatory.guide.experiencingtime:revs:769":{"changeset":"Z:frn>1|t=767=44*c+1$o","meta":{"author":"a.EYVsjkr8VHlpFIwi","timestamp":1522933294328}},"pad:observatory.guide.experiencingtime:revs:77":{"changeset":"Z:f2b<1|18=b3s=17-1$","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1518025942104}},"pad:observatory.guide.experiencingtime:revs:770":{"changeset":"Z:fro>3|t=767=45*c+3$rre","meta":{"author":"a.EYVsjkr8VHlpFIwi","timestamp":1522933294813}},"pad:observatory.guide.experiencingtime:revs:771":{"changeset":"Z:frr>2|t=767=48*c+2$ct","meta":{"author":"a.EYVsjkr8VHlpFIwi","timestamp":1522933295318}},"pad:observatory.guide.experiencingtime:revs:772":{"changeset":"Z:frt>1|t=767=4a*c+1$)","meta":{"author":"a.EYVsjkr8VHlpFIwi","timestamp":1522933295918}},"pad:observatory.guide.experiencingtime:revs:773":{"changeset":"Z:fru<56|9=p6-56$","meta":{"author":"a.EYVsjkr8VHlpFIwi","timestamp":1522933351313}},"pad:observatory.guide.experiencingtime:revs:774":{"changeset":"Z:fmo<1|9=p6=44-1$","meta":{"author":"a.EYVsjkr8VHlpFIwi","timestamp":1522933357277}},"pad:observatory.guide.experiencingtime:revs:775":{"changeset":"Z:fmn<1|9=p6=43-1$","meta":{"author":"a.EYVsjkr8VHlpFIwi","timestamp":1522933357777}},"pad:observatory.guide.experiencingtime:revs:776":{"changeset":"Z:fmm>1|b=12e*c+1$P","meta":{"author":"a.EYVsjkr8VHlpFIwi","timestamp":1522933545364}},"pad:observatory.guide.experiencingtime:revs:777":{"changeset":"Z:fmn>1|b=12e=1*c+1$a","meta":{"author":"a.EYVsjkr8VHlpFIwi","timestamp":1522933545864}},"pad:observatory.guide.experiencingtime:revs:778":{"changeset":"Z:fmo>2|b=12e=2*c+2$rt","meta":{"author":"a.EYVsjkr8VHlpFIwi","timestamp":1522933546364}},"pad:observatory.guide.experiencingtime:revs:779":{"changeset":"Z:fmq>2|b=12e=4*c+2$ o","meta":{"author":"a.EYVsjkr8VHlpFIwi","timestamp":1522933546867}},"pad:observatory.guide.experiencingtime:revs:78":{"changeset":"Z:f2a>1|18=b3s=17*5|1+1$\n","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1518025942619}},"pad:observatory.guide.experiencingtime:revs:780":{"changeset":"Z:fms>2|b=12e=6*c+2$f ","meta":{"author":"a.EYVsjkr8VHlpFIwi","timestamp":1522933547373}},"pad:observatory.guide.experiencingtime:revs:781":{"changeset":"Z:fmu>1|b=12e=8*c+1$t","meta":{"author":"a.EYVsjkr8VHlpFIwi","timestamp":1522933547890}},"pad:observatory.guide.experiencingtime:revs:782":{"changeset":"Z:fmv>1|b=12e=9*c+1$h","meta":{"author":"a.EYVsjkr8VHlpFIwi","timestamp":1522933550492}},"pad:observatory.guide.experiencingtime:revs:783":{"changeset":"Z:fmw>1|b=12e=a*c+1$i","meta":{"author":"a.EYVsjkr8VHlpFIwi","timestamp":1522933550990}},"pad:observatory.guide.experiencingtime:revs:784":{"changeset":"Z:fmx>1|b=12e=b*c+1$s","meta":{"author":"a.EYVsjkr8VHlpFIwi","timestamp":1522933551506}},"pad:observatory.guide.experiencingtime:revs:785":{"changeset":"Z:fmy>2|b=12e=c*c+2$ e","meta":{"author":"a.EYVsjkr8VHlpFIwi","timestamp":1522933552202}},"pad:observatory.guide.experiencingtime:revs:786":{"changeset":"Z:fn0>3|b=12e=e*c+3$xpe","meta":{"author":"a.EYVsjkr8VHlpFIwi","timestamp":1522933552492}},"pad:observatory.guide.experiencingtime:revs:787":{"changeset":"Z:fn3>3|b=12e=h*c+3$rie","meta":{"author":"a.EYVsjkr8VHlpFIwi","timestamp":1522933552998}},"pad:observatory.guide.experiencingtime:revs:788":{"changeset":"Z:fn6>3|b=12e=k*c+3$nce","meta":{"author":"a.EYVsjkr8VHlpFIwi","timestamp":1522933553494}},"pad:observatory.guide.experiencingtime:revs:789":{"changeset":"Z:fn9>2|b=12e=n*c+2$ i","meta":{"author":"a.EYVsjkr8VHlpFIwi","timestamp":1522933553988}},"pad:observatory.guide.experiencingtime:revs:79":{"changeset":"Z:f2b>b|19=b50*5+b$           ","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1518025943496}},"pad:observatory.guide.experiencingtime:revs:790":{"changeset":"Z:fnb>1|b=12e=p*c+1$s","meta":{"author":"a.EYVsjkr8VHlpFIwi","timestamp":1522933554800}},"pad:observatory.guide.experiencingtime:revs:791":{"changeset":"Z:fnc>2|b=12e=q*c+2$ h","meta":{"author":"a.EYVsjkr8VHlpFIwi","timestamp":1522933555293}},"pad:observatory.guide.experiencingtime:revs:792":{"changeset":"Z:fne>2|b=12e=s*c+2$ow","meta":{"author":"a.EYVsjkr8VHlpFIwi","timestamp":1522933555798}},"pad:observatory.guide.experiencingtime:revs:793":{"changeset":"Z:fng>1|b=12e=u*c+1$ ","meta":{"author":"a.EYVsjkr8VHlpFIwi","timestamp":1522933556292}},"pad:observatory.guide.experiencingtime:revs:794":{"changeset":"Z:fnh>2|b=12e=v*c+2$ti","meta":{"author":"a.EYVsjkr8VHlpFIwi","timestamp":1522933556791}},"pad:observatory.guide.experiencingtime:revs:795":{"changeset":"Z:fnj>1|b=12e=x*c+1$m","meta":{"author":"a.EYVsjkr8VHlpFIwi","timestamp":1522933557520}},"pad:observatory.guide.experiencingtime:revs:796":{"changeset":"Z:fnk>2|b=12e=y*c+2$e ","meta":{"author":"a.EYVsjkr8VHlpFIwi","timestamp":1522933558026}},"pad:observatory.guide.experiencingtime:revs:797":{"changeset":"Z:fnm>1|b=12e=10*c+1$g","meta":{"author":"a.EYVsjkr8VHlpFIwi","timestamp":1522933558757}},"pad:observatory.guide.experiencingtime:revs:798":{"changeset":"Z:fnn>2|b=12e=11*c+2$et","meta":{"author":"a.EYVsjkr8VHlpFIwi","timestamp":1522933559255}},"pad:observatory.guide.experiencingtime:revs:799":{"changeset":"Z:fnp>1|b=12e=13*c+1$s","meta":{"author":"a.EYVsjkr8VHlpFIwi","timestamp":1522933559821}},"pad:observatory.guide.experiencingtime:revs:8":{"changeset":"Z:f1f<1|5=bs=d0-1$","meta":{"author":"a.I4FbrrCTDQNN8GIf","timestamp":1517420630227}},"pad:observatory.guide.experiencingtime:revs:80":{"changeset":"Z:f2m>1|19=b50=b*5+1$ ","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1518025944002}},"pad:observatory.guide.experiencingtime:revs:800":{"changeset":"Z:fnq>1|b=12e=14*c+1$ ","meta":{"author":"a.EYVsjkr8VHlpFIwi","timestamp":1522933560255,"atext":{"text":"%__NOPUBLISH__\n% SHOW: tgsoimages.svg hans H\n\n\n% HEADER: How humans and machines negotiate the experience of time\n\nThe experience of time is an essential element of any form of experience or cognition. Emotions depend to a large extent on expectations, or the potential coming of a future event. Any observing or experience of difference, of presence related to an earlier or later absence, is linked with an experience of time.\nHowever, how the actual experience of time is shaped is strongly influenced by all sort of design decisions and implementations, both for humans and machines. Also, the experience of time is a conglomerate of different experiences: time as a common moment, the duration of a certain time, time as cyclic events, historical time, and so on. Researching how humans and machines experience time and negotiate their time experiences is therefore an interesting avenue to explore.\n\nHumans have developed a time experience that is linked to natural life cycles but that is also influenced by both technology and social conditions.\nThe first time cycle is the day-night time cycle. Humans do their stuff during the day, but need to sleep. The night is generally the preferred time for sleep, but the availability of artificial light and the need for longer-distance coordination has influenced how humans deal with the day cycle and the place for sleep in it.\nPart of this experience is how time gets Time measurement also developed: early time measurement was linked to observation of natural circumstances like sunrise and sunset. (% CARLINSAYS: I suggest cutting \"Time measurement also developed\" and starting with\"Early time measurement was linked to the day-night cycle through observation of natural circumstances like sunrise and sunset.\") Measurement of such sun cycles (which is in fact an earth cycle) through sundials allowed for more precise time referencing, but it is very place and season dependent. More light during summer than winter implied that hours were longer in summer than in winter. Similarly such changes were greater at higher latitudes, while near the equator such changes are limited. In other words, time measured by sundials provided a local common reference of time, but not one over longer distances.\n\nThis seasonal time experience when the human world was flat reflects the unknown spherical geometry of the earth cycle projected on the flat earth. When humans became aware of earth as a sphere, they responded by flattening and linearising time. Mechanical clocks allowed to unify time lengths and thereby also standardize time. Physical observation and all sorts of economic processes needed such standardized time measurement. Early versions of such time measurement, like hourglasses, existed but remained disconnected from day time measurement. Mechanical clocks allowed to unify different time cycles and scales. It also allowed standardization of time over longer distances, departing from the local sundial time to time zones, which were less strictly linked to the seasonal rhythm of the sun but more to geographical zones. Long distance trade, industrialization and later long-distance communication by electro-magnetic signals (comparable to the speed of light) demanded more geographical coordination. In the nineteenth century, coordination developed through clock networks, with a master clock driving the slave clocks. Nowadays we work with atomic clocks and a global Coordinated Universal Time or UTC as a reference to which geographical time zones are connected. Humans organize their activities accordingly, if necessary by de-linking from the solar rhythm. The borders of time zones diverge very often from the longitudinal lines for economic and political reasons.\nA similar socialisation and globalisation of time occurred for computers. Where in the early computer age time was set and counted locally by each machine, it is now common to continuously synchronize time over the Internet through time servers and the Network Time Protocol. Humans get woken, cron jobs get triggered, precision bombs get guided, and trains count their delays in measure with the drill signal of the Master Clock of the US Naval Observatory, only differing by tiny variations in latency times. \n\nHumans have also developed ways to relate to time on longer scales, which were originally linked to natural rhythms: years, life cycles. Calendar systems are (% CARLINSAYS: \"are used\"? the tense of verbs and the use of the passive voice in this make certain sentences read a little strangely) used to determine seasonal agricultural needs (when to plant, when to harvest), while they also made it possible to keep track of life cycles and historical time. Again, such calendar systems have been very diverse and local, but have been slowly fused to a couple of dominant models. \nGenerational or birth, life, and death rhythms, originating from the human experience, have been projected on all sorts of phenomena. Religions try (% CARLINSAYS: \"try\" or \"tried and continue to try\") to explain the origin of everything, while also often predicting the end in apocalyptic visions. The demise of religion at the hand of science did not let such generational visions disappear. They got new expressions in scientific theories of the beginning (big bang, evolution) and end (the heath death of the universe, the end of the earth at the final burnout phase of the sun) of everything. Similar apocalyptic visions are now embedded through technological design decisions (Y2K, the end of Unix-time in 2038). In all versions the end is often linked to the specific design of time (e.g. the end of the Maya calendar, millenarian movements). But just like religious visions can extend their apocalypse in a new versions (e.g. the always near but always delayed apocalypse of the Saints of the last days), machinic accounts of time can always be extended by enlarging the bit size of the time range (cfr the extension of Unix time till AD 292277026596, or safely after the end of the observable universe according to contemporary physics).\n\n## The time(s) of the machine\n\nMachines also have their natural cycle: the vibrating pulses of the internal crystal clock drives the cycles according to which the processor works. All PCs have such a Real Time Clock (RTC), independent of the processor. The time of the computer is linked to this clock cycle, as it consists in counting cyclical ticks. This produces a single cyclical, and completely linear, time rhythm in the hardware. In contrast to the earthly or natural cycles it is without any seasonal difference or interference between several cycles. This makes a computer into a monadic time capsule, disconnected from the outside rhythms.\nThe time experience in the software is in principle based on this local time cycle. However, once computers and software gets linked and networked, they have to negotiate and synchronize their times.\nTo start, time in a computer is no unique or unified experience. Several hardware components and a diverse collection of software organised in layers and processes create a whole ecology of interdependent time experiences. The operating system experiences other software components, and users through them, as a bunch of processes screaming for attention. One of the most pushy interrupts is the timer forcing the processor to count another click and update the system time. An internal kernel process performs the negotiation of time through which the clock count is linked with a system time. \nThis starts already during the booting process, when the operating system is determining the clock signal frequency. PCs have another time-measuring device, the Programmable Interval Timer\n(PIT), which can be set by the processor at a defined frequency. During a short time indicated by this PIT, the clock cycles of the RTC get counted and the frequency of the RTC gets calculated. Several other timing devices are present in the hardware, synchronized by kernel processes into a range of times available for the operating system and the processes. As said, one of these times is available as system time and gets communicated to all other processes when demanded. \nWith the advent of the Internet computers are not monads anymore, but are socialized in the common rhythm broadcasted with the Network Time Protocol. The local system time serves as back up, but gets continuously adapted to the network time. On a Ubuntu/Debian machine these times can be checked with timedatectl status. The timedatectl command enables to change these synchronisation processes. The actual synchronisation is done by the timesyncd process and the time servers to be used can be set in the /etc/systemd/timesyncd.conf file. Other Linux flavours work with the older ntp process which can be configured in /etc/ntp.conf. \n\nThe actual process time is completely different from this system time. Most of the time processes are put on hold and when the scheduler gives them time they can proceed till the next on hold is forced to make time for another process. The scheduler is the big organizer of time in the internal ecology of processes.\nSystem time is externally counted and therefore an external global variable to these processes. They (% CARLINSAYS: they refers to the processes? (correct) if not then clarify) can all send a demand to the kernel to get the system time. This gets communicated through the software stack with a range of system calls of the kernel and through the specific time modules of the programming language the software is programmed in.\nThe difference between the actual process time and system time does not appear in how time is perceived by the process. The process only perceives time as the difference between two demands of system time and is oblivious of its time being put on hold. The processor on the other hand spent most of its processing time as idle time: a processor is doing time waiting for slow system components like memory and even slower hard drives and network connections to respond and switches between checking for responses of these laggards. L’enfer du temps perdu, ce sont les autres.\n\nConnecting computers into a network demands new negotiations of time. We already mentioned the networked and globalised UTC timekeeping. But temporal negotiations happen on all levels of the system. Network protocols have timed choreographies to make connections and proceed with communications, with time out failsafes to break off when something goes wrong. The timing of an action is an essential component making the difference between a meaningful signal and noise.\nUsing a browser over http to connect to a website, or more accurately the server providing the website on your request, is built on a discontinuous time practice. In a REST architecture the server just deals with a queue of requests and does not see continuity over time between certain requests from a single user.  New temporal practices have been designed and technically implemented. Through cookies the server is able to recognise users and their state in time. \nThe border between your computer and servers on the internet becomes fuzzy when external software is dropped on your computer and runs in your webbrowser. Javascript modules get dropped on your computer and can start performing tasks on demand of an external server, be it rendering a graph or mining digital money. Similarly, the browser becomes a border where time gets negotiated through synchronisation processes.\nWhat time exactly is depends on the task at hand. Each tool contains its specific temporal practices, dependent on the speed and subject matter of the synchronization process needed.\nFor example, for collaborative document editing tools like Google Docs or Etherpad it is a sequence of versions of the document. A range of strategies have been developed to allow to synchronize the changes made by different users with the least amount of conflict. \nThe Easysync-protocol used by Etherpad constructs a document from changesets. A changeset details the edits made by a user or the difference with the former local version of the text. In other words, the flow of time is represented through a series of changesets which can be summed to the present state. The server keeps a sequence of acknowledged changesets. These acknowledged changesets represent the current common state and get communicated to all clients. \nLocally each client builds its present state by summing up the acknowledged changesets received from the server, and with the local changesets which are not yet acknowledged. Each client communicates its local changesets, every 500 ms after the latest acknowledgment.  As this changeset can be relative to an earlier version the server first recalculates a changeset relative to the current version. Then it sends an acknowledgment to the sender and the changeset to the other clients. \nDifferent collaborative document editing tools use different methods to deal with conflicts, which also are dependent on the purpose or content of the document. Conflicts between numeric edits in a collaborative spreadsheet are dealt with differently than conflicts between text edits. But what is common to both is that the present gets continuously constructed on the server and on the clients and negotiated through the specific protocol. The user can always access its local copy of the text and create its local present, but this local present then gets negotiated with the server to create a common present. (% CARLINSAYS:These last two sentences are key and could be clearer. I have tried an edit that maybe does so?)\nAnd every tool rings also its own disasters and apocalyptic experiences through the collapse of the negotiation process and thereby of the common state.\n\nThis negotiation of time is in the first place a negotiation of the present. But also what is past and future gets constructed in this present. The ordered sequence connected to the system time(s) already imply such a past and future. But the construction of a past consists also of a negotiation of what remains and what gets forgotten. Data gets stored in memory or written to storage devices, while the operating systems assigns time stamps to these traces of the present becoming past and writes other traces to a range of log files. \nAs writers trying to capture their stream of consciousness already experienced, it is impossible to completely store the present for future use as past. There will always be a remainder that escapes and can not be written down. Similarly an operating systems can not keep a log of all its operations without getting stuck in an infinite regress in which it tries to log its logging operations. What will be the past for a future present needs to be constructed and selected. Everything else gets forgotten.\nLinux stores its logs in /var/log, while all sorts of programs can create their own logs. All these logs are specific histories, for example of what programs got installed. To get an idea of your past on a Linux system in the file system, you can collect the timestamps of all files with:\n\n% -----------------\n\nos.system(\"ls -R -l --time-style=long-iso \\\n           > modlistsystem-long-iso.txt\")\nos.system(\"ls -R -lu --time-style=long-iso \\\n           > accesslistsystem-long-iso.txt\")\n\n% SRCCODE:\n\n## Renegotiating time with your computer: sundial network time.\n\nTechnology has been a tool through which humans create distance from natural cycles and design their own time experiences. This means we can critically intervene in the functioning of the technology and develop alternative time practices and experiences. As an example we put forward as a not-yet-existing-proof of concept the possibility to let the computer work according to sundial time.\nIs it possible to reconfigure the time of the computer and rewire the connections with human and natural rhythms? Would we be able to let the computer function in an older human time experience, e.g. the time of the sundial? How can such sundial experience be built into the system and what would be the impact on the user?\nSundial time is a geographically and seasonally localised time. It also includes a distinction between day and night. The night is ‘out of time’. This distinction has been extradited from linear time practices, where the amount of light is just a variable external to steady beat of time. Linear time turns the night into economically productive time. Running your computer on sundial time re-introduces the night in your system.\n\nAn intervention to introduce sundial time in your computer is possible in the whole range of places we discussed where time gets negotiated. The most fundamental but also most difficult route would be to exchange the clock with something reflecting a more natural rhythm. However, as we have seen that this clock has become only a back up tool and that the actual system time is always renegotiated with other systems connected through the network, another renegotiation process can be introduced. Therefore, the most easy way to introduce sundial time would be to reconfigure the timesyncdor ntp processes and make them listen to an alternative sundial time server. Such a sundial time server can be built in different ways. A hardware version can be made of a sundial combined with light sensors, measuring the location of the shadow through the difference in light and deriving the sundial time from this location. This would link the time server to the actual earthly day and night cycle. A simulated version could be a local piece of software which looks up the timing of sunrise and sunset at the specific location and day. Based on this information it recalculates the local sundial time, which it provides through the NTP protocol. The local computer receives this sundial time from the nearest sundial time server and continuously adapts its system time, as it does now already based on UTC. Further, it can be programmed to go into sleep modus during the night and to wake up only when a sunrise signal is received from the time server.\n\nLetting a computer run on sundial time is a conscious effort to disconnect it from human-made linear time and to reconnect it with the old earth-driven cycles and the ancient time experience by humans. The unified time of UTC and the time zones gets broken up into extremely localized time servers, and the difference between day and night gets introduced into the functioning of the computer. \nThis re-enactment of such cycles through the computer will remind human users that the experience of time is a socially negotiated and technically implemented experience. Further, a computer running on sundial time would be a great piece of nannyware nudging the user to live in harmony with his natural environment and a synchronization tool to re-establish the link between the users bio-rhythm and the earthly day and night cycle. It would also be a great reminder why humans tried in the first place to escape from these earthly rhythms through technology and started hacking time.\n\nHans Lammerant, January 2018\n\n% NOTE: -\n This text was written in and in resistance/conflict to WTC time, which is exemplary for the bureaucratic office time experience. The WTC building boots up at 9AM and is turned off in several steps (at 5PM the air conditioning is turned off, later entrances close) into a wake state. The concierge can let you in and out through the night side entry, but main life support systems remain turned off outside office hours. This wake state continues during the weekend, turning the building into a glass house with limited air in storage. On Monday morning this bureaucratic time capsule revives from its slumber. A suffocating experience, but actually the building is a great piece of nannyware nudging towards a healthy office rhythm without too much extra hours outside the herd work ethic.\n\nSuch office time can also be implemented and negotiated on your local computer. A small Proof of Concept was the adapted bashrc on the etherbox simulating a system getting bored and stealing time. This can be further developed by including a differentiated response during versus outside office hours, aging (slower when timestamp of original install is more remote in time), etc.\n\n\n\n\n\n\n","attribs":"+e*a|1+1*a+r*5+2*b|1+1*5|1+1*0|1+1*5+9*0|3+ad*0+94*9+b*0|2+3u*9+43*0|1+1*9+3*0|1+91*c+15*0+3o*9+2*a+1*9|1+jf*0|1+1*0+8w*9+1*0+2e*9+1*0+6j*9+1*0+64*9+1*0+4b*9+a*0+8*9+1*0+3c*9+2*0+3n*9+2*0|1+5a*0+5i*9+1*0+g*9+1*0+3l*9+1*0|2+4n*0+6*9+5*0+1i*9+1*0+2g*c+3*9+3*a+1*9+3n*0+2p*9+g*0+3a*9+4*0+1*9+5*0|1+1a*0+r*9+1*0+39*c+2*9+3*a+1*9+1e*0|4+tx*9+d*0+1f*9+3*0|4+16p*0+2y*9+1*0|1+ab*0+n*9+1*0+o*9+1*0+w*9+1*0+x*9+2*0+54*0*2+i*0+6*0*2+b*0+2u*0*2+9*0+3q*0*2+3*0|2+1h*0+7f*9+1*0|1+1d*0+2s*9+3*a+1*9+15*c+a*9+m*0|4+102*0+1i*c+f*9+1*0|2+mo*0+4g*9+1*0|4+yg*0+81*9+8*0+7*9+8*0+62*9+i*0+1*9+5*0+1o*9+2*a+1*9+2z*0|4+ja*0+6c*9+a*0|1+7h*0+80*5|1+1*0|1+1*5|2+l+17*5|1+1+15*0|1+1+18*5|1+1+18*0|1+1*5|2+c*0|3+1u*0+1s*9+4*0+r*9+5*0|2+h3*0+8h*9+1*0|2+3h*0+g5*0*2+9*0+3*0*2+3*0+23*9+3*0|2+oa*0+7t*9+1*0+h*9+3*0|1+2l*0+97*9+1*0|4+7x*6+2*6*7*8+4*6|1+4*0|2+m0*0+ak*a|5+5*0|1+1|1+1"}}},"pad:observatory.guide.experiencingtime:revs:801":{"changeset":"Z:fnr>2|b=12e=15*c+2$me","meta":{"author":"a.EYVsjkr8VHlpFIwi","timestamp":1522933560801}},"pad:observatory.guide.experiencingtime:revs:802":{"changeset":"Z:fnt>1|b=12e=17*c+1$a","meta":{"author":"a.EYVsjkr8VHlpFIwi","timestamp":1522933561494}},"pad:observatory.guide.experiencingtime:revs:803":{"changeset":"Z:fnu>2|b=12e=18*c+2$su","meta":{"author":"a.EYVsjkr8VHlpFIwi","timestamp":1522933562111}},"pad:observatory.guide.experiencingtime:revs:804":{"changeset":"Z:fnw>2|b=12e=1a*c+2$re","meta":{"author":"a.EYVsjkr8VHlpFIwi","timestamp":1522933562556}},"pad:observatory.guide.experiencingtime:revs:805":{"changeset":"Z:fny<1|b=12e=1b-1$","meta":{"author":"a.EYVsjkr8VHlpFIwi","timestamp":1522933562984}},"pad:observatory.guide.experiencingtime:revs:806":{"changeset":"Z:fnx<7|b=12e=14-7$","meta":{"author":"a.EYVsjkr8VHlpFIwi","timestamp":1522933563530}},"pad:observatory.guide.experiencingtime:revs:807":{"changeset":"Z:fnq<2|b=12e=12-2$","meta":{"author":"a.EYVsjkr8VHlpFIwi","timestamp":1522933563984}},"pad:observatory.guide.experiencingtime:revs:808":{"changeset":"Z:fno<2|b=12e=10-2$","meta":{"author":"a.EYVsjkr8VHlpFIwi","timestamp":1522933564484}},"pad:observatory.guide.experiencingtime:revs:809":{"changeset":"Z:fnm>1|b=12e=10*c+1$i","meta":{"author":"a.EYVsjkr8VHlpFIwi","timestamp":1522933565193}},"pad:observatory.guide.experiencingtime:revs:81":{"changeset":"Z:f2n<4|19=b50=8-4$","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1518025944854}},"pad:observatory.guide.experiencingtime:revs:810":{"changeset":"Z:fnn>2|b=12e=11*c+2$s ","meta":{"author":"a.EYVsjkr8VHlpFIwi","timestamp":1522933565690}},"pad:observatory.guide.experiencingtime:revs:811":{"changeset":"Z:fnp>2|b=12e=13*c+2$me","meta":{"author":"a.EYVsjkr8VHlpFIwi","timestamp":1522933566192}},"pad:observatory.guide.experiencingtime:revs:812":{"changeset":"Z:fnr>2|b=12e=15*c+2$as","meta":{"author":"a.EYVsjkr8VHlpFIwi","timestamp":1522933566690}},"pad:observatory.guide.experiencingtime:revs:813":{"changeset":"Z:fnt>3|b=12e=17*c+3$ure","meta":{"author":"a.EYVsjkr8VHlpFIwi","timestamp":1522933567189}},"pad:observatory.guide.experiencingtime:revs:814":{"changeset":"Z:fnw>1|b=12e=1a*c+1$d","meta":{"author":"a.EYVsjkr8VHlpFIwi","timestamp":1522933567710}},"pad:observatory.guide.experiencingtime:revs:815":{"changeset":"Z:fnx>2|b=12e=1b*c+2$. ","meta":{"author":"a.EYVsjkr8VHlpFIwi","timestamp":1522933568190}},"pad:observatory.guide.experiencingtime:revs:816":{"changeset":"Z:fnz>1|b=12e=1d*c+1$E","meta":{"author":"a.EYVsjkr8VHlpFIwi","timestamp":1522933575194}},"pad:observatory.guide.experiencingtime:revs:817":{"changeset":"Z:fo0<1|b=12e=1e-1$","meta":{"author":"a.EYVsjkr8VHlpFIwi","timestamp":1522933576356}},"pad:observatory.guide.experiencingtime:revs:818":{"changeset":"Z:fnz<9|b=12e=1e-9$","meta":{"author":"a.EYVsjkr8VHlpFIwi","timestamp":1522933577389}},"pad:observatory.guide.experiencingtime:revs:819":{"changeset":"Z:fnq<8|b=12e=1e-8$","meta":{"author":"a.EYVsjkr8VHlpFIwi","timestamp":1522933578336}},"pad:observatory.guide.experiencingtime:revs:82":{"changeset":"Z:f2j>1|19=b50=8*5+1$ ","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1518025946314}},"pad:observatory.guide.experiencingtime:revs:820":{"changeset":"Z:fni<9|b=12e=1e-9$","meta":{"author":"a.EYVsjkr8VHlpFIwi","timestamp":1522933579267}},"pad:observatory.guide.experiencingtime:revs:821":{"changeset":"Z:fn9<1|b=12e=1e-1$","meta":{"author":"a.EYVsjkr8VHlpFIwi","timestamp":1522933579766}},"pad:observatory.guide.experiencingtime:revs:822":{"changeset":"Z:fn8<1|b=12e=1e-1$","meta":{"author":"a.EYVsjkr8VHlpFIwi","timestamp":1522933581142}},"pad:observatory.guide.experiencingtime:revs:823":{"changeset":"Z:fn7<1|b=12e=1e-1$","meta":{"author":"a.EYVsjkr8VHlpFIwi","timestamp":1522933581662}},"pad:observatory.guide.experiencingtime:revs:824":{"changeset":"Z:fn6<2|b=12e=1e-2$","meta":{"author":"a.EYVsjkr8VHlpFIwi","timestamp":1522933582166}},"pad:observatory.guide.experiencingtime:revs:825":{"changeset":"Z:fn4<2|b=12e=1e-2$","meta":{"author":"a.EYVsjkr8VHlpFIwi","timestamp":1522933582656}},"pad:observatory.guide.experiencingtime:revs:826":{"changeset":"Z:fn2>1|13=9xx=a3*c+1$b","meta":{"author":"a.EYVsjkr8VHlpFIwi","timestamp":1522933744026}},"pad:observatory.guide.experiencingtime:revs:827":{"changeset":"Z:fn3>1|13=9xx=a4*c+1$o","meta":{"author":"a.EYVsjkr8VHlpFIwi","timestamp":1522933744526}},"pad:observatory.guide.experiencingtime:revs:828":{"changeset":"Z:fn4>1|13=9xx=a5*c+1$t","meta":{"author":"a.EYVsjkr8VHlpFIwi","timestamp":1522933745097}},"pad:observatory.guide.experiencingtime:revs:829":{"changeset":"Z:fn5>1|13=9xx=a6*c+1$h","meta":{"author":"a.EYVsjkr8VHlpFIwi","timestamp":1522933745560}},"pad:observatory.guide.experiencingtime:revs:83":{"changeset":"Z:f2k>1|19=b50=9*5+1$ ","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1518025946816}},"pad:observatory.guide.experiencingtime:revs:830":{"changeset":"Z:fn6>1|13=9xx=a7*c+1$ ","meta":{"author":"a.EYVsjkr8VHlpFIwi","timestamp":1522933746030}},"pad:observatory.guide.experiencingtime:revs:831":{"changeset":"Z:fn7>1|1u=epc=g*c+1$J","meta":{"author":"a.EYVsjkr8VHlpFIwi","timestamp":1522933889096}},"pad:observatory.guide.experiencingtime:revs:832":{"changeset":"Z:fn8>2|1u=epc=h*c+2$un","meta":{"author":"a.EYVsjkr8VHlpFIwi","timestamp":1522933889595}},"pad:observatory.guide.experiencingtime:revs:833":{"changeset":"Z:fna>1|1u=epc=j*c+1$e","meta":{"author":"a.EYVsjkr8VHlpFIwi","timestamp":1522933890096}},"pad:observatory.guide.experiencingtime:revs:834":{"changeset":"Z:fnb>1|1u=epc=k*c+1$ ","meta":{"author":"a.EYVsjkr8VHlpFIwi","timestamp":1522933890606}},"pad:observatory.guide.experiencingtime:revs:835":{"changeset":"Z:fnc>1|1u=epc=l*c+1$2","meta":{"author":"a.EYVsjkr8VHlpFIwi","timestamp":1522933891280}},"pad:observatory.guide.experiencingtime:revs:836":{"changeset":"Z:fnd>1|1u=epc=m*c+1$0","meta":{"author":"a.EYVsjkr8VHlpFIwi","timestamp":1522933892105}},"pad:observatory.guide.experiencingtime:revs:837":{"changeset":"Z:fne>1|1u=epc=n*c+1$1","meta":{"author":"a.EYVsjkr8VHlpFIwi","timestamp":1522933892665}},"pad:observatory.guide.experiencingtime:revs:838":{"changeset":"Z:fnf>1|1u=epc=o*c+1$7","meta":{"author":"a.EYVsjkr8VHlpFIwi","timestamp":1522933893215}},"pad:observatory.guide.experiencingtime:revs:839":{"changeset":"Z:fng>1|1u=epc=p*c+1$ ","meta":{"author":"a.EYVsjkr8VHlpFIwi","timestamp":1522933894040}},"pad:observatory.guide.experiencingtime:revs:84":{"changeset":"Z:f2l>1|19=b50=a*5+1$ ","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1518025947317}},"pad:observatory.guide.experiencingtime:revs:840":{"changeset":"Z:fnh>2|1u=epc=q*c+2$- ","meta":{"author":"a.EYVsjkr8VHlpFIwi","timestamp":1522933894564}},"pad:observatory.guide.experiencingtime:revs:841":{"changeset":"Z:fnj>1-3*d+4$__% ","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523133185558}},"pad:observatory.guide.experiencingtime:revs:842":{"changeset":"Z:fnk<cm|6=38=2u|1-5w-c9*d|1+5f*d+b4|2=10=o|2-ck-mg*d|2+9x*d+e3$s on a large extent on expectations, or the potential of a future event. Any observing or experience of difference, of being related to an earlier or later, is linked with an experience of time.\nHowever, how is the time of day when the time of day is in the process of being affected by both decisions and implementations, both for humans and machines. Also, the experience of time is a conglomerate of different experiences: time as a common moment, the duration of a certain time, time as cyclical events, historical time, and so on. Searching for human beings and their experience and time islife experience that is related to natural life cycles that are also influenced by both technology and social conditions.\nThe first time cycle is the day-night time cycle. Humans do their stuff during the day, but need to sleep. The night is the preferred time for sleep, but the availability of artificial light and the need for long-distance coordination\nPart of this experience is being measured. E arly time measurement was linked to the observation of natural conditions like sunrise and sunset. (% CARLINSAYS: I suggest \"Measuring of such sun cycles (which is in fact an earth\") cycle), but it is very time and season dependent. More light during summer than winter implied that they were longer in winter. Were at greater latitudes, while near the equator such changes are limited. In other words, time measured by sundials provided a local common reference","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523133455214}},"pad:observatory.guide.experiencingtime:revs:843":{"changeset":"Z:fay<8|7=bh-9*d+1$B","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523133456132}},"pad:observatory.guide.experiencingtime:revs:844":{"changeset":"Z:faq>2|7=bh=1*d+2$ut","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523133456633}},"pad:observatory.guide.experiencingtime:revs:845":{"changeset":"Z:fas>1|7=bh=3*d+1$ ","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523133457132}},"pad:observatory.guide.experiencingtime:revs:846":{"changeset":"Z:fat<2|7=bh=4-2$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523133464322}},"pad:observatory.guide.experiencingtime:revs:847":{"changeset":"Z:far>3|7=bh=5*d+3$hat","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523133464822}},"pad:observatory.guide.experiencingtime:revs:848":{"changeset":"Z:fau<1|b=y2=18-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523133477760}},"pad:observatory.guide.experiencingtime:revs:849":{"changeset":"Z:fat<1|b=y2=69-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523133516362}},"pad:observatory.guide.experiencingtime:revs:85":{"changeset":"Z:f2m>1|19=b50=b*5+1$ ","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1518025949062}},"pad:observatory.guide.experiencingtime:revs:850":{"changeset":"Z:fas<1|b=y2=68-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523133522196}},"pad:observatory.guide.experiencingtime:revs:851":{"changeset":"Z:far<7|b=y2=6h-7$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523133535511}},"pad:observatory.guide.experiencingtime:revs:852":{"changeset":"Z:fak<f|b=y2=3z-f$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523133540971}},"pad:observatory.guide.experiencingtime:revs:853":{"changeset":"Z:fa5<3|9=nh=2g-4*d+1$i","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523133580026}},"pad:observatory.guide.experiencingtime:revs:854":{"changeset":"Z:fa2>4|9=nh=2h*d+4$n tu","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523133580523}},"pad:observatory.guide.experiencingtime:revs:855":{"changeset":"Z:fa6>2|9=nh=2l*d+2$rn","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523133581023}},"pad:observatory.guide.experiencingtime:revs:856":{"changeset":"Z:fa8<a|b=y5=40-a$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523133597086}},"pad:observatory.guide.experiencingtime:revs:857":{"changeset":"Z:f9y<1|b=y5=3z-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523133597587}},"pad:observatory.guide.experiencingtime:revs:858":{"changeset":"Z:f9x<3x|d=1cf=b|1-14x-bt*d|1+11y*d+av$ is the time of day when the world is flatter the earth's spherical geometry. When humans became aware of earth, they responded by flattening and linearising time. Mechanical clocks allowed to unify time lengths and thereby aussi standardi z e time. Physical observation and all spells of economic processes needed Such standardi z ed time measurement. Early versions of such time measurement, such as hourglasses, exist but disconnected from day time measurement. Mechanical clocks allowed to unify different time cycles and scales. It also allowed standard zation of time over longer distances, departing from the local time to time zones, which were less strictly related to the seasonal rhythm of the sun. Long distance trade, industriali z ation and later long-distance communication by electro-magnetic signals (similar to the speed of light) Demanded more geographical coordination. In the nineteenth century , coordination developed through clock networks, with a master clock driving the slave clocks. Nowadays we work with atom ic clocks and has overall Coordinated Universal Time or UTC have a reference to qui geographical time zones are connected. Humans organi zetheir activities accordingly, if necessary by de-linking from the solar rhythm. The borders of time zones diverge very often from the longitudinal lines for economic and political reasons.\nA similar socialization and globalization of time occurred for computers. Where in the early computer age Time Was set and 'counted by locally Each machine it is now common to Continuously offi z e time over the I nternet through time servers and the Network Time Protocol. Humans get woken, cron jobs get triggered, precision bombs get guided , and trains count their delays in the master c","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523133604558}},"pad:observatory.guide.experiencingtime:revs:859":{"changeset":"Z:f60<1|d=1cf=9g-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523133605051}},"pad:observatory.guide.experiencingtime:revs:86":{"changeset":"Z:f2n>1|19=b50=c*5+1$ ","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1518025949560}},"pad:observatory.guide.experiencingtime:revs:860":{"changeset":"Z:f5z<1|d=1cf=9h-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523133605551}},"pad:observatory.guide.experiencingtime:revs:861":{"changeset":"Z:f5y<1|d=1cf=6y-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523133608801}},"pad:observatory.guide.experiencingtime:revs:862":{"changeset":"Z:f5x<1|d=1cf=6z-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523133609518}},"pad:observatory.guide.experiencingtime:revs:863":{"changeset":"Z:f5w<1|d=1cf=kt-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523133613099}},"pad:observatory.guide.experiencingtime:revs:864":{"changeset":"Z:f5v<1|d=1cf=ku-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523133613815}},"pad:observatory.guide.experiencingtime:revs:865":{"changeset":"Z:f5u<1|d=1cf=fp-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523133616984}},"pad:observatory.guide.experiencingtime:revs:866":{"changeset":"Z:f5t<1|d=1cf=pj-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523133621098}},"pad:observatory.guide.experiencingtime:revs:867":{"changeset":"Z:f5s<1|d=1cf=sw-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523133624507}},"pad:observatory.guide.experiencingtime:revs:868":{"changeset":"Z:f5r<1|d=1cf=wo-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523133627057}},"pad:observatory.guide.experiencingtime:revs:869":{"changeset":"Z:f5q>1|d=1cf=wq*d+1$ ","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523133631000}},"pad:observatory.guide.experiencingtime:revs:87":{"changeset":"Z:f2o>1|19=b50=d*5+1$ ","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1518025950062}},"pad:observatory.guide.experiencingtime:revs:870":{"changeset":"Z:f5r<1|e=2ef=5d-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523133636468}},"pad:observatory.guide.experiencingtime:revs:871":{"changeset":"Z:f5q<1|e=2ef=5w-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523133640790}},"pad:observatory.guide.experiencingtime:revs:872":{"changeset":"Z:f5p<1|e=2ef=9h-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523133642287}},"pad:observatory.guide.experiencingtime:revs:873":{"changeset":"Z:f5o<1|e=2ef=3f-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523133651357}},"pad:observatory.guide.experiencingtime:revs:874":{"changeset":"Z:f5n<1|e=2ef=3o-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523133662523}},"pad:observatory.guide.experiencingtime:revs:875":{"changeset":"Z:f5m<2|e=2ef=3m-2$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523133663024}},"pad:observatory.guide.experiencingtime:revs:876":{"changeset":"Z:f5k<1|e=2ef=3v-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523133666767}},"pad:observatory.guide.experiencingtime:revs:877":{"changeset":"Z:f5j>1|e=2ef=3v*d+1$ ","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523133667417}},"pad:observatory.guide.experiencingtime:revs:878":{"changeset":"Z:f5k<1|e=2ef=3v-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523133667919}},"pad:observatory.guide.experiencingtime:revs:879":{"changeset":"Z:f5j>1|e=2ef=3v*d+1$b","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523133668564}},"pad:observatory.guide.experiencingtime:revs:88":{"changeset":"Z:f2p<1|1a=b69=18-1$","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1518025996246}},"pad:observatory.guide.experiencingtime:revs:880":{"changeset":"Z:f5k>1|e=2ef=3w*d+1$y","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523133669062}},"pad:observatory.guide.experiencingtime:revs:881":{"changeset":"Z:f5l>2|e=2ef=3x*d+2$ e","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523133669564}},"pad:observatory.guide.experiencingtime:revs:882":{"changeset":"Z:f5n>1|e=2ef=4a*d+1$,","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523133671379}},"pad:observatory.guide.experiencingtime:revs:883":{"changeset":"Z:f5o<1|e=2ef=4w-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523133674638}},"pad:observatory.guide.experiencingtime:revs:884":{"changeset":"Z:f5n>1|e=2ef=4w*d+1$c","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523133675289}},"pad:observatory.guide.experiencingtime:revs:885":{"changeset":"Z:f5o<3|e=2ef=5d-3$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523133699604}},"pad:observatory.guide.experiencingtime:revs:886":{"changeset":"Z:f5l<1|e=2ef=5c-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523133700102}},"pad:observatory.guide.experiencingtime:revs:887":{"changeset":"Z:f5k<3|e=2ef=59-3$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523133700666}},"pad:observatory.guide.experiencingtime:revs:888":{"changeset":"Z:f5h>2|e=2ef=59*d+2$ca","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523133703938}},"pad:observatory.guide.experiencingtime:revs:889":{"changeset":"Z:f5j>4|e=2ef=5b*d+4$libr","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523133704449}},"pad:observatory.guide.experiencingtime:revs:89":{"changeset":"Z:f2o>1|1a=b69=18*5|1+1$\n","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1518025996743}},"pad:observatory.guide.experiencingtime:revs:890":{"changeset":"Z:f5n>3|e=2ef=5f*d+3$ate","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523133704942}},"pad:observatory.guide.experiencingtime:revs:891":{"changeset":"Z:f5q<7n|h=37s=r-xu*d+qw|2=2=b*d+1|2=k=85-6b*d+5l$ , and death rhythms, originating from the human experience, have been projected on all spells of phenomena. Religions t ry (% CARLINSAYS: \"try\" or \"tried and continue to try\") to explain the origin of everything, while also often predicting the end in apocalyptic visions. The demise of religion at the hand of science did not let such generational visions disappear. They got new expressions in the scientific theories of the beginning (big bang, evolution) and end (the death heath of the universe, the end of the earth at the final burnout phase of the sun) of everything. Similar apocalyptic visions are now embedded in design decisions (Y2K, the end of Unix-time in 2038). In all versions the end is often linked to the specific design of time (eg the end of the Maya calendar, millenarian movements). But just like religious visions can extend their apocalypse in a new versions (eg the always near but always delayed apocalypse of the Saints of the last days), of counting cyclical ticks. This produces a single cyclical, and completely linear, time rhythm in the hardware. In contrast to the earthly or natural cycles, there is no difference between two or more","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523133717929}},"pad:observatory.guide.experiencingtime:revs:892":{"changeset":"Z:ey3<3r|g=2rp=4e-3r$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523133719469}},"pad:observatory.guide.experiencingtime:revs:893":{"changeset":"Z:euc<1|h=341=43-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523133728485}},"pad:observatory.guide.experiencingtime:revs:894":{"changeset":"Z:eub<1e|h=341=47-1f*d+1$\\","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523133731619}},"pad:observatory.guide.experiencingtime:revs:895":{"changeset":"Z:esx<1|h=341=47-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523133732112}},"pad:observatory.guide.experiencingtime:revs:896":{"changeset":"Z:esw<1|h=341=46-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523133732637}},"pad:observatory.guide.experiencingtime:revs:897":{"changeset":"Z:esv<1|h=341=45-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523133733966}},"pad:observatory.guide.experiencingtime:revs:898":{"changeset":"Z:esu<1|j=3u8=b-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523133743521}},"pad:observatory.guide.experiencingtime:revs:899":{"changeset":"Z:est<1|l=3v3=af-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523133765502}},"pad:observatory.guide.experiencingtime:revs:9":{"changeset":"Z:f1e>1|g=4bk*0+1$#","meta":{"author":"a.I4FbrrCTDQNN8GIf","timestamp":1517420642493}},"pad:observatory.guide.experiencingtime:revs:90":{"changeset":"Z:f2p>a|1b=b7i*5+a$          ","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1518025997753}},"pad:observatory.guide.experiencingtime:revs:900":{"changeset":"Z:ess<5d|s=5xv=2g|1-6d-bu*d|1+3m*d+98$is in the process of making the time to do it. The scheduler is the big organi z er of time in the ecology of internal processes.\nSystem time is externally counted and therefore an external global variable to these processes. They (% CARLINSAYS: they refer to the processes? (Correct) if not then clarified) can get to the kernel to get the system time. This software is delivered by the software with a range of systems and the programming time of the program. ","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523133783759,"atext":{"text":"__% NOPUBLISH__\n% SHOW: tgsoimages.svg hans H\n\n\n% HEADER: How humans and machines negotiate the experience of time\n\nThe experience of time is an essential element of any form of experience or cognition. Emotions depends on a large extent on expectations, or the potential of a future event. Any observing or experience of difference, of being related to an earlier or later, is linked with an experience of time.\nBut what is the time of day when the time of day is in the process of being affected by both decisions and implementations, both for humans and machines. Also, the experience of time is a conglomerate of different experiences: time as a common moment, the duration of a certain time, time as cyclical events, historical time, and so on. Searching for human beings and their experience and time is an interesting avenue to explore.\n\nHumans have developed a life experience that is related to natural life cycles that are in turn influenced by both technology and social conditions.\nThe first time cycle is the day-night time cycle. Humans do their stuff during the day, but need to sleep. The night is the preferred time for sleep, but the availability of artificial light and the need for long-distance coordination\nPart of this experience is being measured. Early time measurement was linked to the observation of natural conditions like sunrise and sunset. Measuring of such sun cycles (which is in fact an earth cycle), is very time and season dependent. More light during summer than winter implied that they were longer in winter. Were at greater latitudes, while near the equator such changes are limited. In other words, time measured by sundials provided a local common reference time, but not one over longer distances.\n\nThis season is the time of day when the world is flatter the earth's spherical geometry. When humans became aware of earth, they responded by flattening and linearising time. Mechanical clocks allowed to unify time lengths and thereby aussi standardize time. Physical observation and all spells of economic processes needed Such standardized time measurement. Early versions of such time measurement, such as hourglasses, exist but disconnected from day time measurement. Mechanical clocks allowed to unify different time cycles and scales. It also allowed standardzation of time over longer distances, departing from the local time to time zones, which were less strictly related to the seasonal rhythm of the sun. Long distance trade, industrialization and later long-distance communication by electro-magnetic signals (similar to the speed of light) Demanded more geographical coordination. In the nineteenth century, coordination developed through clock networks, with a master clock driving the slave clocks. Nowadays we work with atomic clocks and has overall Coordinated Universal Time or UTC have a reference to qui geographical time zones are connected. Humans organize their activities accordingly, if necessary by de-linking from the solar rhythm. The borders of time zones diverge very often from the longitudinal lines for economic and political reasons.\nA similar socialization and globalization of time occurred for computers. Where in the early computer age Time Was set and counted locally by each machine, it is now common to continuously calibrate time over the Internet through time servers and the Network Time Protocol. Humans get woken, cron jobs get triggered, precision bombs get guided, and trains count their delays in the master clock of the US Naval Observatory, only differing by tiny variations in latency times. \n\nHumans have also developed ways to relate to time on longer scales, which were originally linked to natural rhythms: years, life cycles. Calendar systems are used to determine seasonal agricultural needs (when to plant, when to harvest), while they also made it possible to keep track of life cycles and historical time. Again, such calendar systems have been very diverse and local, but have been slowly fused to a couple of dominant models. \nGenerational or birth, life , and death rhythms, originating from the human experience, have been projected on all spells of phenomena. Religions try to explain the origin of everything, while also often predicting the end in apocalyptic visions. The demise of religion at the hand of science did not let such generational visions disappear. They got new expressions in the scientific theories of the beginning (big bang, evolution) and end (the death heath of the universe, the end of the earth at the final burnout phase of the sun) of everything. Similar apocalyptic visions are now embedded in design decisions (Y2K, the end of Unix-time in 2038). In all versions the end is often linked to the specific design of time (eg the end of the Maya calendar, millenarian movements). But just like religious visions can extend their apocalypse in a new versions (eg the always near but always delayed apocalypse of the Saints of the last days),\n\n## The time(s) of the machine\n\nMachines also have their natural cycle: the vibrating pulses of the internal crystal clock drives the cycles according to which the processor works. All PCs have such a Real Time Clock (RTC), independent of the processor. The time of the computer is linked to this clock cycle, as it consists of counting cyclical ticks. This produces a single cyclical, and completely linear time rhythm in the hardware. In contrast to the earthly or natural cycles, there is no difference between two or more cycles. This makes a computer into a monadic time capsule, disconnected from the outside rhythms.\nThe time experience in the software is in principle based on this local time cycle. However, once computers and software gets linked and networked, they have to negotiate and synchronize their times.\nTo start, time in a computer is no unique or unified experience. Several hardware components and a diverse collection of software organised in layers and processes create a whole ecology of interdependent time experiences. The operating system experiences other software components, and users through them, as a bunch of processes screaming for attention. One of the most pushy interrupts is the timer forcing the processor to count another click and update the system time. An internal kernel process performs the negotiation of time through which the clock count is linked with a system time. \nThis starts already during the booting process, when the operating system is determining the clock signal frequency. PCs have another time-measuring device, the Programmable Interval Timer\n(PIT), which can be set by the processor at a defined frequency. During a short time indicated by this PIT, the clock cycles of the RTC get counted and the frequency of the RTC gets calculated. Several other timing devices are present in the hardware, synchronized by kernel processes into a range of times available for the operating system and the processes. As said, one of these times is available as system time and gets communicated to all other processes when demanded. \nWith the advent of the Internet computers are not monads anymore, but are socialized in the common rhythm broadcasted with the Network Time Protocol. The local system time serves as back up, but gets continuously adapted to the network time. On a Ubuntu/Debian machine these times can be checked with timedatectl status. The timedatectl command enables to change these synchronisation processes. The actual synchronisation is done by the timesyncd process and the time servers to be used can be set in the /etc/systemd/timesyncd.conf file. Other Linux flavours work with the older ntp process which can be configured in /etc/ntp.conf. \n\nThe actual process time is completely different from this system time. Most of the time is in the process of making the time to do it. The scheduler is the big organi z er of time in the ecology of internal processes.\nSystem time is externally counted and therefore an external global variable to these processes. They (% CARLINSAYS: they refer to the processes? (Correct) if not then clarified) can get to the kernel to get the system time. This software is delivered by the software with a range of systems and the programming time of the program. \nThe difference between the actual process time and system time does not appear in how time is perceived by the process. The process only perceives time as the difference between two demands of system time and is oblivious of its time being put on hold. The processor on the other hand spent most of its processing time as idle time: a processor is doing time waiting for slow system components like memory and even slower hard drives and network connections to respond and switches between checking for responses of these laggards. L’enfer du temps perdu, ce sont les autres.\n\nConnecting computers into a network demands new negotiations of time. We already mentioned the networked and globalised UTC timekeeping. But temporal negotiations happen on all levels of the system. Network protocols have timed choreographies to make connections and proceed with communications, with time out failsafes to break off when something goes wrong. The timing of an action is an essential component making the difference between a meaningful signal and noise.\nUsing a browser over http to connect to a website, or more accurately the server providing the website on your request, is built on a discontinuous time practice. In a REST architecture the server just deals with a queue of requests and does not see continuity over time between certain requests from a single user.  New temporal practices have been designed and technically implemented. Through cookies the server is able to recognise users and their state in time. \nThe border between your computer and servers on the internet becomes fuzzy when external software is dropped on your computer and runs in your webbrowser. Javascript modules get dropped on your computer and can start performing tasks on demand of an external server, be it rendering a graph or mining digital money. Similarly, the browser becomes a border where time gets negotiated through synchronisation processes.\nWhat time exactly is depends on the task at hand. Each tool contains its specific temporal practices, dependent on the speed and subject matter of the synchronization process needed.\nFor example, for collaborative document editing tools like Google Docs or Etherpad it is a sequence of versions of the document. A range of strategies have been developed to allow to synchronize the changes made by different users with the least amount of conflict. \nThe Easysync-protocol used by Etherpad constructs a document from changesets. A changeset details the edits made by a user or the difference with the former local version of the text. In other words, the flow of time is represented through a series of changesets which can be summed to the present state. The server keeps a sequence of acknowledged changesets. These acknowledged changesets represent the current common state and get communicated to all clients. \nLocally each client builds its present state by summing up the acknowledged changesets received from the server, and with the local changesets which are not yet acknowledged. Each client communicates its local changesets, every 500 ms after the latest acknowledgment.  As this changeset can be relative to an earlier version the server first recalculates a changeset relative to the current version. Then it sends an acknowledgment to the sender and the changeset to the other clients. \nDifferent collaborative document editing tools use different methods to deal with conflicts, which also are dependent on the purpose or content of the document. Conflicts between numeric edits in a collaborative spreadsheet are dealt with differently than conflicts between text edits. But what is common to both is that the present gets continuously constructed both on the server and on the clients and negotiated through the specific protocol. The user can always access its local copy of the text and create its local present, but this local present then gets negotiated with the server to create a common present. (% CARLINSAYS:These last two sentences are key and could be clearer. I have tried an edit that maybe does so?)\nAnd every tool rings also its own disasters and apocalyptic experiences through the collapse of the negotiation process and thereby of the common state.\n\nThis negotiation of time is in the first place a negotiation of the present. But also what is past and future gets constructed in this present. The ordered sequence connected to the system time(s) already imply such a past and future. But the construction of a past consists also of a negotiation of what remains and what gets forgotten. Data gets stored in memory or written to storage devices, while the operating systems assigns time stamps to these traces of the present becoming past and writes other traces to a range of log files. \nAs writers trying to capture their stream of consciousness already experienced, it is impossible to completely store the present for future use as past. There will always be a remainder that escapes and can not be written down. Similarly an operating systems can not keep a log of all its operations without getting stuck in an infinite regress in which it tries to log its logging operations. What will be the past for a future present needs to be constructed and selected. Everything else gets forgotten.\nLinux stores its logs in /var/log, while all sorts of programs can create their own logs. All these logs are specific histories, for example of what programs got installed. To get an idea of your past on a Linux system in the file system, you can collect the timestamps of all files with:\n\n% -----------------\n\nos.system(\"ls -R -l --time-style=long-iso \\\n           > modlistsystem-long-iso.txt\")\nos.system(\"ls -R -lu --time-style=long-iso \\\n           > accesslistsystem-long-iso.txt\")\n\n% SRCCODE:\n\n## Renegotiating time with your computer: sundial network time.\n\nTechnology has been a tool through which humans create distance from natural cycles and design their own time experiences. This means we can critically intervene in the functioning of the technology and develop alternative time practices and experiences. As an example we put forward as a not-yet-existing-proof of concept the possibility to let the computer work according to sundial time.\nIs it possible to reconfigure the time of the computer and rewire the connections with human and natural rhythms? Would we be able to let the computer function in an older human time experience, e.g. the time of the sundial? How can such sundial experience be built into the system and what would be the impact on the user?\nSundial time is a geographically and seasonally localised time. It also includes a distinction between day and night. The night is ‘out of time’. This distinction has been extradited from linear time practices, where the amount of light is just a variable external to steady beat of time. Linear time turns the night into economically productive time. Running your computer on sundial time re-introduces the night in your system.\n\nAn intervention to introduce sundial time in your computer is possible in the whole range of places we discussed where time gets negotiated. The most fundamental but also most difficult route would be to exchange the clock with something reflecting a more natural rhythm. However, as we have seen that this clock has become only a back up tool and that the actual system time is always renegotiated with other systems connected through the network, another renegotiation process can be introduced. Therefore, the most easy way to introduce sundial time would be to reconfigure the timesyncdor ntp processes and make them listen to an alternative sundial time server. Such a sundial time server can be built in different ways. A hardware version can be made of a sundial combined with light sensors, measuring the location of the shadow through the difference in light and deriving the sundial time from this location. This would link the time server to the actual earthly day and night cycle. A simulated version could be a local piece of software which looks up the timing of sunrise and sunset at the specific location and day. Based on this information it recalculates the local sundial time, which it provides through the NTP protocol. The local computer receives this sundial time from the nearest sundial time server and continuously adapts its system time, as it does now already based on UTC. Further, it can be programmed to go into sleep modus during the night and to wake up only when a sunrise signal is received from the time server.\n\nLetting a computer run on sundial time is a conscious effort to disconnect it from human-made linear time and to reconnect it with the old earth-driven cycles and the ancient time experience by humans. The unified time of UTC and the time zones gets broken up into extremely localized time servers, and the difference between day and night gets introduced into the functioning of the computer. \nThis re-enactment of such cycles through the computer will remind human users that the experience of time is a socially negotiated and technically implemented experience. Further, a computer running on sundial time would be a great piece of nannyware nudging the user to live in harmony with his natural environment and a synchronization tool to re-establish the link between the users bio-rhythm and the earthly day and night cycle. It would also be a great reminder why humans tried in the first place to escape from these earthly rhythms through technology and started hacking time.\n\nHans Lammerant, June 2017 - January 2018\n\n% NOTE: -\n This text was written in and in resistance/conflict to WTC time, which is exemplary for the bureaucratic office time experience. The WTC building boots up at 9AM and is turned off in several steps (at 5PM the air conditioning is turned off, later entrances close) into a wake state. The concierge can let you in and out through the night side entry, but main life support systems remain turned off outside office hours. This wake state continues during the weekend, turning the building into a glass house with limited air in storage. On Monday morning this bureaucratic time capsule revives from its slumber. A suffocating experience, but actually the building is a great piece of nannyware nudging towards a healthy office rhythm without too much extra hours outside the herd work ethic.\n\nSuch office time can also be implemented and negotiated on your local computer. A small Proof of Concept was the adapted bashrc on the etherbox simulating a system getting bored and stealing time. This can be further developed by including a differentiated response during versus outside office hours, aging (slower when timestamp of original install is more remote in time), etc.\n\n\n\n\n\n\n","attribs":"*d+4+b*a|1+1*a+r*5+2*b|1+1*5|1+1*0|1+1*5+9*0|2+1n*0+2u*d|1+5f*d+b0*0|2+10*9+o*d|2+a0*d+d3*9|1+16*0|1+1*0+b*d|1+11p*d+au*0|2+2g*0+6*9+5*0+1i*9+1*0+2g*c+3*9+1*0+2o*9+g*0+3a*9+4*0+1*9+5*0|1+1a*0+r*d+pe*0|4+x*9+d*0+1f*9+3*0+6a*d+5k*0|4+u4*0+2y*9+1*0|1+ab*0+n*9+1*0+o*9+1*0+w*9+1*0+x*9+2*0+54*0*2+i*0+6*0*2+b*0+2u*0*2+9*0+3q*0*2+3*0|2+1h*0+2g*d|1+3m*d+98*0|4+t5*0+1i*c+f*9+1*0|2+mo*0+4g*9+1*0|4+yg*0+81*9+8*0+7*9+8*0+1f*c+5*0+4n*9+i*0+1*9+5*0+1o*9+2*a+1*9+2z*0|4+ja*0+6c*9+a*0|1+7h*0+80*5|1+1*0|1+1*5|2+l+17*5|1+1+15*0|1+1+18*5|1+1+18*0|1+1*5|2+c*0|3+1u*0+1s*9+4*0+r*9+5*0|2+h3*0+8h*9+1*0|2+3h*0+g5*0*2+9*0+3*0*2+3*0+23*9+3*0|2+oa*0+7t*9+1*0+h*9+3*0|1+2l*0+97*9+1*0|2+73*0+g*c+c*0|2+e*6+2*6*7*8+4*6|1+4*0|2+m0*0+ak*a|5+5*0|1+1|1+1"}}},"pad:observatory.guide.experiencingtime:revs:901":{"changeset":"Z:enf<24|t=63x=2t-24$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523133789590}},"pad:observatory.guide.experiencingtime:revs:902":{"changeset":"Z:elb<1|t=63x=2s-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523133791849}},"pad:observatory.guide.experiencingtime:revs:903":{"changeset":"Z:ela<1|t=63x=2r-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523133793867}},"pad:observatory.guide.experiencingtime:revs:904":{"changeset":"Z:el9>2|t=63x=2r*d+2$se","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523133794364}},"pad:observatory.guide.experiencingtime:revs:905":{"changeset":"Z:elb>3|t=63x=2t*d+3$ ro","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523133794875}},"pad:observatory.guide.experiencingtime:revs:906":{"changeset":"Z:ele<2|t=63x=2u-2$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523133795378}},"pad:observatory.guide.experiencingtime:revs:907":{"changeset":"Z:elc>2|t=63x=2u*d+2$pr","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523133795892}},"pad:observatory.guide.experiencingtime:revs:908":{"changeset":"Z:ele>4|t=63x=2w*d+4$oces","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523133796389}},"pad:observatory.guide.experiencingtime:revs:909":{"changeset":"Z:eli>3|t=63x=30*d+3$ses","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523133796891}},"pad:observatory.guide.experiencingtime:revs:91":{"changeset":"Z:f2z>1|1b=b7i=a*5+1$ ","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1518025999937}},"pad:observatory.guide.experiencingtime:revs:910":{"changeset":"Z:ell<6h|w=6rd=38|6-1nv-df*d|6+1je*d+bf$zed UTC timekeeping. Temporal goal negotiations happen on all levels of the system. Network protocols have timed choreographies to make connections and proceed with communications, with time out fails to break off when something goes wrong. The timing of an action is an essential component making the difference between a meaningful signal and noise.\nUsing a browser over http to connect to a website, or more accurately the server providing the website on your request, is built on a discontinuous time practice. In a REST architecture the server just deals with a queue of requests and does not see continuity over time between certain requests from a single user.  New temporal practices have been designed and technically implemented. Through cookies the server is able to recognise users and their state in time. \nThe border between your computer and servers on the internet becomes fuzzy when external software is dropped on your computer and runs in your webbrowser. Javascript modules get dropped on your computer and can start performing tasks on an external server. Similarly, the browser becomes a border where time gets negotiated through synchronization processes.\nWhat time exactly is on the task at hand. Each tool contains icts specific temporal practices, dependent on the speed and subject matter of the offi z ation process needed.\nFor example, for collaborative document editing tools like Google Docs or Etherpad it is a sequence of versions of the document. A range of strategies have been developed to reduce the costs of conflict. \nThe Easysync-protocol used by Etherpad constructs a document from changesets. A changeset details the edits made by a user or the difference with the train local version of the text. In other words, the flow of time is represented through a series of changes that can be summed up to the present state. The server keeps a sequence of admits changesets. These changes changes represent the current common state and get to all customers. \nLocally each client builds its present state by summing up the rate of change, and is not yet acknowledged. Each client communicates its local changesets, every 500ms after the latest acknowledgment. As this changeset may be related to an earlier version of the first recalculates a changeset relative to the current version. Then it sends an acknowledgment to the sender and the changeset to the other customer","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523133811523}},"pad:observatory.guide.experiencingtime:revs:911":{"changeset":"Z:ef4>1|7=bh=by*d|1+1$\n","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523134007617}},"pad:observatory.guide.experiencingtime:revs:912":{"changeset":"Z:ef5>1|8=ng*d|1+1$\n","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523134008116}},"pad:observatory.guide.experiencingtime:revs:913":{"changeset":"Z:ef6>da|9=nh*d+da$e. However, how the actual experience of time is shaped is strongly influenced by all sort of design decisions and implementations, both for humans and machines. Also, the experience of time is a conglomerate of different experiences: time as a common moment, the duration of a certain time, time as cyclic events, historical time, and so on. Researching how humans and machines experience time and negotiate their time experiences is therefore an interesting avenue to explore.","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523134008625}},"pad:observatory.guide.experiencingtime:revs:914":{"changeset":"Z:esg<8|7=bh-9*d+1$H","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523134014100}},"pad:observatory.guide.experiencingtime:revs:915":{"changeset":"Z:es8<1|7=bh-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523134014969}},"pad:observatory.guide.experiencingtime:revs:916":{"changeset":"Z:es7<3|9=n8-3$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523134021459}},"pad:observatory.guide.experiencingtime:revs:917":{"changeset":"Z:es4>1|9=n8=8f*d+1$a","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523134033969}},"pad:observatory.guide.experiencingtime:revs:918":{"changeset":"Z:es5>1|9=n8=8g*d+1$l","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523134034464}},"pad:observatory.guide.experiencingtime:revs:919":{"changeset":"Z:es6<bp|7=bh-bp$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523134044155}},"pad:observatory.guide.experiencingtime:revs:92":{"changeset":"Z:f30>1|1b=b7i=b*5+1$ ","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1518026000440}},"pad:observatory.guide.experiencingtime:revs:920":{"changeset":"Z:egh<1|8=bi|1-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523134045642}},"pad:observatory.guide.experiencingtime:revs:921":{"changeset":"Z:egg<1|7=bh|1-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523134046141}},"pad:observatory.guide.experiencingtime:revs:922":{"changeset":"Z:egf>1|9=os=44*d|1+1$\n","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523134125082}},"pad:observatory.guide.experiencingtime:revs:923":{"changeset":"Z:egg>45|a=sx*d+45$Humans have developed a time experience which was linked to natural life cycles, but it has been influenced by both technology and social conditions.","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523134125578}},"pad:observatory.guide.experiencingtime:revs:924":{"changeset":"Z:ekl<8|f=2jw=59-9*d+1$s","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523136963705}},"pad:observatory.guide.experiencingtime:revs:925":{"changeset":"Z:ekd>2|f=2jw=5a*d+2$yn","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523136964205}},"pad:observatory.guide.experiencingtime:revs:926":{"changeset":"Z:ekf>4|f=2jw=5c*d+4$chrn","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523136964711}},"pad:observatory.guide.experiencingtime:revs:927":{"changeset":"Z:ekj<1|f=2jw=5f-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523136965204}},"pad:observatory.guide.experiencingtime:revs:928":{"changeset":"Z:eki>1|f=2jw=5f*d+1$n","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523136965704}},"pad:observatory.guide.experiencingtime:revs:929":{"changeset":"Z:ekj<1|f=2jw=5f-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523136966212}},"pad:observatory.guide.experiencingtime:revs:93":{"changeset":"Z:f31<2|19=b50=c-2$","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1518026019667}},"pad:observatory.guide.experiencingtime:revs:930":{"changeset":"Z:eki>4|f=2jw=5f*d+4$oniz","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523136966729}},"pad:observatory.guide.experiencingtime:revs:931":{"changeset":"Z:ekm>1|f=2jw=5j*d+1$e","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523136967227}},"pad:observatory.guide.experiencingtime:revs:932":{"changeset":"Z:ekn<1|t=63e=4m-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523136974605}},"pad:observatory.guide.experiencingtime:revs:933":{"changeset":"Z:ekm<1|t=63e=4n-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523136975409}},"pad:observatory.guide.experiencingtime:revs:934":{"changeset":"Z:ekl<8a|n=4h2=13|4-13k-gm*d|4+x3*d+76*d*2+i*d+7*d*2+b*d+2k*d*2+9*d+3e*d*2+3*d+d$based on this local time cycle. However, they have to negotiate and synchronize their times.\nTo start, time in a computer is no unique or unified experience. Several hardware components and a diverse collection of software organized in layers and processes of interdependent time experiences. The operating system experiences other software components, and the users through them, as a bunch of processes screaming for attention. One of the most pushy interrupts is the timer forcing the processor to count another click and update the system time. An internal kernel process performs the negotiation of time with which the clock is linked to a system time. \nThis starts when the operating system is determining the clock signal frequency. PCs have another time-measuring device, the Programmable Interval Timer\n(PIT), which can be set by the processor at a defined frequency. During a short time indicated by this PIT , the clock cycles of the RTC get counted and the frequency of the RTC gets calculated. Several other timing devices are present in the hardware, synchronized by kernel processes in a range of times for the operating system and the processes. As said, one of these times \nWith the advent of the I nternet computers are no t monads anymore, are intended sociali z ed in the common rhythm broadcast ed with the Network Time Protocol. The local system time serves as back up. We have Ubuntu / Debian machine that can be checked with timedatectl status . The timedatectl command enables these synchronization processes. The actual synchronization is done by the timesyncd process and the time servers can be set in the /etc/systemd/timesyncd.conf file. Other Linux flavors work with the older ntp process that","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523136978387}},"pad:observatory.guide.experiencingtime:revs:935":{"changeset":"Z:ecb<1|r=5f8=o-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523136978870}},"pad:observatory.guide.experiencingtime:revs:936":{"changeset":"Z:eca<1|r=5f8=1c-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523136980684}},"pad:observatory.guide.experiencingtime:revs:937":{"changeset":"Z:ec9<1|r=5f8=2e-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523136982376}},"pad:observatory.guide.experiencingtime:revs:938":{"changeset":"Z:ec8<1|r=5f8=2f-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523136983116}},"pad:observatory.guide.experiencingtime:revs:939":{"changeset":"Z:ec7<1|q=54p=2y-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523136985465}},"pad:observatory.guide.experiencingtime:revs:94":{"changeset":"Z:f2z<4|19=b50=8-4$","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1518026020196}},"pad:observatory.guide.experiencingtime:revs:940":{"changeset":"Z:ec6<1|r=5f7=3c-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523136987834}},"pad:observatory.guide.experiencingtime:revs:941":{"changeset":"Z:ec5<1|r=5f7=3d-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523136989634}},"pad:observatory.guide.experiencingtime:revs:942":{"changeset":"Z:ec4<1|r=5f7=3c-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523136990138}},"pad:observatory.guide.experiencingtime:revs:943":{"changeset":"Z:ec3>2|10=7ob=1q-2h*d+2j$ts specific temporal practices, dependent on the speed and subject matter of the synchroniz","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523137038352}},"pad:observatory.guide.experiencingtime:revs:944":{"changeset":"Z:ec5>1|8=or*d|1+1$\n","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523146683991}},"pad:observatory.guide.experiencingtime:revs:945":{"changeset":"Z:ec6>lw|9=os*d+lw$The experience of time is an essential element of any form of experience or cognition. Emotions depend to a large extent on expectations, or the potential coming of a future event. Any observing or experience of difference, of presence related to an earlier or later absence, is linked with an experience of time. However, how the actual experience of time is shaped is strongly influenced by all sort of design decisions and implementations, both for humans and machines. Also, the experience of time is a conglomerate of different experiences: time as a common moment, the duration of a certain time, time as cyclic events, historical time, and so on. Researching how humans and machines experience time and negotiate their time experiences is therefore an interesting avenue to explore","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523146684511}},"pad:observatory.guide.experiencingtime:revs:946":{"changeset":"Z:ey2<1|6=38=2u-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523146694264}},"pad:observatory.guide.experiencingtime:revs:947":{"changeset":"Z:ey1<lh|6=38|1-88-d9$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523146765457}},"pad:observatory.guide.experiencingtime:revs:948":{"changeset":"Z:eck<1|7=39|1-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523146767303}},"pad:observatory.guide.experiencingtime:revs:949":{"changeset":"Z:ecj<1|6=38|1-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523146767801}},"pad:observatory.guide.experiencingtime:revs:95":{"changeset":"Z:f2v>1|19=b50=8*5+1$ ","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1518026021458}},"pad:observatory.guide.experiencingtime:revs:950":{"changeset":"Z:eci<44|7=p5-44$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523146855181}},"pad:observatory.guide.experiencingtime:revs:951":{"changeset":"Z:e8e>1|b=1e4*d|1+1$\n","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523146858113}},"pad:observatory.guide.experiencingtime:revs:952":{"changeset":"Z:e8f>2|c=1e5*d|2+2$\n\n","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523146858608}},"pad:observatory.guide.experiencingtime:revs:953":{"changeset":"Z:e8h>uh|c=1e5*d+uh$Humans have developed a time experience which was linked to natural life cycles, but it has been influenced by both technology and social conditions. The first time cycle is the day-night time cycle. Humans do their stuff during the day, but need to sleep. The night is generally the preferred time for sleep, but the availability of artificial light and the need for longer-distance coordination has influenced how humans deal with the day cycle and the place for sleep in it. Time measurement also developed: early time measurement was linked to observation of natural circumstances like sunrise and sunset. Measurement of such sun cycles (which is in fact an earth cycle) through sundials allowed for more precise time referencing, but it is very place and season dependent. More light during summer than winter implied that hours were longer in summer than in winter. Similarly such changes were greater at higher latitudes, while near the equator such changes are limited. In other words, time measured by sundials provided a local common reference of time, but not one over longer distances.","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523146861069}},"pad:observatory.guide.experiencingtime:revs:954":{"changeset":"Z:f2y<1|c=1e5=ad-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523146885499}},"pad:observatory.guide.experiencingtime:revs:955":{"changeset":"Z:f2x<1|c=1e5=ac-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523146886215}},"pad:observatory.guide.experiencingtime:revs:956":{"changeset":"Z:f2w<u|c=1e5=d8-v*d+1$P","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523146950573}},"pad:observatory.guide.experiencingtime:revs:957":{"changeset":"Z:f22>2|c=1e5=d9*d+2$ar","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523146951063}},"pad:observatory.guide.experiencingtime:revs:958":{"changeset":"Z:f24>3|c=1e5=db*d+3$t o","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523146951566}},"pad:observatory.guide.experiencingtime:revs:959":{"changeset":"Z:f27>1|c=1e5=de*d+1$f","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523146952066}},"pad:observatory.guide.experiencingtime:revs:96":{"changeset":"Z:f2w>1|19=b50=9*5+1$ ","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1518026021964}},"pad:observatory.guide.experiencingtime:revs:960":{"changeset":"Z:f28>1|c=1e5=df*d+1$ ","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523146952658}},"pad:observatory.guide.experiencingtime:revs:961":{"changeset":"Z:f29>3|c=1e5=dg*d+3$thi","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523146953159}},"pad:observatory.guide.experiencingtime:revs:962":{"changeset":"Z:f2c>2|c=1e5=dj*d+2$s ","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523146953659}},"pad:observatory.guide.experiencingtime:revs:963":{"changeset":"Z:f2e>2|c=1e5=dl*d+2$ex","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523146954165}},"pad:observatory.guide.experiencingtime:revs:964":{"changeset":"Z:f2g>2|c=1e5=dn*d+2$pe","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523146955307}},"pad:observatory.guide.experiencingtime:revs:965":{"changeset":"Z:f2i>3|c=1e5=dp*d+3$rie","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523146955814}},"pad:observatory.guide.experiencingtime:revs:966":{"changeset":"Z:f2l<1|c=1e5=dr-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523146956366}},"pad:observatory.guide.experiencingtime:revs:967":{"changeset":"Z:f2k>1|c=1e5=dr*d+1$e","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523146956868}},"pad:observatory.guide.experiencingtime:revs:968":{"changeset":"Z:f2l>3|c=1e5=ds*d+3$nce","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523146957369}},"pad:observatory.guide.experiencingtime:revs:969":{"changeset":"Z:f2o>2|c=1e5=dv*d+2$ i","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523146957868}},"pad:observatory.guide.experiencingtime:revs:97":{"changeset":"Z:f2x>1|19=b50=a*5+1$ ","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1518026022467}},"pad:observatory.guide.experiencingtime:revs:970":{"changeset":"Z:f2q>2|c=1e5=dx*d+2$s ","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523146958813}},"pad:observatory.guide.experiencingtime:revs:971":{"changeset":"Z:f2s>1|c=1e5=dz*d+1$m","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523146959316}},"pad:observatory.guide.experiencingtime:revs:972":{"changeset":"Z:f2t>2|c=1e5=e0*d+2$ea","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523146959820}},"pad:observatory.guide.experiencingtime:revs:973":{"changeset":"Z:f2v>1|c=1e5=e2*d+1$s","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523146960407}},"pad:observatory.guide.experiencingtime:revs:974":{"changeset":"Z:f2w>2|c=1e5=e3*d+2$ur","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523146960908}},"pad:observatory.guide.experiencingtime:revs:975":{"changeset":"Z:f2y>5|c=1e5=e5*d+5$ing t","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523146961411}},"pad:observatory.guide.experiencingtime:revs:976":{"changeset":"Z:f33>3|c=1e5=ea*d+3$ime","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523146961910}},"pad:observatory.guide.experiencingtime:revs:977":{"changeset":"Z:f36>1|c=1e5=ed*d+1$.","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523146962413}},"pad:observatory.guide.experiencingtime:revs:978":{"changeset":"Z:f37<1|c=1e5=ee-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523146962918}},"pad:observatory.guide.experiencingtime:revs:979":{"changeset":"Z:f36<1|c=1e5=ef-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523146963945}},"pad:observatory.guide.experiencingtime:revs:98":{"changeset":"Z:f2y<4|1b=b7f=8-4$","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1518026023686}},"pad:observatory.guide.experiencingtime:revs:980":{"changeset":"Z:f35>1|c=1e5=ef*d+1$ ","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523146964455}},"pad:observatory.guide.experiencingtime:revs:981":{"changeset":"Z:f36<1|c=1e5=ef-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523146964959}},"pad:observatory.guide.experiencingtime:revs:982":{"changeset":"Z:f35>1|c=1e5=ef*d+1$E","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523146965463}},"pad:observatory.guide.experiencingtime:revs:983":{"changeset":"Z:f36<c|c=1e5=g4-c$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523146976498}},"pad:observatory.guide.experiencingtime:revs:984":{"changeset":"Z:f2u>2|c=1e5=g4*d+2$on","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523146976997}},"pad:observatory.guide.experiencingtime:revs:985":{"changeset":"Z:f2w>5|c=1e5=g6*d+5$ditio","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523146977498}},"pad:observatory.guide.experiencingtime:revs:986":{"changeset":"Z:f31>2|c=1e5=gb*d+2$ns","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523146977998}},"pad:observatory.guide.experiencingtime:revs:987":{"changeset":"Z:f33>2|c=1e5=tz*d+2$ c","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147086069}},"pad:observatory.guide.experiencingtime:revs:988":{"changeset":"Z:f35>2|c=1e5=u1*d+2$om","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147086561}},"pad:observatory.guide.experiencingtime:revs:989":{"changeset":"Z:f37>6|c=1e5=u3*d+6$mon ti","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147087126}},"pad:observatory.guide.experiencingtime:revs:99":{"changeset":"Z:f2u>1|1b=b7f=8*5+1$ ","meta":{"author":"a.PRabeGfk5jCXUq8V","timestamp":1518026024567}},"pad:observatory.guide.experiencingtime:revs:990":{"changeset":"Z:f3d>2|c=1e5=u9*d+2$me","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147087625}},"pad:observatory.guide.experiencingtime:revs:991":{"changeset":"Z:f3f<ox|8=p6|2-ap-e8$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147093575}},"pad:observatory.guide.experiencingtime:revs:992":{"changeset":"Z:eei<1|9=p7|1-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147095149}},"pad:observatory.guide.experiencingtime:revs:993":{"changeset":"Z:eeh<1|8=p6|1-1$","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147095652}},"pad:observatory.guide.experiencingtime:revs:994":{"changeset":"Z:eeg>1|d=2zi*d|1+1$\n","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147130488}},"pad:observatory.guide.experiencingtime:revs:995":{"changeset":"Z:eeh>1|e=2zj*d|1+1$\n","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147130987}},"pad:observatory.guide.experiencingtime:revs:996":{"changeset":"Z:eei>1jd|e=2zj*d+1jd$This seasonal time experience when the human world was flat reflects the unknown spherical geometry of the earth cycle projected on the flat earth. When humans became aware of earth as a sphere, they responded by flattening and linearising time. Mechanical clocks allowed to unify time lengths and thereby also standardize time. Physical observation and all sorts of economic processes needed such standardized time measurement. Early versions of such time measurement, like hourglasses, existed but remained disconnected from day time measurement. Mechanical clocks allowed to unify different time cycles and scales. It also allowed standardization of time over longer distances, departing from the local sundial time to time zones, which were less strictly linked to the seasonal rhythm of the sun but more to geographical zones. Long distance trade, industrialization and later longdistance communication by electro-magnetic signals (comparable to the speed of light) demanded more geographical coordination. In the nineteenth century, coordination developed through clock networks, with a master clock driving the slave clocks. Nowadays we work with atomic clocks and a global Coordinated Universal Time or UTC as a reference to which geographical time zones are connected. Humans organize their activities accordingly, if necessary by de-linking from the solar rhythm. The borders of time zones diverge very often from the longitudinal lines for economic and political reasons. A similar socialisation and globalisation of time occurred for computers. Where in the early computer age time was set and counted locally by each machine, it is now common to continuously synchronize time over the Internet through time servers and the Network Time Protocol. Humans get woken, cron jobs get triggered, precision bombs get guided, and trains count their delays in measure with the drill signal of the Master Clock of the US Naval Observatory, only differing by tiny variations in latency times.","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147133792}},"pad:observatory.guide.experiencingtime:revs:997":{"changeset":"Z:fxv>1|e=2zj=7j*d+1$ ","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147189828}},"pad:observatory.guide.experiencingtime:revs:998":{"changeset":"Z:fxw>3|e=2zj=7k*d+3$for","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147190330}},"pad:observatory.guide.experiencingtime:revs:999":{"changeset":"Z:fxz>2|e=2zj=7n*d+2$ t","meta":{"author":"a.cfH87GlVK65PsVJR","timestamp":1523147190834}},"pad:observatory.guide.experiencingtime":{"atext":{"text":"% __NOPUBLISH__\n\n% SHOW: tgsoimages.svg hans H\n\n\n% HEADER: How humans and machines negotiate the experience of time\n\nThe experience of time is an essential element of any form of experience or cognition. Emotions depend to a large extent on expectations, or the potential coming of a future event. Any observing or experience of difference, of presence related to an earlier or later absence, is linked with an experience of time. However, how the actual experience of time is shaped is strongly influenced by all sort of design decisions and implementations, both for humans and machines. Also, the experience of time is a conglomerate of different experiences: time as a common moment, the duration of a certain time, time as cyclic events, historical time, and so on. Researching how humans and machines experience time and negotiate their time experiences is therefore an interesting avenue to explore\n\nHumans have developed a time experience which was linked to natural life cycles, but it has been influenced by both technology and social conditions. The first time cycle is the day-night time cycle. Humans do their stuff during the day, but need to sleep. The night is generally the preferred time for sleep, but the availability of artificial light and the need for long-distance coordination has influenced how humans deal with the day cycle and the place for sleep in it. Part of this experience is measuring time. Early time measurement was linked to observation of natural conditions like sunrise and sunset. Measurement of such sun cycles (which is in fact an earth cycle) through sundials allowed for more precise time referencing, but it is very place and season dependent. More light during summer than winter implied that hours were longer in summer than in winter. Similarly such changes were greater at higher latitudes, while near the equator such changes are limited. In other words, time measured by sundials provided a local common reference of time, but not one common time over longer distances.\n\nThis seasonal time experience when the human world was flat reflects the unknown spherical geometry of the earth cycle projected on the flat earth. When humans became aware of earth as a sphere, they responded by flattening and linearising time. Mechanical clocks allowed for the unification of time lengths and thereby also standardized time. Physical observation and all sorts of economic processes needed such standardized time measurement. Early versions of such time measurement, like hourglasses, existed but remained disconnected from day time measurement. Mechanical clocks also allowed for the unification of different time cycles and scales and for the standardization of time over longer distances, departing from the local sundial time to time zones, which were less strictly linked to the seasonal rhythm of the sun and more to geographical zones. Long distance trade, industrialization and later long distance communication by electro-magnetic signals (comparable to the speed of light) demanded more geographical coordination. In the nineteenth century, coordination developed through clock networks, with a master clock driving the slave clocks. Nowadays we work with atomic clocks and a global Coordinated Universal Time or UTC as a reference to which geographical time zones are connected. Humans organize their activities accordingly, if necessary by de-linking from the solar rhythm. The borders of time zones diverge very often from the longitudinal lines for economic and political reasons. A similar socialization and globalization of time occurred for computers. Where in the early computer age time was set and counted locally by each machine, it is now common to continuously synchronize time over the Internet through time servers and the Network Time Protocol. Humans get woken, cron jobs get triggered, precision bombs get guided, and trains count their delays in measure with the drill signal of the Master Clock of the US Naval Observatory, only differing by tiny variations in latency times.\n\nHumans have also developed ways to relate to time on longer scales, which were originally linked to natural rhythms: years, life cycles. Calendar systems are used to determine seasonal agricultural needs (when to plant, when to harvest), while they also make it possible to keep track of life cycles and historical time. Again, such calendar systems have been very diverse and local, but have been slowly fused to a couple of dominant models. Generational or birth, life, and death rhythms, originating from the human experience, have been projected on all sorts of phenomena. Religions tried to explain the origin of everything, while also often predicting the end in apocalyptic visions. The demise of religion at the hand of science did not let such generational visions disappear. They got new expressions in scientific theories of the beginning (big bang, evolution) and end (the heath death of the universe, the end of the earth at the final burnout phase of the sun) of everything. Similar apocalyptic visions are now embedded through technological design decisions (Y2K, the end of Unix-time in 2038). In all versions the end is often linked to the specific design of time (e.g. the end of the Maya calendar, millenarian movements). But just like religious visions can extend their apocalypse in a new versions (e.g. the always near but always delayed apocalypse of the Saints of the last days), machinic accounts of time can always be extended by enlarging the bit size of the time range (cfr the extension of Unix time till AD 292277026596, or safely after the end of the observable universe according to contemporary physics).\n\n## The time(s) of the machine\n\nMachines also have their natural cycle: the vibrating pulses of the internal crystal clock drives the cycles according to which the processor works. All PCs have such a Real Time Clock (RTC), independent of the processor. The time of the computer is linked to this clock cycle, as it consists of counting cyclical ticks. This produces a single cyclical, and completely linear, time rhythm in the hardware. In contrast to the earthly or natural cycles it is without any seasonal difference or interference between several cycles. This makes a computer into a monadic time capsule, disconnected from the outside rhythms. The time experience in the software is in principle based on this local time cycle. However, once computers and software gets linked and networked, they have to negotiate and synchronize their times. To start, time in a computer is no unique or unified experience. Several hardware components and a diverse collection of software organised in layers and processes create a whole ecology of interdependent time experiences. The operating system experiences other software components, and users through them, as a bunch of processes screaming for attention. One of the most pushy interrupts is the timer forcing the processor to count another click and update the system time. An internal kernel process performs the negotiation of time through which the clock count is linked with a system time. This starts already during the booting process, when the operating system is determining the clock signal frequency. PCs have another time-measuring device, the Programmable Interval Timer (PIT), which can be set by the processor at a defined frequency. During a short time indicated by this PIT, the clock cycles of the RTC get counted and the frequency of the RTC gets calculated. Several other timing devices are present in the hardware, synchronized by kernel processes into a range of times available for the operating system and the processes. As said, one of these times is avail\nable as system time and gets communicated to all other processes when demanded. With the advent of the Internet, computers are not monads anymore, but are socialized in the common rhythm broadcasted with the Network Time Protocol. The local system time serves as back up, but gets continuously adapted to the network time. On a Ubuntu/Debian machine these times can be checked with _timedatectl status_. The _timedatectl_ command enables to change these synchronisation processes. The actual synchronisation is done by the _timesyncd_ process and the time servers to be used can be set in the /etc/systemd/timesyncd.conf file. Other Linux flavours work with the older ntp process which can be configured in /etc/ntp.conf. \n\nThe actual process time is completely different from this system time. Most of the time is in the process of making time to do it. Most of the time processes are put on hold and when the scheduler gives them time they can proceed till the next on hold is forced to make time for another process. The scheduler is the big organizer of time in the internal ecology of processes. System time is externally counted and therefore an external global variable to these processes. They can all send a demand to the kernel to get the system time. This gets communicated through the software stack with a range of system calls of the kernel and through the specific time modules of the programming language the software is programmed in. The difference between the actual process time and system time does not appear in how time is perceived by the process. The process only perceives time as the difference between two demands of system time and is oblivious of its time being put on hold. The processor on the other hand spent most of its processing time as idle time: a processor is doing time waiting for slow system components like memory and even slower hard drives and network connections to respond and switches between checking for responses of these laggards. L’enfer du temps perdu, ce sont les autres.\n\nConnecting computers into a network demands new negotiations of time. We have already mentioned the networked and globalised UTC timekeeping. But temporal negotiations happen on all levels of the system. Network protocols have timed choreographies to make connections and proceed with communications, with time out fail-safes to break off when something goes wrong. The timing of an action is an essential component making the difference between a meaningful signal and noise. Using a browser over http to connect to a website, or more accurately the server providing the website on your request, is a process built on a discontinuous time practice. In a REST architecture the server just deals with a queue of requests and does not see continuity over time between certain requests from a single user. New temporal practices have been designed and technically implemented. Through cookies, the server is able to recognise users and their state in time. The border between your computer and servers on the internet becomes fuzzy when external software is dropped on your computer and runs in your web browser. Javascript modules get dropped on your computer and can start performing tasks on demand of an external server, be it rendering a graph or mining digital money. Similarly, the browser becomes a border where time gets negotiated through synchronization processes. What time exactly is depends on the task at hand. Each tool contains its specific temporal practices, dependent on the speed and subject matter of the synchronization process needed. For example, for collaborative document editing tools like Google Docs or Etherpad it is a sequence of versions of the document. A range of strategies have been developed to synchronize the changes made by different users with the least amount of conflict. The Easysync-protocol used by Etherpad constructs a document from changesets. A changeset details the edits made by a user or the difference with the former local version of the text. In other words, the flow of time is represented through a series of changesets which can be summed to the present state. The server keeps a sequence of acknowledged changesets. These acknowledged changesets represent the current common state and get communicated to all clients. Locally each client builds its present state by summing up the acknowledged changesets received from the server, and with the local changesets which are not yet acknowledged. Each client communicates its local changesets, every 500 ms after the latest acknowledgment. As this changeset can be relative to an earlier version the server first recalculates a changeset relative to the current version. Then it sends an acknowledgment to the sender and the changeset to the other clients. Different collaborative document editing tools use different methods to deal with conflicts, which also are dependent on the purpose or content of the document. Conflicts between numeric edits in a collaborative spreadsheet are dealt with differently than conflicts between text edits. But what is common to both is that the present gets continuously constructed both on the server and on the clients and negotiated through the specific protocol. The user can always access its local copy of the text and create its local present, but this local present then gets negotiated with the server to create a common present. And every tool rings also its own disasters and apocalyptic experiences through the collapse of the negotiation process and thereby of the common state.\n\nThis negotiation of time is in the first place a negotiation of the present. But also what is past and future gets constructed in this present. The ordered sequence connected to the system time(s) already imply such a past and future. But the construction of a past consists also of a negotiation of what remains and what gets forgotten. Data gets stored in memory or written to storage devices, while the operating systems assigns time stamps to these traces of the present becoming past and writes other traces to a range of log files. As writers trying to capture their stream of consciousness already experienced, it is impossible to completely store the present for future use as past. There will always be a remainder that escapes and can not be written down. Similarly, an operating systems can not keep a log of all its operations without getting stuck in an infinite regress in which it tries to log its logging operations. What will be the past for a future present needs to be constructed and selected. Everything else gets forgotten. Linux stores its logs in /var/log, while all sorts of programs can create their own logs. All these logs are specific histories, for example of what programs got installed. To get an idea of your past on a Linux system in the file system, you can collect the timestamps of all files with:\n    \n% -----------------\n\nos.system(\"ls -R -l --time-style=long-iso \\\n           > modlistsystem-long-iso.txt\")\nos.system(\"ls -R -lu --time-style=long-iso \\\n           > accesslistsystem-long-iso.txt\")\n\n% SRCCODE:\n\n## Renegotiating time with your computer: sundial network time.\n\nTechnology has been a tool through which humans create distance from natural cycles and design their own time experiences. This means we can critically intervene in the functioning of the technology and develop alternative time practices and experiences. As an example we put forward as a not-yet-existing-proof of concept the possibility to let the computer work according to sundial time. Is it possible to reconfigure the time of the computer and rewire the connections with human and natural rhythms? Would we be able to let the computer function in an older human time experience, e.g. the time of the sundial? How can such sundial experience be built into the system and what would be the impact on the user? Sundial time is a geographically and seasonally localised time. It also includes a distinction between day and night. The night is ‘out of time’. This distinction has been extradited from linear time practices, where the amount of light is just a variable external to steady beat of time. Linear time turns the night into economically productive time. Running your computer on sundial time re-introduces the night in your system.\n\nAn intervention to introduce sundial time in your computer is possible in the whole range of places we discussed where time gets negotiated. The most fundamental but also most difficult route would be to exchange the clock with something reflecting a more natural rhythm. However, as we have seen that this clock has become only a back up tool and that the actual system time is always renegotiated with other systems connected through the network, another renegotiation process can be introduced. Therefore, the most easy way to introduce sundial time would be to reconfigure the _timesyncdor ntp_ processes and make them listen to an alternative sundial time server. Such a sundial time server can be built in different ways. A hardware version can be made of a sundial combined with light sensors, measuring the location of the shadow through the difference in light and deriving the sundial time from this location. This would link the time server to the actual earthly day and night cycle. A simulated version could be a local piece of software which looks up the timing of sunrise and sunset at the specific location and day. Based on this information it recalculates the local sundial time, which it provides through the NTP protocol. The local computer receives this sundial time from the nearest sundial time server and continuously adapts its system time, as it does now already based on UTC. Further, it can be programmed to go into sleep modus during the night and to wake up only when a sunrise signal is received from the time server.\n\nLetting a computer run on sundial time is a conscious effort to disconnect it from human-made linear time and to reconnect it with the old earth-driven cycles and the ancient time experience by humans. The unified time of UTC and the time zones gets broken up into extremely localized time servers, and the difference between day and night gets introduced into the functioning of the computer. This re-enactment of such cycles through the computer will remind human users that the experience of time is a socially negotiated and technically implemented experience. Further, a computer running on sundial time would be a great piece of nannyware nudging the user to live in harmony with his natural environment and a synchronization tool to re-establish the link between the users bio-rhythm and the earthly day and night cycle. It would also be a great reminder why humans tried in the first place to escape from these earthly rhythms through technology and started hacking time. \n\nHans Lammerant, June 2017 - January 2018\n\n% NOTE: -\nThis text was written in and in resistance/conflict to WTC time, which is exemplary for the bureaucratic office time experience. The WTC building boots up at 9AM and is turned off in several steps (at 5PM the air conditioning is turned off, later entrances close) into a wake state. The concierge can let you in and out through the night side entry, but main life support systems remain turned off outside office hours. This wake state continues during the weekend, turning the building into a glass house with limited air in storage. On Monday morning this bureaucratic time capsule revives from its slumber. A suffocating experience, but actually the building is a great piece of nannyware nudging towards a healthy office rhythm without too much extra hours outside the herd work ethic.\n\nSuch office time can also be implemented and negotiated on your local computer. A small Proof of Concept was the adapted bashrc on the etherbox simulating a system getting bored and stealing time. This can be further developed by including a differentiated response during versus outside office hours, aging (slower when timestamp of original install is more remote in time), etc.\n\n\n\n\n\n\n","attribs":"*f+2*d+2+b*f|1+1*a|1+1*a+r*5+2*b|1+1*5|1+1*0|1+1*5+9*0|2+1n*d+lw*0|1+1*d|4+2f9*0|1+1*d|1+19i*0|3+w*d|5+33y*d+2q4*5|1+1*d|2+114*d+4*0|1+1*5|2+l+17*5|1+1+15*0|1+1+18*5|1+1+18*0|1+1*5|2+c*0|1+1*0+1r*d|1+1*0|1+1*d+vs*0|1+1*d|1+1*d+170*0|1+1*d|2+ra*0|1+1*0+g*c+c*0|2+e*6+2*6*7*8+4*6|1+4*0|2+lz*0+ak*a|5+5*0|1+1|1+1"},"pool":{"numToAttrib":{"0":["author","a.I4FbrrCTDQNN8GIf"],"1":["sup","true"],"2":["italic","true"],"3":["author",""],"4":["removed","true"],"5":["author","a.PRabeGfk5jCXUq8V"],"6":["author","a.CLJqMQchPGX2f376"],"7":["bold","true"],"8":["underline","true"],"9":["author","a.EXnmpSWanmHBGv1u"],"10":["author","a.eJQfyC3773rYpTah"],"11":["author","a.nlrHjVXBoDvu2rfr"],"12":["author","a.EYVsjkr8VHlpFIwi"],"13":["author","a.cfH87GlVK65PsVJR"],"14":["author","a.Yuc89brzNTYjBp89"],"15":["author","a.yVCbpaJKjZ0bTelk"]},"nextNum":16},"head":1288,"chatHead":9,"publicStatus":false,"passwordHash":null,"savedRevisions":[]}}