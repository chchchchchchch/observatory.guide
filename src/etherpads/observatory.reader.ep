{"pad:observatory.reader:revs:0":{"changeset":"Z:1>3eh|p+3eh$http://pad.constantvzw.org/p/observatory.programme\n*\nI. WHAT IS SOFTWARE\nViewing software in the long-term context of historical ’numerical artefacts’ is an occasion to reflect on the conditions of its appearance, and allows us to take on current-day questions from a genealogical perspective. What  is software? How did it appear as a concept, in what industrial and governmental circumstances? The selected texts explore the materiality of software, its relation to hardware, language, discourse and abstraction with each their own way of questioning and proposing agendas and assumptions.\n*\n*Herman Hollerith. Art of compiling statistics. U.S. Patent 395,781 filed June 18, 1887, and issued January 8, 1889. https://docs.google.com/viewer?url=patentimages.storage.googleapis.com/pdfs/US395781.pdf\n*Jean-François Blanchette. “A material history of bits.” JASIST 62, 1042-1057. 2011. http://sci-hub.cc/10.1002/asi.21542\n*David A. Patterson and John L. Hennessy. Computer Organization and Design, Fifth Edition: The Hardware/Software Interface (5th ed.). Morgan Kaufmann Publishers Inc, 2013 http://libgen.io/book/index.php?md5=6789996AF423E6863ED0B86CCBFAC6C5 + The Big Picture from the 1993 edition\n*Friedrich Kittler, “There Is No Software,” Ctheory (October 18, 1995), http://www.ctheory.net/articles.aspx?id=74\n*Thomas Haigh, Mark Priestley, Crispin Rope,  Reconsidering the Stored-Program Concept, IEEE Annals of the History of Computing Volume 36, Number 1, January-March 2014  pp. 4-17   http://www.markpriestley.net/pdfs/ReconsideringTheStoredProgramConcept.pdf\n*Wendy Hui Kyong Chun. “Programmability.” In Software Studies: A Lexicon, edited by Matthew Fuller, 224–229. MIT Press, 2008 https://library.memoryoftheworld.org/b/rRXjgzspeNyuoV8VCICtxYCoRA2hdmLbxQ84j797cqHpLFYV\n*Sadie Plant, Zeros + Ones: Digital Women + The New Technoculture. Fourth Estate, 1997 https://library.memoryoftheworld.org/b/MyyZmP7CCAndj-yytMnxJXzz1Iy0Ou7MJj6ooYIla_X-9lk8\n*David Nofre, Mark Priestley, Gerard Alberts, When Technology Became Language: The Origins of the Linguistic Conception of Computer Programming, 1950-1960. in Technology and Culture, 55(1), 40-75. 2014 https://pure.uva.nl/ws/files/2419813/154677_Alberts_Nofre_Priestly_Technol_Culture_55_1_2014.pdf\n*Graham White. Hardware, Software, Humans: Truth, Fiction and Abstraction. HISTORY AND PHILOSOPHY OF LOGIC  vol. 36, (3) 278-301. 2015. http://sci-hub.cc/10.1080/01445340.2015.1059992\n\nII. WHEN AND WHERE IS SOFTWARE\nHow do layers of abstraction have an effect on the way software is produced and vice versa? What is the space-time dimension of IT development or where and when is software made today? The way computer programs and operating systems are manufactured changed tremendously through time, so its production times and places changed too. From military labs via the mega-corporation cubicles to the open-space freelancer utopia, the texts in this chapter trace the ruptures and continuities in software production. From time-sharing to user-space partitions and containerization, this chapter looks at the separations at work. What happens to the material conditions of software production (factory labor, hardware but also minerals) when it evaporates into a cloud?\n\n*John Harwood, The Interface: IBM and the Transformation of Corporate Design, 1945-1976. University of Minnesota Press, 2011 https://library.memoryoftheworld.org/b/NlX1ffac1DyvONvkLk3wz7E7eprm_hvnBBHNIJiJHhCA-ZbD\n*Nathan Ensmenger, The Computer Boys Take Over: Computers, Programmers, and the Politics of Technical Expertise, 2010. https://library.memoryoftheworld.org/b/Yb0dcZCgDz-Og_nNLat_6d55-QljJN3KcXPJ2vKichMtbQO7\n*Ellen Ullman, Close to the Machine: Technophilia and Its Discontents. City Lights Books, 1997 https://library.memoryoftheworld.org/b/kpGqc_907lZUkhEqoPYAqHSy0bvRJpE86Q3riqptvh5NkC-k\n*Femke Snelting. Dividing and sharing. 2009 http://data.constantvzw.org/site/IMG/pdf/divide_share.pdf\n*Hamid Ekbia and Bonnie Nardi, Heteromation and its (dis)contents: The invisible division of labor between humans and machines. First Monday 19(6) · June 2014 http://firstmonday.org/article/view/5331/4090\n*Richard Stallman, Who does that server really serve?. 2016 https://www.gnu.org/philosophy/who-does-that-server-really-serve.en.html\n*Critisticuffs. Free Property - On Social Criticism in the Form of a Software Licence. 2013 https://antinational.org/en/copyleft/\n","meta":{"author":"","timestamp":1512742116868,"atext":{"text":"http://pad.constantvzw.org/p/observatory.programme\n*\nI. WHAT IS SOFTWARE\nViewing software in the long-term context of historical ’numerical artefacts’ is an occasion to reflect on the conditions of its appearance, and allows us to take on current-day questions from a genealogical perspective. What  is software? How did it appear as a concept, in what industrial and governmental circumstances? The selected texts explore the materiality of software, its relation to hardware, language, discourse and abstraction with each their own way of questioning and proposing agendas and assumptions.\n*\n*Herman Hollerith. Art of compiling statistics. U.S. Patent 395,781 filed June 18, 1887, and issued January 8, 1889. https://docs.google.com/viewer?url=patentimages.storage.googleapis.com/pdfs/US395781.pdf\n*Jean-François Blanchette. “A material history of bits.” JASIST 62, 1042-1057. 2011. http://sci-hub.cc/10.1002/asi.21542\n*David A. Patterson and John L. Hennessy. Computer Organization and Design, Fifth Edition: The Hardware/Software Interface (5th ed.). Morgan Kaufmann Publishers Inc, 2013 http://libgen.io/book/index.php?md5=6789996AF423E6863ED0B86CCBFAC6C5 + The Big Picture from the 1993 edition\n*Friedrich Kittler, “There Is No Software,” Ctheory (October 18, 1995), http://www.ctheory.net/articles.aspx?id=74\n*Thomas Haigh, Mark Priestley, Crispin Rope,  Reconsidering the Stored-Program Concept, IEEE Annals of the History of Computing Volume 36, Number 1, January-March 2014  pp. 4-17   http://www.markpriestley.net/pdfs/ReconsideringTheStoredProgramConcept.pdf\n*Wendy Hui Kyong Chun. “Programmability.” In Software Studies: A Lexicon, edited by Matthew Fuller, 224–229. MIT Press, 2008 https://library.memoryoftheworld.org/b/rRXjgzspeNyuoV8VCICtxYCoRA2hdmLbxQ84j797cqHpLFYV\n*Sadie Plant, Zeros + Ones: Digital Women + The New Technoculture. Fourth Estate, 1997 https://library.memoryoftheworld.org/b/MyyZmP7CCAndj-yytMnxJXzz1Iy0Ou7MJj6ooYIla_X-9lk8\n*David Nofre, Mark Priestley, Gerard Alberts, When Technology Became Language: The Origins of the Linguistic Conception of Computer Programming, 1950-1960. in Technology and Culture, 55(1), 40-75. 2014 https://pure.uva.nl/ws/files/2419813/154677_Alberts_Nofre_Priestly_Technol_Culture_55_1_2014.pdf\n*Graham White. Hardware, Software, Humans: Truth, Fiction and Abstraction. HISTORY AND PHILOSOPHY OF LOGIC  vol. 36, (3) 278-301. 2015. http://sci-hub.cc/10.1080/01445340.2015.1059992\n\nII. WHEN AND WHERE IS SOFTWARE\nHow do layers of abstraction have an effect on the way software is produced and vice versa? What is the space-time dimension of IT development or where and when is software made today? The way computer programs and operating systems are manufactured changed tremendously through time, so its production times and places changed too. From military labs via the mega-corporation cubicles to the open-space freelancer utopia, the texts in this chapter trace the ruptures and continuities in software production. From time-sharing to user-space partitions and containerization, this chapter looks at the separations at work. What happens to the material conditions of software production (factory labor, hardware but also minerals) when it evaporates into a cloud?\n\n*John Harwood, The Interface: IBM and the Transformation of Corporate Design, 1945-1976. University of Minnesota Press, 2011 https://library.memoryoftheworld.org/b/NlX1ffac1DyvONvkLk3wz7E7eprm_hvnBBHNIJiJHhCA-ZbD\n*Nathan Ensmenger, The Computer Boys Take Over: Computers, Programmers, and the Politics of Technical Expertise, 2010. https://library.memoryoftheworld.org/b/Yb0dcZCgDz-Og_nNLat_6d55-QljJN3KcXPJ2vKichMtbQO7\n*Ellen Ullman, Close to the Machine: Technophilia and Its Discontents. City Lights Books, 1997 https://library.memoryoftheworld.org/b/kpGqc_907lZUkhEqoPYAqHSy0bvRJpE86Q3riqptvh5NkC-k\n*Femke Snelting. Dividing and sharing. 2009 http://data.constantvzw.org/site/IMG/pdf/divide_share.pdf\n*Hamid Ekbia and Bonnie Nardi, Heteromation and its (dis)contents: The invisible division of labor between humans and machines. First Monday 19(6) · June 2014 http://firstmonday.org/article/view/5331/4090\n*Richard Stallman, Who does that server really serve?. 2016 https://www.gnu.org/philosophy/who-does-that-server-really-serve.en.html\n*Critisticuffs. Free Property - On Social Criticism in the Form of a Software Licence. 2013 https://antinational.org/en/copyleft/\n\n","attribs":"|q+3ei"}}},"pad:observatory.reader:revs:1":{"changeset":"Z:3ei>29z|p=3eh|h+29z$*Seda Gurses and Joris van Hoboken. “Privacy after the Agile Turn.” Open Science Framework, 2016. https://osf.io/27x3q/\n*Christoph Neubert,  “The Tail on the Hard-ware Dog”: Historical Articulations of Computing Machinery, Software, and Services in Irina Kaldrak and Martina Leeker, There is not software, there are just services. 2015 http://meson.press/wp-content/uploads/2015/06/9783957960566-No-Software-just-Services.pdf\n*Somaesthetic and Computer Science: https://en.wikipedia.org/wiki/Somaesthetics   +  https://www.interaction-design.org/literature/book/the-encyclopedia-of-human-computer-interaction-2nd-ed/somaesthetics\n*EWMN (http://noaeshkol.org/about-eshkol-wachman-movement-notation/) and Cybernetics ( https://joanachicau.x-temporary.org/ ) \n\n\nIII. OBSERVATION AND ITS CONSEQUENCES\nThe development of software encompasses a series of practices whose evocative names are increasingly familiar: feedback, report, probe, audit, inspect, scan, diagnose, explore ... What are the systems of knowledge and power within which these activities take place, and what other types of observation are possible? The material in this section is a compendium of probes such as learning by doing; exploring software through the analysis of its language and grammar; critical ethnography and self-testing as a user. In addition, we have included some conventional methods and tools for increasing the performance and security of software. Appropriating them for Techno-galactic software observation first of all turns the gaze onto the process of observation itself, and eventually opens up possibilities to actively interfere with the functioning of software.\n\n*Lilly Irani, Hackathons and the Making of Entrepreneurial Citizenship, 2015 http://sci-hub.bz/10.1177/0162243915578486\n*Kara Pernice (Nielsen Norman Group), Talking with Participants During a Usability Test, January 26, 2014, https://www.nngroup.com/articles/talking-to-users/\n*Matthew G. Kirschenbaum, Extreme Inscription: Towards a Grammatology of the Hard Drive. 2004 http://texttechnology.mcmaster.ca/pdf/vol13_2_06.pdf\n*Alexander R. Galloway, The Poverty of Philosophy: Realism and Post-Fordism, Critical Inquiry. 2013, http://cultureandcommunication.org/galloway/pdf/Galloway,%20Poverty%20of%20Philosophy.pdf\n*Edward Alcosser, James P. Phillips, Allen M. Wolk, How to Build a Working Digital Computer. Hayden Book Company, 1968. https://archive.org/details/howtobuildaworkingdigitalcomputer_jun67\n*Matthew Fuller, \"It looks like you're writing a letter: Microsoft Word\", Nettime, 5 Sep 2000. https://library.memoryoftheworld.org/b/xpDrXE_VQeeuDDpc5RrywyTJwbzD8eatYGHKmyT2A_HnIHKb\n*Barbara P. Aichinger, DDR Memory Errors Caused by Row Hammer. 2015 www.memcon.com/pdfs/proceedings2015/SAT104_FuturePlus.pdf\n*Fangfei Liu, Yuval Yarom, Qian Ge, Gernot Heiser, Ruby B. Lee. Last-Level Cache Side-Channel Attacks are Practical. 2015 http://palms.ee.princeton.edu/system/files/SP_vfinal.pdf\n","meta":{"author":"","timestamp":1512742116956}},"pad:observatory.reader:revs:10":{"changeset":"Z:5ni<3|r=3qb=19-3$","meta":{"author":"a.CR709lDV4oQ6pPzO","timestamp":1523282635502}},"pad:observatory.reader:revs:11":{"changeset":"Z:5nf<4|r=3qb=15-4$","meta":{"author":"a.CR709lDV4oQ6pPzO","timestamp":1523282636031}},"pad:observatory.reader:revs:12":{"changeset":"Z:5nb<3|r=3qb=12-3$","meta":{"author":"a.CR709lDV4oQ6pPzO","timestamp":1523282636529}},"pad:observatory.reader:revs:13":{"changeset":"Z:5n8<2|r=3qb=10-2$","meta":{"author":"a.CR709lDV4oQ6pPzO","timestamp":1523282637030}},"pad:observatory.reader:revs:14":{"changeset":"Z:5n6<1|r=3qb=z-1$","meta":{"author":"a.CR709lDV4oQ6pPzO","timestamp":1523282637530}},"pad:observatory.reader:revs:15":{"changeset":"Z:5n5<1|r=3qb=z-1$","meta":{"author":"a.CR709lDV4oQ6pPzO","timestamp":1523282644341}},"pad:observatory.reader:revs:2":{"changeset":"Z:5oh<2a0|17-5oh|p+3eh$http://pad.constantvzw.org/p/observatory.programme\n*\nI. WHAT IS SOFTWARE\nViewing software in the long-term context of historical ’numerical artefacts’ is an occasion to reflect on the conditions of its appearance, and allows us to take on current-day questions from a genealogical perspective. What  is software? How did it appear as a concept, in what industrial and governmental circumstances? The selected texts explore the materiality of software, its relation to hardware, language, discourse and abstraction with each their own way of questioning and proposing agendas and assumptions.\n*\n*Herman Hollerith. Art of compiling statistics. U.S. Patent 395,781 filed June 18, 1887, and issued January 8, 1889. https://docs.google.com/viewer?url=patentimages.storage.googleapis.com/pdfs/US395781.pdf\n*Jean-François Blanchette. “A material history of bits.” JASIST 62, 1042-1057. 2011. http://sci-hub.cc/10.1002/asi.21542\n*David A. Patterson and John L. Hennessy. Computer Organization and Design, Fifth Edition: The Hardware/Software Interface (5th ed.). Morgan Kaufmann Publishers Inc, 2013 http://libgen.io/book/index.php?md5=6789996AF423E6863ED0B86CCBFAC6C5 + The Big Picture from the 1993 edition\n*Friedrich Kittler, “There Is No Software,” Ctheory (October 18, 1995), http://www.ctheory.net/articles.aspx?id=74\n*Thomas Haigh, Mark Priestley, Crispin Rope,  Reconsidering the Stored-Program Concept, IEEE Annals of the History of Computing Volume 36, Number 1, January-March 2014  pp. 4-17   http://www.markpriestley.net/pdfs/ReconsideringTheStoredProgramConcept.pdf\n*Wendy Hui Kyong Chun. “Programmability.” In Software Studies: A Lexicon, edited by Matthew Fuller, 224–229. MIT Press, 2008 https://library.memoryoftheworld.org/b/rRXjgzspeNyuoV8VCICtxYCoRA2hdmLbxQ84j797cqHpLFYV\n*Sadie Plant, Zeros + Ones: Digital Women + The New Technoculture. Fourth Estate, 1997 https://library.memoryoftheworld.org/b/MyyZmP7CCAndj-yytMnxJXzz1Iy0Ou7MJj6ooYIla_X-9lk8\n*David Nofre, Mark Priestley, Gerard Alberts, When Technology Became Language: The Origins of the Linguistic Conception of Computer Programming, 1950-1960. in Technology and Culture, 55(1), 40-75. 2014 https://pure.uva.nl/ws/files/2419813/154677_Alberts_Nofre_Priestly_Technol_Culture_55_1_2014.pdf\n*Graham White. Hardware, Software, Humans: Truth, Fiction and Abstraction. HISTORY AND PHILOSOPHY OF LOGIC  vol. 36, (3) 278-301. 2015. http://sci-hub.cc/10.1080/01445340.2015.1059992\n\nII. WHEN AND WHERE IS SOFTWARE\nHow do layers of abstraction have an effect on the way software is produced and vice versa? What is the space-time dimension of IT development or where and when is software made today? The way computer programs and operating systems are manufactured changed tremendously through time, so its production times and places changed too. From military labs via the mega-corporation cubicles to the open-space freelancer utopia, the texts in this chapter trace the ruptures and continuities in software production. From time-sharing to user-space partitions and containerization, this chapter looks at the separations at work. What happens to the material conditions of software production (factory labor, hardware but also minerals) when it evaporates into a cloud?\n\n*John Harwood, The Interface: IBM and the Transformation of Corporate Design, 1945-1976. University of Minnesota Press, 2011 https://library.memoryoftheworld.org/b/NlX1ffac1DyvONvkLk3wz7E7eprm_hvnBBHNIJiJHhCA-ZbD\n*Nathan Ensmenger, The Computer Boys Take Over: Computers, Programmers, and the Politics of Technical Expertise, 2010. https://library.memoryoftheworld.org/b/Yb0dcZCgDz-Og_nNLat_6d55-QljJN3KcXPJ2vKichMtbQO7\n*Ellen Ullman, Close to the Machine: Technophilia and Its Discontents. City Lights Books, 1997 https://library.memoryoftheworld.org/b/kpGqc_907lZUkhEqoPYAqHSy0bvRJpE86Q3riqptvh5NkC-k\n*Femke Snelting. Dividing and sharing. 2009 http://data.constantvzw.org/site/IMG/pdf/divide_share.pdf\n*Hamid Ekbia and Bonnie Nardi, Heteromation and its (dis)contents: The invisible division of labor between humans and machines. First Monday 19(6) · June 2014 http://firstmonday.org/article/view/5331/4090\n*Richard Stallman, Who does that server really serve?. 2016 https://www.gnu.org/philosophy/who-does-that-server-really-serve.en.html\n*Critisticuffs. Free Property - On Social Criticism in the Form of a Software Licence. 2013 https://antinational.org/en/copyleft/\n","meta":{"author":"","timestamp":1513950498963}},"pad:observatory.reader:revs:3":{"changeset":"Z:3eh>29z|o=3av=3l|h+29z$*Seda Gurses and Joris van Hoboken. “Privacy after the Agile Turn.” Open Science Framework, 2016. https://osf.io/27x3q/\n*Christoph Neubert,  “The Tail on the Hard-ware Dog”: Historical Articulations of Computing Machinery, Software, and Services in Irina Kaldrak and Martina Leeker, There is not software, there are just services. 2015 http://meson.press/wp-content/uploads/2015/06/9783957960566-No-Software-just-Services.pdf\n*Somaesthetic and Computer Science: https://en.wikipedia.org/wiki/Somaesthetics   +  https://www.interaction-design.org/literature/book/the-encyclopedia-of-human-computer-interaction-2nd-ed/somaesthetics\n*EWMN (http://noaeshkol.org/about-eshkol-wachman-movement-notation/) and Cybernetics ( https://joanachicau.x-temporary.org/ ) \n\n\nIII. OBSERVATION AND ITS CONSEQUENCES\nThe development of software encompasses a series of practices whose evocative names are increasingly familiar: feedback, report, probe, audit, inspect, scan, diagnose, explore ... What are the systems of knowledge and power within which these activities take place, and what other types of observation are possible? The material in this section is a compendium of probes such as learning by doing; exploring software through the analysis of its language and grammar; critical ethnography and self-testing as a user. In addition, we have included some conventional methods and tools for increasing the performance and security of software. Appropriating them for Techno-galactic software observation first of all turns the gaze onto the process of observation itself, and eventually opens up possibilities to actively interfere with the functioning of software.\n\n*Lilly Irani, Hackathons and the Making of Entrepreneurial Citizenship, 2015 http://sci-hub.bz/10.1177/0162243915578486\n*Kara Pernice (Nielsen Norman Group), Talking with Participants During a Usability Test, January 26, 2014, https://www.nngroup.com/articles/talking-to-users/\n*Matthew G. Kirschenbaum, Extreme Inscription: Towards a Grammatology of the Hard Drive. 2004 http://texttechnology.mcmaster.ca/pdf/vol13_2_06.pdf\n*Alexander R. Galloway, The Poverty of Philosophy: Realism and Post-Fordism, Critical Inquiry. 2013, http://cultureandcommunication.org/galloway/pdf/Galloway,%20Poverty%20of%20Philosophy.pdf\n*Edward Alcosser, James P. Phillips, Allen M. Wolk, How to Build a Working Digital Computer. Hayden Book Company, 1968. https://archive.org/details/howtobuildaworkingdigitalcomputer_jun67\n*Matthew Fuller, \"It looks like you're writing a letter: Microsoft Word\", Nettime, 5 Sep 2000. https://library.memoryoftheworld.org/b/xpDrXE_VQeeuDDpc5RrywyTJwbzD8eatYGHKmyT2A_HnIHKb\n*Barbara P. Aichinger, DDR Memory Errors Caused by Row Hammer. 2015 www.memcon.com/pdfs/proceedings2015/SAT104_FuturePlus.pdf\n*Fangfei Liu, Yuval Yarom, Qian Ge, Gernot Heiser, Ruby B. Lee. Last-Level Cache Side-Channel Attacks are Practical. 2015 http://palms.ee.princeton.edu/system/files/SP_vfinal.pdf\n","meta":{"author":"","timestamp":1513950499049}},"pad:observatory.reader:revs:4":{"changeset":"Z:5og>1|o=3av=3l*0|1+1$\n","meta":{"author":"a.CLJqMQchPGX2f376","timestamp":1515500941605}},"pad:observatory.reader:revs:5":{"changeset":"Z:5oh<1|r=3qb=2a-1$","meta":{"author":"a.CR709lDV4oQ6pPzO","timestamp":1523282632794}},"pad:observatory.reader:revs:6":{"changeset":"Z:5og<3|r=3qb=27-3$","meta":{"author":"a.CR709lDV4oQ6pPzO","timestamp":1523282633487}},"pad:observatory.reader:revs:7":{"changeset":"Z:5od<d|r=3qb=1u-d$","meta":{"author":"a.CR709lDV4oQ6pPzO","timestamp":1523282633999}},"pad:observatory.reader:revs:8":{"changeset":"Z:5o0<c|r=3qb=1i-c$","meta":{"author":"a.CR709lDV4oQ6pPzO","timestamp":1523282634499}},"pad:observatory.reader:revs:9":{"changeset":"Z:5no<6|r=3qb=1c-6$","meta":{"author":"a.CR709lDV4oQ6pPzO","timestamp":1523282634999}},"pad:observatory.reader":{"atext":{"text":"http://pad.constantvzw.org/p/observatory.programme\n*\nI. WHAT IS SOFTWARE\nViewing software in the long-term context of historical ’numerical artefacts’ is an occasion to reflect on the conditions of its appearance, and allows us to take on current-day questions from a genealogical perspective. What  is software? How did it appear as a concept, in what industrial and governmental circumstances? The selected texts explore the materiality of software, its relation to hardware, language, discourse and abstraction with each their own way of questioning and proposing agendas and assumptions.\n*\n*Herman Hollerith. Art of compiling statistics. U.S. Patent 395,781 filed June 18, 1887, and issued January 8, 1889. https://docs.google.com/viewer?url=patentimages.storage.googleapis.com/pdfs/US395781.pdf\n*Jean-François Blanchette. “A material history of bits.” JASIST 62, 1042-1057. 2011. http://sci-hub.cc/10.1002/asi.21542\n*David A. Patterson and John L. Hennessy. Computer Organization and Design, Fifth Edition: The Hardware/Software Interface (5th ed.). Morgan Kaufmann Publishers Inc, 2013 http://libgen.io/book/index.php?md5=6789996AF423E6863ED0B86CCBFAC6C5 + The Big Picture from the 1993 edition\n*Friedrich Kittler, “There Is No Software,” Ctheory (October 18, 1995), http://www.ctheory.net/articles.aspx?id=74\n*Thomas Haigh, Mark Priestley, Crispin Rope,  Reconsidering the Stored-Program Concept, IEEE Annals of the History of Computing Volume 36, Number 1, January-March 2014  pp. 4-17   http://www.markpriestley.net/pdfs/ReconsideringTheStoredProgramConcept.pdf\n*Wendy Hui Kyong Chun. “Programmability.” In Software Studies: A Lexicon, edited by Matthew Fuller, 224–229. MIT Press, 2008 https://library.memoryoftheworld.org/b/rRXjgzspeNyuoV8VCICtxYCoRA2hdmLbxQ84j797cqHpLFYV\n*Sadie Plant, Zeros + Ones: Digital Women + The New Technoculture. Fourth Estate, 1997 https://library.memoryoftheworld.org/b/MyyZmP7CCAndj-yytMnxJXzz1Iy0Ou7MJj6ooYIla_X-9lk8\n*David Nofre, Mark Priestley, Gerard Alberts, When Technology Became Language: The Origins of the Linguistic Conception of Computer Programming, 1950-1960. in Technology and Culture, 55(1), 40-75. 2014 https://pure.uva.nl/ws/files/2419813/154677_Alberts_Nofre_Priestly_Technol_Culture_55_1_2014.pdf\n*Graham White. Hardware, Software, Humans: Truth, Fiction and Abstraction. HISTORY AND PHILOSOPHY OF LOGIC  vol. 36, (3) 278-301. 2015. http://sci-hub.cc/10.1080/01445340.2015.1059992\n\nII. WHEN AND WHERE IS SOFTWARE\nHow do layers of abstraction have an effect on the way software is produced and vice versa? What is the space-time dimension of IT development or where and when is software made today? The way computer programs and operating systems are manufactured changed tremendously through time, so its production times and places changed too. From military labs via the mega-corporation cubicles to the open-space freelancer utopia, the texts in this chapter trace the ruptures and continuities in software production. From time-sharing to user-space partitions and containerization, this chapter looks at the separations at work. What happens to the material conditions of software production (factory labor, hardware but also minerals) when it evaporates into a cloud?\n\n*John Harwood, The Interface: IBM and the Transformation of Corporate Design, 1945-1976. University of Minnesota Press, 2011 https://library.memoryoftheworld.org/b/NlX1ffac1DyvONvkLk3wz7E7eprm_hvnBBHNIJiJHhCA-ZbD\n*Nathan Ensmenger, The Computer Boys Take Over: Computers, Programmers, and the Politics of Technical Expertise, 2010. https://library.memoryoftheworld.org/b/Yb0dcZCgDz-Og_nNLat_6d55-QljJN3KcXPJ2vKichMtbQO7\n*Ellen Ullman, Close to the Machine: Technophilia and Its Discontents. City Lights Books, 1997 https://library.memoryoftheworld.org/b/kpGqc_907lZUkhEqoPYAqHSy0bvRJpE86Q3riqptvh5NkC-k\n*Femke Snelting. Dividing and sharing. 2009 http://data.constantvzw.org/site/IMG/pdf/divide_share.pdf\n*Hamid Ekbia and Bonnie Nardi, Heteromation and its (dis)contents: The invisible division of labor between humans and machines. First Monday 19(6) · June 2014 http://firstmonday.org/article/view/5331/4090\n*Richard Stallman, Who does that server really serve?. 2016 https://www.gnu.org/philosophy/who-does-that-server-really-serve.en.html\n*Critisticuffs. Free Property - On Social Criticism in the Form of a Software Licence. 2013 https://antinational.org/en/copyleft/\n*Seda Gurses and Joris van Hoboken. “Privacy after the Agile Turn.” Open Science Framework, 2016. https://osf.io/27x3q/\n*Christoph Neubert,  “The Tail on the Hard-ware Dog”: Historical Articulations of Computing Machinery, Software, and Services in Irina Kaldrak and Martina Leeker, There is not software, there are just services. 2015 http://meson.press/wp-content/uploads/2015/06/9783957960566-No-Software-just-Services.pdf\n*Somaesthetic and Computer Science: https://www.interaction-design.org/literature/book/the-encyclopedia-of-human-computer-interaction-2nd-ed/somaesthetics\n*EWMN (http://noaeshkol.org/about-eshkol-wachman-movement-notation/) and Cybernetics ( https://joanachicau.x-temporary.org/ ) \n\n\nIII. OBSERVATION AND ITS CONSEQUENCES\nThe development of software encompasses a series of practices whose evocative names are increasingly familiar: feedback, report, probe, audit, inspect, scan, diagnose, explore ... What are the systems of knowledge and power within which these activities take place, and what other types of observation are possible? The material in this section is a compendium of probes such as learning by doing; exploring software through the analysis of its language and grammar; critical ethnography and self-testing as a user. In addition, we have included some conventional methods and tools for increasing the performance and security of software. Appropriating them for Techno-galactic software observation first of all turns the gaze onto the process of observation itself, and eventually opens up possibilities to actively interfere with the functioning of software.\n\n*Lilly Irani, Hackathons and the Making of Entrepreneurial Citizenship, 2015 http://sci-hub.bz/10.1177/0162243915578486\n*Kara Pernice (Nielsen Norman Group), Talking with Participants During a Usability Test, January 26, 2014, https://www.nngroup.com/articles/talking-to-users/\n*Matthew G. Kirschenbaum, Extreme Inscription: Towards a Grammatology of the Hard Drive. 2004 http://texttechnology.mcmaster.ca/pdf/vol13_2_06.pdf\n*Alexander R. Galloway, The Poverty of Philosophy: Realism and Post-Fordism, Critical Inquiry. 2013, http://cultureandcommunication.org/galloway/pdf/Galloway,%20Poverty%20of%20Philosophy.pdf\n*Edward Alcosser, James P. Phillips, Allen M. Wolk, How to Build a Working Digital Computer. Hayden Book Company, 1968. https://archive.org/details/howtobuildaworkingdigitalcomputer_jun67\n*Matthew Fuller, \"It looks like you're writing a letter: Microsoft Word\", Nettime, 5 Sep 2000. https://library.memoryoftheworld.org/b/xpDrXE_VQeeuDDpc5RrywyTJwbzD8eatYGHKmyT2A_HnIHKb\n*Barbara P. Aichinger, DDR Memory Errors Caused by Row Hammer. 2015 www.memcon.com/pdfs/proceedings2015/SAT104_FuturePlus.pdf\n*Fangfei Liu, Yuval Yarom, Qian Ge, Gernot Heiser, Ruby B. Lee. Last-Level Cache Side-Channel Attacks are Practical. 2015 http://palms.ee.princeton.edu/system/files/SP_vfinal.pdf\n\n","attribs":"|o+3av+3l*0|1+1|i+28n"},"pool":{"numToAttrib":{"0":["author","a.CLJqMQchPGX2f376"],"1":["author","a.CR709lDV4oQ6pPzO"]},"nextNum":2},"head":15,"chatHead":-1,"publicStatus":false,"passwordHash":null,"savedRevisions":[]},"globalAuthor:a.CLJqMQchPGX2f376":{"colorId":"#eb9e3a","name":"","timestamp":1520015402837,"padIDs":"observatory.reader"},"globalAuthor:a.CR709lDV4oQ6pPzO":{"colorId":"#c88a5d","timestamp":1523348756020,"padIDs":"observatory.reader"}}